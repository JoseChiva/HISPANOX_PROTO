#<AdxTL>@(#)0.0.0.0 $Revision$ Réceptions fournisseurs
#MRR01 - 24/02/2020 - COMP-029 - Campo palet entero
#Se añade esto en el estándar porque en si se pone en el específico el estándar borra el valor de ZPALENT
#ASR - 26/05/2020 COMP-15 campo palet proveedor
#ASR COMP-51 campo Arancel
#---------------------------------------------------------------------------------------------------------
#########################################################################
# SUBPTHA :            Traitement des réceptions                        #
# --------------------------------------------------------------------- #
# Traitement des actions "GOSUB" de l'objet "PTH"                       #
# Les traitements sur champ "Call" se trouvent dans le SUBPTH           #
# Les autres traitements se trouvent dans le SUBPTHB                    #
#########################################################################
# Issue X3-102712 - 2018-07-31 by BAKHA : Disable Non-conformance create/List buttons in Create/Amend mode

$DEFTRANS
#--------------------------------------------------------#
# Avant lecture des transactions de saisie disponibles : #
# Si GFLAG est renseigné la transaction est déja choisie #
# par le menu. Vérifier si elle est valide               #
#--------------------------------------------------------#
Local Shortint OUVFICFLG
If !clalev([F:PTR])  Local File PURTRS [PTR] : Endif
If GFLAG<>""
  Read [PTR] PTR0=6;GFLAG
  If fstat | [F:PTR]ENAFLG=1 Raz GFLAG : Goto FIN_DEFTRANS : Endif
  If [F:PTR]ACSCOD<>"" & GPROFIL<>GSUPER
    If !clalev([F:ACC])  Local File ACCES  [ACC] : OUVFICFLG=1 : Endif
    Read [ACC] CODACC=GUSER;[F:PTR]ACSCOD
    If fstat | [F:ACC]EXEC<>2 Raz GFLAG : Goto FIN_DEFTRANS : Endif
  Endif
Endif
$FIN_DEFTRANS
If OUVFICFLG=1  Close Local File [ACC] : Raz OUVFICFLG : Endif
Return

$VARIANTE
#---------------------------------------#
# Après lecture de chaque transaction : #
# La transaction est-elle valide ?      #
# VARCOD contient le code transaction.  #
# Mettre OK à zéro si non valide.       #
#---------------------------------------#
Read [PTR] PTR0=6;VARCOD
If fstat | [F:PTR]ENAFLG=1 OK=0 : Endif
Return

$SETTRANS
If dim(GSVGWRHOBY)<0 Global Integer GSVGWRHOBY Endif
#-------------------------------------#
# Après sélection de la transaction : #
# GFLAG = code transaction choisie    #
#-------------------------------------#
If clalev ([F:PTR])=0   Local File PURTRS [PTR] : Endif
Read [PTR] PTR0=6;GFLAG : If fstat  Raz [F:PTR] : Endif
#MAE, le 28/01/08, evol GRP_SITE
GGRPFCY = [F:PTR]GFY
# Dépôt entête obligatoire ou non
If GWRHACT=2
  GWRHOBY = [F:PTR]WRHOBY
Else
  GWRHOBY = 1
Endif
GSVGWRHOBY = GWRHOBY
Return

$FILTRE
#-----------------------------#
# Filtre                      #
#-----------------------------#
Default File [PTH]
Return

$AV_IMPRIME
#-----------------------------------------------#
# Avant impression : Chargement nom du document #
#-----------------------------------------------#
#-- Relecture transaction si nécessaire
If [F:PTR]PTRTYP<>6 | [F:PTR]PTRNUM<>GPTRNUM
  Read [PTR] PTR0=6;GPTRNUM : If fstat  Raz [F:PTR] : Endif
Endif
#----- Si document renseigné dans la transaction, prendre celui-la -----#
If [F:PTR]DOCNAM<>"" [L]REPORT1=[F:PTR]DOCNAM : Endif
Return

$AP_IMPRIME
#---------------------------------------------------------------#
# Après une impression il faut être sur d'être sur le bon enreg #
#---------------------------------------------------------------#
Gosub RELIT From GOBJSUB
Return

$AVANT_OUVRE
#---------------------------------------------------------------#
# Si déjà ouvert et si on vient par tunnel il faut réouvrir le  #
# fichier ligne commande à cause du bug sur les "Links" tiroir  #
#---------------------------------------------------------------#
Local Libelle OUVFICPOQ
If clalev([F:POQ]) & GFONC1<>"GESPTH" & !GIMPORT & !GWEBSERV
  Local File PORDERQ [POQ] : OUVFICPOQ=1
Endif
Return

$OUVRE
#Call OUVRE_TRACE("Trace sur réception") From LECFIC
#---------------------------------------------------------------------#
# Dans EXEFNC si pas de site par défaut pour le module concerné       #
# GFCYDEF(0) = premier site de la table sites (modif Beinat 15/12/99) #
# FAUX, il faut toujours avoir GFCYDEF(0) = site par défaut du module #
# même si ce site par défaut est vide !                               #
#---------------------------------------------------------------------#

# Issue 121901 - 2017-05-04 by MUARN : en cas d'OF
maxmem=max(int(maxmem/1024),65536)

# X3-80390 - STWIL - Create a global flag so that we do not prompt for every receipt line
If dim (GNCSHDRFLG) < 0 Global Integer GNCSHDRFLG Endif
GNCSHDRFLG = 0
If dim (GNCSLINFLG) < 0 Global Integer GNCSLINFLG Endif
GNCSLINFLG = 0

If dim(GSVGWRHOBY)<0 Global Integer GSVGWRHOBY Endif
Raz GSOC_ACTIVE
GFCYDEF(0)=GFCYDEF(7)
#----- Sauvegarde variables globales -----#
Gosub SAUV_GLOB From TRTX3GLOB
#-----
GCONSDIA=0 : # Rend saisissable les écrans avec abréviation [DIA]
GPTRNUM=[F:PTR]PTRNUM
#----- Variables locales pour gestion picking liste de gauche, etc ... -----#
Gosub DECL_VAR_LOCAL
#-----
Global Shortint GRELITPTH         : # 1=éxécute Gosub RELIT après modif mvt stock (SB)
Global Char     GPTH_SYMBOL2(30)  : # Sauvegarde de la commande sur la ligne en cours
# Issue X3-100002 - 2019-10-08 by SR: Sauvegarde clé POC
Global Char     GPTH_SYMBOLPOC(30): # Sauvegarde de la POC sur la ligne en cours
                                    # de saisie pour unlock si escape
Global Integer  GPTH_VERROU       : # Sauvegarde du verrou de l'objet
Global Libelle  GPTH_PICK         : # Indique qu'un picking/dépicking est en cours
Global Libelle  GPTH_INDTAX       : # No de la ligne de taxe à traiter
Global Decimal  GPTH_RND          : # Arrondi de la devise de la réception
Global Libelle  GPTH_INDBASTAX(max(func AFNC.ACTIV("PVA"),20))
# Issue 84130 - 2013-03-26 by SR : Landed cost
Local  Integer  WCREOUVSTC : WCREOUVSTC = 0
# Issue X3-25003 - 2017-05-11 by SR : Valorisation des réceptions
Local Integer   WREGPTD     : WREGPTD =2
Local Date      WCREDAT
# End issue X3-25003
If dim(GOUVSTC)<1 : Global Integer  GOUVSTC :WCREOUVSTC = 1 : Endif
# Issue X3-69477 - 2017-12-28 by SR :
Local Char WCRITERE(240)
#----------
Raz GTOTQTY, GQQQQTY, GRRRQTY, GCOEUOM, GPLISTC, GPLIFLG, GPURTRACE
#----- Défini dans le WWAGLOBTC -----#
#Global Libelle  GLOCARGNUM        : # Indicateur Numérotation Argentine
#Global Libelle  GLOCGBRDSC        : # Indicateur Settlement discount
# SR 09.11 Demande 75817
Gosub POINT_SEQDLVSPL From TRTX3
#-----------------------------------------------------#
# Contrôle existence de la structure tarif par défaut #
# et chargement des libellés colonnes par défaut      #
#-----------------------------------------------------#
Call CTLSTRUCT(2,WSTAT) From TRTPRICE
If WSTAT<>0 OK=0 : Return : Endif
GPLISTC="néant" : # Pour forcer l'affichage des entêtes de colonne si structure=""
Call COLREM("C",2,"") From TRTPRICE
Call TYPREM(2,"")     From TRTPRICE
Call TARIFCHGT(6)     From TRTPRICE
#----- chargement des formats évalués -----#
For I=0 To 8 [M:PTH1]FMTREM(I)="NZ:9.2#" : Next I
[M:PTH2]FMTCPLAMT="-NPz:"+GDEVFMT1(max(find(GSYSCUR,GDEVISE(1..GNBDEV)),1))
#-----
If !clalev([M:SDP])   Local Mask SAIDECPRI [SDP]  : Endif
If !clalev([M:SBCK])  Local Mask SBCK      [SBCK] : Endif
#-----
Gosub OPEN_FILES_PTH
#-----
# GA 04/2006 Accès à la table [F:PWS]
Gosub OPEN_FILES From PWSLIB
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
#-----
Gosub OPEN_FILES From TRTX3CPT
#----- Affectations
Gosub OPEN_MTO From MTOLINKLIB
#------------------------------------------------------------#
# Ouverture masques de critères picking, paramétrage encours #
# CCE et CCEW                                                #
#------------------------------------------------------------#
If !clalev([M:AD68])   Local Mask ADRBPR    [AD68]  : Endif
If !clalev([M:PCEX])   Local Mask PCEE      [PCEX]  : Endif
If !clalev([M:PCOW])   Local Mask PCRITORD  [PCOW]  : Endif
If !clalev([M:ORDK])   Local Mask ORDK      [ORDK]  : Endif
If !clalev([M:PTHC])   Local Mask PTH9      [PTHC]  : Endif
If !clalev([F:STCH])   Local File COSTSTCH  [STCH]  : Endif # Issue 84130 - 2012-09-18 by MUARN : landed cost SDC
If !clalev([F:STCF])   Local File COSTSTCF  [STCF]  : Endif # Issue 90991 - 2013-10-23 by MUARN : sdc sites
Raz [M:PCOW], [M:ORDK], [M:PTHC], [M:PCEX]
#----- Ecran de stockage du détail des entrées en stock -----#
If !clalev([M:ENTW])   Local Mask STOENTW   [ENTW]  : Endif
Raz [M:ENTW]
[M:ENTW]WZONPCU = "UOM"
[M:ENTW]WZONQUC = "QTYUOM"
[M:ENTW]WZONCCS = "UOMSTUCOE"
[M:ENTW]WZONQUS = "QTYSTU"
[M:ENTW]WZONSTOUPD = ""
#-- Ecran de travail enreg mvt du document
If clalev([M:STW])=0 Local Mask STOWORK   [STW] : Endif
Raz [M:STW]
Gosub STK_INILOC From STKLOC
#-- GA pour les sorties matières (sous-traitance)
If !clalev([M:ALP])  Local Mask ALLPAR     [ALP]   Endif
If !clalev([M:SOW])  Local Mask STOSORW    [SOW]   Endif
Raz [M:ALP],[M:SOW]
If clalev([M:VALW])=0
    Local Mask STOVALW   [VALW]
Endif
Raz [M:VALW]
[M:VALW]ZONPRI = "[M:PTH1]CPR"
[M:VALW]ZONPRIORD = "[M:PTH1]PRIORD"
If !clalev([M:SVW])
    Local Mask STOVALWORK [SVW]
Endif
#-----
# Issue 84130 - 2012-12-07 by SR : landed cost mise à jour des données structure de cout
If !clalev([M:STCP])  Local Mask STCPAR  [STCP]  : Endif
If !clalev([M:STCDW]) Local Mask STCDW   [STCDW] : Endif
If !clalev([M:STCD])  Local Mask STCD    [STCD]  : Endif
Raz [M:STCDW]
Raz [M:STCD]

GFCY=GFCYDEF(7)
Call GETFCYDEF(GFCY,"[F:FCY]WRHFLG=2") From TRTX3
Gosub CHARG_PARAM From SUBPTHB
If GMESSAGE<>""
  GERR=1 : OK=0 : Return
Endif
GORITITCOL=1

#-----------------------------------------------#
# Déclaration des variables pour tableau lignes #
#-----------------------------------------------#
If !GVTMOD  Gosub DECLARE From TABLEAUX : Endif
Return


$OPEN_FILES_PTH
#------------------------------------------------------#
# Ouverture des fichiers complémentaires à l'objet PTH #
#------------------------------------------------------#
If !clalev([F:TCY])   Local File TABCOUNTRY [TCY]  : Endif
If !clalev([F:PTDB])  Local File PRECEIPTD  [PTDB] : Endif
If !clalev([F:PNH])   Local File PRETURN    [PNH]  : Endif : #VPO 13/01/11 70683
If !clalev([F:PND])   Local File PRETURND   [PND]  : Endif
If !clalev([F:BPR2])  Local File BPARTNER   [BPR2] : Endif
If !clalev([F:POQW])  Local File PORDERQ    [POQW] : Endif
If !clalev([F:POPW])  Local File PORDERP    [POPW] : Endif
If !clalev([F:GCM])   Local File GACM       [GCM]  : Endif
If !clalev([F:MAT])   Local File MATCHTOL   [MAT]  : Endif   # Three way matching GRNA

# Issue 84130 - 2012-12-07 by SR : landed cost SDC
If !clalev([F:STCH])   Local File COSTSTCH   [STCH] : Endif
If !clalev([F:STCD])   Local File COSTSTCD   [STCD] : Endif
If !clalev([F:STCL])   Local File COSTSTCL   [STCL] : Endif
If !clalev([F:FCS])    Local File FRECST     [FCS]  : Endif
If !clalev([F:ICTD])   Local File INCOTERMD  [ICTD] : Endif
If !clalev([F:PID])    Local File PINVOICED  [PID]  : Endif

# Issue 106506 - 2015-04-27 by SR : Landed Cost
If !clalev([F:SHH])    Local File SHIPMENT   [SHH]  : Endif
If !clalev([F:SHD])    Local File SHIPMENTD  [SHD]  : Endif
If !clalev([F:CTRD])   Local File CONTAINERD [CTRD] : Endif

#----- Pour test si présence facture validée sur la ligne de réception -----#
If !clalev([F:PIHB])  Local File PINVOICE   [PIHB] : Endif
If !clalev([F:PIDB])  Local File PINVOICED  [PIDB] : Endif
If !clalev([F:PIX])
  Link [PIDB] With [PIHB] PIH0=[F:PIDB]NUM As [PIX]
Endif
#----- GA pour les sorties matières (sous-traitance)
If !clalev([F:TRU])   Local File TABALLRUL  [TRU]  : Endif
If !clalev([F:SRU])   Local File TABSTORUL  [SRU]  : Endif
If !clalev([F:SWW])   Local File STOWIPW    [SWW]  : Endif
If !clalev([F:STA])   Local File STOALL     [STA]  : Endif : # Allocations
Raz [F:TRU],[F:SRU],[F:SWW],[F:STA]
# Issue X3-25003 - 2017-05-11 by SR : Valorisation des réceptions
If !clalev([F:PSV])    Local File PTDSTKVAL [PSV]  : Endif
If !clalev([F:PSV2])   Local File PTDSTKVAL [PSV2] : Endif
If !clalev([F:PSV3])   Local File PTDSTKVAL [PSV3] : Endif
#-----
If GWRHACT=2
  If !clalev([F:WRH])  Local File WAREHOUSE  [WRH]  : Endif
  If !clalev([F:ITW])  Local File ITMWRH     [ITW]  : Endif
Endif
#-----
If GMODU(8)=2
  If !clalev([F:MTK])  Local File MFGHEADTRK [MTK]  : Endif
  If !clalev([F:MKI])  Local File MFGITMTRK  [MKI]  : Endif
  If !clalev([F:MKI2]) Local File MFGITMTRK  [MKI2] : Endif
  If !clalev([F:MTS])  Local File MFGTRS     [MTS]  : Endif
Endif
#-----------------------------------------------------------#
# Si module vente                                           #
# Fichiers : Livraison vente entête, Livraison vente détail #
#            Commande  vente qté  et Eléments facturation   #
#-----------------------------------------------------------#
If GMODU(5)=2 : # Module ventes actif
  If !clalev([F:BPD])  Local File BPDLVCUST  [BPD]  : Endif : # Adresse client livré
  If !clalev([F:SDH])  Local File SDELIVERY  [SDH]  : Endif : # Livraison vente entête
  If !clalev([F:SDD])  Local File SDELIVERYD [SDD]  : Endif : # Livraison vente détail
  If !clalev([F:SOQ])  Local File SORDERQ    [SOQ]  : Endif : # Commande vente qté
  If !clalev([F:SOH])  Local File SORDER     [SOH]  : Endif : # Commande entête
  If !clalev([F:SOP])  Local File SORDERP    [SOP]  : Endif : # Commande vente qté
  If !clalev([F:BCH])  Local File BETCPY     [BCH]  : Endif : # Correspondance ventes-achats
  If !clalev([F:SFI])  Local File SFOOTINV   [SFI]  : Endif : # Eléments facturation ventes
  If !clalev([F:SVF])  Local File SVCRFOOT   [SVF]  : Endif : # Eléments par documents ventes
  Raz [F:SDD] : # à cause de l'INISEC "PTD"
Endif
#-----
Return

$CLOSE_FILES_PTH
#---------------------------------------------------------------------#
# Fermeture des fichiers pour limitation du nombre de tables ouvertes #
#---------------------------------------------------------------------#
If clalev([F:TCY])   Close Local File [TCY]  : Endif
If clalev([F:PTDB])  Close Local File [PTDB] : Endif
If clalev([F:PNH])   Close Local File [PNH]  : Endif
If clalev([F:PND])   Close Local File [PND]  : Endif
If clalev([F:BPR2])  Close Local File [BPR2] : Endif
If clalev([F:POQW])  Close Local File [POQW] : Endif
If clalev([F:POPW])  Close Local File [POPW] : Endif
If clalev([F:GCM])   Close Local File [GCM]  : Endif
If clalev([F:MAT])   Close Local File [MAT]  : Endif   # Three way matching GRNA
#-----
If clalev([F:PIHB])  Close Local File [PIHB] : Endif
If clalev([F:PIDB])  Close Local File [PIDB] : Endif
If clalev([F:PIX])   Close Local File [PIX]  : Endif
#-----
If clalev([F:TRU])   Close Local File [TRU]    Endif
If clalev([F:SRU])   Close Local File [SRU]    Endif
If clalev([F:SWW])   Close Local File [SWW]    Endif
If clalev([F:STA])   Close Local File [STA]    Endif
#-----
If GWRHACT=2
  If clalev([F:WRH])  Close Local File [WRH]  : Endif
  If clalev([F:ITW])  Close Local File [ITW]  : Endif
Endif
#-----
If GMODU(8)=2
  If clalev([F:MTK])  Close Local File [MTK]  : Endif
  If clalev([F:MKI])  Close Local File [MKI]  : Endif
  If clalev([F:MKI2]) Close Local File [MKI2] : Endif
  If clalev([F:MTS])  Close Local File [MTS]  : Endif
Endif
#-----
If GMODU(5)=2
  If clalev([F:BPD])  Close Local File [BPD]  : Endif
  If clalev([F:SDH])  Close Local File [SDH]  : Endif
  If clalev([F:SDD])  Close Local File [SDD]  : Endif
  If clalev([F:SOQ])  Close Local File [SOQ]  : Endif
  If clalev([F:SOH])  Close Local File [SOH]  : Endif
  If clalev([F:SOP])  Close Local File [SOP]  : Endif
  If clalev([F:BCH])  Close Local File [BCH]  : Endif
  If clalev([F:SFI])  Close Local File [SFI]  : Endif
  If clalev([F:SVF])  Close Local File [SVF]  : Endif
Endif
#-----
Return

$DECL_VAR_LOCAL
#----------------------------------#
# Déclaration des variable locales #
#----------------------------------#
Local  Char     WNUM(GLONVCR), WVCRNUMORI(GLONVCR), WPOQLNK(16), SYMBOLE2(30), PARAMA(40)
Local  Integer  I, J, K, WRETOUR, SAVNOLIGN, WERR, WVCRTYPORI
Local  Integer  WSTAT, WCOD
Local  Shortint NOL, WPICK, SAVNBLIG, WRET
Local  Integer  WOK,WRET1
Local  Libelle  WDEBPICK, WCHGTYP
Local  Date     WCHGDAT
Local  Decimal  WQTE, WQTE1, WQTE2, WQTERES, WSTOCOU, WCOEFF, NEWQTY, NEWMAXQTY, WQTYSTU
Local  Decimal  WORDNOT, WORDATI, WRCPNOT, WRCPATI, WPRIPUR, OLDWCOEFF, ANC_CPR
Local  Decimal  ANC_RCPQTYPUU # Issue 79884 - 2012-02-06 by MUARN : qté recue pour maj cde suite sup récep
Local  Char     WFINRSP(GLONFCY), WUOM(GLONUOM), WCUR(GLONCUR)
# Issue 110325 - 2016-01-12 by SR : FCC sur expé
Local  Libelle  ANC_LINCLEFLG, ANC_LININVFLG, WVERIF,ANC_SHDCLEFLG
Local  Libelle  WTRAIT, WCLEFLG, WCMMFLG
#----- Variables locales pour chargement du compte et de la nature -----#
Local  Char     COMPTE(GLONGAC), NATURE(GLONCNA)
Local  Char     ID1(20)(1..1), ID2(20)(1..3)
Local  Decimal  ANC_WINVDTACST # Issue 85147 - 2012-10-15 by MUARN : modif éléments de facturation
Local  Libelle  WLINCLEFLG     # Issue 82703 - 2013-05-02 by SR : Régul valo stock
Local  Libelle  WSHDCLEFLG     # Issue 110325 - 2016-01-12 by SR : FCC sur expé
Local  Decimal  ANC_QTY        # Issue 102352 - 2014-09-02 by MUARN : modif quantité ligne
Local  Integer  ANC_WINVDTALIN(1..9)  # Issue 101100 - 2014-09-16 by MUARN : code élément de facturation
Local  Decimal  ANC_FCSCPR     # Issue 105027 - 2015-03-02 by MUARN : gestion inter-site
Return

$OUVRE_BOITE
#-------------------------------#
# Après ouverture de la fenêtre #
#-------------------------------#
#----- Chargement des noms des Currbox de chaque tiroir -----#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
Global Char     GBOXPO2(10), GBOXSD2(10),GBOXSHIP1(10), GBOXSHIP2(10), GBOXSHIP4(10)
GBOXPO2   ="GAU_CHE"+num$(find("PO2",OBJLIS(1..8))) : # Picking des commandes
# Issue 99540 - 2014-05-16 by SR : SD4 instead of SD2
GBOXSD2   ="GAU_CHE"+num$(find("SD4",OBJLIS(1..8))) : # Picking des livraisons
GBOXSHIP1 ="GAU_CHE"+num$(find("SHIP1",OBJLIS(1..8))) : # Picking des Expéditions
GBOXSHIP2 ="GAU_CHE"+num$(find("SHIP2",OBJLIS(1..8)))   : # Picking des Expéditions par container
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
GBOXSHIP4 ="GAU_CHE"+num$(find("SHIP4",OBJLIS(1..8)))   : # Picking des pré-réceptions
# End issue 106506
Return

$AFFMASK
#----------------------------------------------------#
# Premier affichage écran après appel de la fonction #
# -------------------------------------------------- #
#         Chargement des formats évalués             #
#----------------------------------------------------#
For I=0 To 8 [M:PTH1]FMTREM(I)="NZ:9.2#" : Next I
[M:PTH2]FMTCPLAMT="-NPz:"+GDEVFMT1(max(find(GSYSCUR,GDEVISE(1..GNBDEV)),1))
Return

$SETBOUT
#-------------------------------------------------------------------------#
# Activation / désactivation des menus (ToolBar) et boutons (bas d'écran) #
# ------------------------------------+---------------------------------- #
# A  Menu texte                       ! Boutons de bas d'écran            #
#      AF : Texte entête              !                                   #
#      AG : Texte pied                !      1  : Complément              #
# C  Menu Adresse                     !      2  : Solde                   #
#      CN : Adresse expéditeur        !                                   #
# B  Menu Option                      !                                   #
#      BH : Critères de picking       !                                   #
#      BI : Infos douanières          !                                   #
#      BJ : Sections analytiques      !                                   #
#      BK : Situation réception       !                                   #
#      BL : Consultation réceptions   !                                   #
#      BM : Transaction de réception  !                                   #
#      BO : Traçabilité pièces        !                                   #
#-------------------------------------+-----------------------------------#
GPTH_VERROU = VERROU : # Sauvegarde du verrou de l'objet
#----- Menus "Texte entête", "Texte pied" et "Critères picking" dans la ToolBar -----#
If GREP="C" | GREP="D" | [M:PTH0]PTHNUM<>""
  CHMEN+="FG"
  #----- Si modif non autorisée, désactivation du picking -----#
  If GCONSULT=0
    If GREP<>"C"
      GBIDC2="M": GFCY=[M:PTH0]PRHFCY : Gosub AUTORIS_OPT From CONTX3
      If GBIDI2 CHMEN+="H" : Endif
    Else
      CHMEN+="H"
    Endif
  Endif
Endif
#----- Menu "Adresse expéditeur" -----#
If GREP<>"" | CLECUR
  CHMEN+="N"
Endif
#----- Menu "Informations douanières" -----#
If CLECUR
  CHMEN+="I"
Endif
#----- Menu sections analytiques entête -----#
If [M:PTH0]PRHFCY<>"" & [M:PTH0]RCPDAT<>[0/0/0] & [M:PTH0]BPSNUM<>"" & GHEADIE<>3
  CHMEN+="J"
Endif
#----- Menu "Consultation réceptions" -----#
If GREP="" & CLECUR
  If clalev([M:CPR2])=0 : CHMEN+="L" : Endif
  CHMEN+="K"
Endif
#----- Menu "Transaction" -----#
CHMEN+="M"
#----- Menu "Traçabilité" -----#
# SYMEU 10/12/2008 : branchement traçabilité pièces
If !find(GREP,"C","D") and !find("CONSPIA",GNAVIG(1..GPILNAV)) Then CHMEN += "O" Endif
#----- Three way matching ------#
 Gosub PTH_SETBOUT From TWMLIB  # Three way matching
#----- Activation menus ToolBar a partir des codes contenus dans CHMEN -----#
Gosub SET_BOUT_SPE From GSAISIE
#----- Suppression des boutons selon contexte (pas de dupli ni changement clé) -----#
If GCONSULT>0
  Call VIREBOUT (CHAINE,"ACDHM") From GOBJET
Else
  Call VIREBOUT (CHAINE,"DH")    From GOBJET
Endif
#----- Complément - solde -----#
If !CLECUR                          : # Aucune réception d'affichée
  Call VIREBOUT (CHAINE,"12")    From GOBJET
Else
  #----- Vérification si réception est pointée directement par une facture -----#
  #If [M:PTH1]INVFLG>1                : # Réception facturée (partiellement ou totalement)
    Look [PID] PID1(2)=2;[M:PTH0]PTHNUM
    [G:PID]currind=1 : [G:PID]currlen=0 : # Réinitialisation clé par défaut
    If !fstat  Call VIREBOUT (CHAINE,"A") From GOBJET : Endif
  #Endif
  #-----
  # Issue 99352 - 2014-04-18 by SR
  If GREP="M" | GREP="C" | GREP="D" | GCONSULT = 1 : # Réception en cours de saisie ou modif interdite
    Call VIREBOUT (CHAINE,"12")  From GOBJET
  Elsif [M:PTH1]INVFLG=3             : # Réception déjà soldée !
    Call VIREBOUT (CHAINE,"2")   From GOBJET
  Elsif [M:PTH0]BETFCY=2 & [M:PTH0]BETCPY <> 2 : # Réception inter-sites non facturables !
    Call VIREBOUT (CHAINE,"2")   From GOBJET
  Endif
Endif
# Issue X3-77876 - 2018-04-03 by JUSYN : Activate Non-conformance creation button
If func AFNC.ACTIV("NCS") and [M:PTH0]PTHNUM <> "" Then
    # Issue X3-102712 - only enable create if not in create/amend/delete/duplicate mode
    If (!find (GREP, "C","D","M","A"))
      CHMEN += "U"
    Endif
    # Enable List if not IN Create mode
    If (!find (GREP, "C","D"))
      CHMEN += "V"
    Endif
Endif
# End issue X3-77876

# X3-80390 - STWIL - Reset the flag so that we do not prompt for every receipt line
GNCSHDRFLG = 0
GNCSLINFLG = 0


Return

$AVANTBOUT
#-----------------------------------#
# Avant exécution des boutons       #
# --------------------------------- #
# 1 = Complément                    #
# 2 = Solde                         #
#                                   #
# F = Texte entête                  #
# G = Texte pied                    #
# N = Adresse expédition            #
# H = Critères picking              #
# I = Infos douanières              #
# J = Sections analytiques          #
# K = Situation                     #
# L = Consultation                  #
# M = Visu transaction de saisie    #
#-----------------------------------#
GPTH_VERROU=VERROU : Raz SYMBOLE2
If [M:PTH0]PTHNUM<>"" & GPTH_VERROU=0 & find(BOUT,"1","2","H","I","J")
  SYMBOLE2="PTH"+[M:PTH0]PTHNUM : Lock=SYMBOLE2
  If !fstat  GPTH_VERROU=1  Else  Raz SYMBOLE2 : Endif
Endif
#-----
Case BOUT
  When "1"     : Gosub AVTBOUT_COMPL
  When "2"     : Gosub AVTBOUT_SOLDE
  When "F","G" : If GREP="" & dim(ACTMOD)>0 & !ACTMOD  GCONSDIA=2 : Endif
  When "N"     : If GREP="" & (!ACTMOD | !VERROU)  GCONSULT=1 : Endif
  When "I","J" : Local  Integer WEXEFLG : WEXEFLG=3
Endcase
If !OK & SYMBOLE2<>""  Unlock=SYMBOLE2 : Raz SYMBOLE2 : Endif
Return

$AVTBOUT_SOLDE
#-----------------------------------------#
# Avant exécution du solde de la réception#
#-----------------------------------------#
#----- Vérification si commande bloquée logiquement -----#
# Issue X3-70579 - 2018-01-26 by SR : Tester GPTH_VERROU et pas VERROU
#If !VERROU  GMESSAGE=mess(10,100,1) : GERR=1 : OK=0 : Return : Endif
If !GPTH_VERROU  GMESSAGE=mess(10,100,1) : GERR=1 : OK=0 : Return : Endif
#----- L'utilisateur a-t-il droit au solde ? -----#
GFCY=[M:PTH0]PRHFCY
GBIDC2="T" : Gosub AUTORIS_OPT From CONTX3
If !GBIDI2  GMESSAGE=mess(2,104,1)  : GERR=1 : OK=0 : Return : Endif
#----- Réception déja soldée ! (par sécurité, le bouton doit être grisé) -----#
If [F:PTH]INVFLG=3
  GMESSAGE=mess(251,194,1) : GERR=1 : OK=0 : Return
Endif
#----- La réception va être entièrement soldée, voulez-vous continuer ? -----#
OK=2 : Call AVERTIR(mess(252,194,1),OK) From GESECRAN
If OK=1  OK=0 : Return : Endif
OK=1
#----- Aucune facture effectuée, voulez-vous solder la réception ? -----#
If [F:PTH]INVFLG=1
  OK=2 : Call OUINON(mess(253,194,1),OK) From GESECRAN
  If OK=1 OK=0 : Return Else OK=1 : Endif
Endif
Return

$AVTBOUT_COMPL
#----------------------------#
# Avant exécution complément #
#----------------------------#
If [F:PTH]PTHNUM<>[M:PTH0]PTHNUM
  Read [PTH]PTH0=[M:PTH0]PTHNUM
  If fstat : Raz [F:PTH] : Endif
Endif
Return

$EXEBOUT
#------------------------------------#
# Après exécution des boutons du bas #
# 1 = Complément                     #
# 2 = Solde                          #
#------------------------------------#
If SYMBOLE2<>""  Unlock=SYMBOLE2 : Raz SYMBOLE2 : Endif
Case BOUT
  When "1"  : Gosub APRBOUT_COMPLE : Gosub RELIT From GOBJSUB
  When "2"  :                        Gosub RELIT From GOBJSUB
Endcase
Return

$APRBOUT_COMPLE
#-------------------------------#
# on verifie si une modif faite #
#-------------------------------#
#& |  [M:PTHC]GPGCOD    <> [F:PTH]GPGCOD  # Issue 89502 - 2013-04-19 by MUARN : landed cost - code regroupement
# FGR 18/07/2014 : X3SUIVI91606 : LICPLATE TRLLICPLATE DPEDAT ETD ARVDAT ETA
If [M:PTHC]BPSINV         <> [F:PTH]BPSINV
& |  [M:PTHC]BPAINV       <> [F:PTH]BPAINV
& |  [M:PTHC]BPRPAY       <> [F:PTH]BPRPAY
& |  [M:PTHC]BPAPAY       <> [F:PTH]BPAPAY
& |  [M:PTHC]DEP          <> [F:PTH]DEP
& |  [M:PTHC]MDL          <> [F:PTH]MDL
& |  [M:PTHC]BPTNUM       <> [F:PTH]BPTNUM
& |  [M:PTHC]TOTGROWEI    <> [F:PTH]TOTGROWEI
& |  [M:PTHC]WEU          <> [F:PTH]WEU
& |  [M:PTHC]TOTNETWEI    <> [F:PTH]TOTNETWEI
& |  [M:PTHC]TOTVOL       <> [F:PTH]TOTVOL
& |  [M:PTHC]VOU          <> [F:PTH]VOU
& |  [M:PTHC]GPGCOD       <> [F:PTH]GPGCOD
& |  [M:PTHC]LICPLATE     <> [F:PTH]LICPLATE
& |  [M:PTHC]TRLLICPLATE  <> [F:PTH]TRLLICPLATE
& |  [M:PTHC]DPEDAT       <> [F:PTH]DPEDAT
& |  [M:PTHC]ETD          <> [F:PTH]ETD
& |  [M:PTHC]ARVDAT       <> [F:PTH]ARVDAT
& |  [M:PTHC]ETA          <> [F:PTH]ETA
  Gosub MAJ_RECEIPT From SUBPTHB
Endif
Return

$STATUT
#-------------------------------------------#
# Après exécution des boutons de la ToolBar #
# F = Texte entête                          #
# G = Texte pied                            #
# N = Adresse expédition                    #
# H = Critères picking                      #
# I = Infos douanières                      #
# J = Sections analytiques                  #
# K = Situation                             #
# L = Consultation                          #
# M = Visu transaction de saisie            #
#-------------------------------------------#
If SYMBOLE2<>""  Unlock=SYMBOLE2 : Raz SYMBOLE2 : Endif
Case BOUT
  When "F"  : Gosub APRESBOUT_TEXTE
  When "G"  : Gosub APRESBOUT_TEXTE
  When "N" : If !GCONSULT & GREP=""
               Gosub MAJ_ADRESSE From TRTACHRCP1
             Endif
  When "H"  : Gosub APRESBOUT_CRIT
  When "I"  : Gosub ACTIV_GSTAENR
  When "J"  : If mkstat=4  WEXEFLG=9 : mkstat=0 : Gosub ACTIV_GSTAENR : Endif
Endcase
Return

#----- Activation du bouton enregistrer -----#
$ACTIV_GSTAENR
#--- WEXEFLG paramètre de l'action
If GREP="" & WEXEFLG=9
  Gosub ENTRE_MODIF From GOBJSUB
Endif
Return

$APRESBOUT_TEXTE
#----------------------------------#
# Texte entête et pied de commande #
#----------------------------------#
If mkstat=4 & GREP="" : # Texte modifié
  Gosub ENTRE_MODIF From GOBJSUB
Endif
#----- Affichage icone texte -----#
If !GIMPORT
  If GREP="" & ([M:PTH0]TEX1<>"" | [M:PTH0]TEX2<>"")
    Call SET_IMAGE(4)   From GESECRAN
  Else
    Call RESET_IMAGE(4) From GESECRAN
  Endif
Endif
Return

$APRESBOUT_CRIT
#---------------------#
# Critères de picking #
#---------------------#
If [M:PTH0]BETFCY<>[M:PCOW]WBETFCY
  Call AM_BETFCY([M:PCOW]WBETFCY) From SUBPTH
  [M:PTH0]BETFCY=[M:PCOW]WBETFCY
  Affzo [PTH0]BETFCY, BETCPY
Endif
If [M:PTH0]BPSNUM<>[M:PCOW]WBPSNUM
  Call AM_BPSNUM([M:PCOW]WBPSNUM) From SUBPTH
  If mkstat : Return : Endif
  [M:PTH0]BPSNUM=[M:PCOW]WBPSNUM
  Affzo [PTH0]BPSNUM
Endif
If !GIMPORT : Gosub TIROIR : Endif
Return

$HINTCLE
#-----------------------------------------------------------#
# Clé pour optimisation du remplissage des listes de gauche #
#-----------------------------------------------------------#
Case currbox
  When GBOXPO2 : HINTLIS(val(right$(GBOXPO2,8)))="POQ2"
  # Issue 99540 - 2014-06-06 by SR
  #When GBOXSD2 : HINTLIS(val(right$(GBOXSD2,8)))="SDD3"
Endcase
Return

$FILGAUCHE
# Issue X3-69477 - 2017-12-28 by SR : Section complètement revue pour :
#Remplissage de FILGAUSUP via ADDCRIT
#Utilisation de CRMUTIL150 pour récupérer les rôles
#----------------------------------------------#
# Filtrer les enregistrements listes de gauche #
#----------------------------------------------#
Raz FILGAUSUP, IFILGAUSUP
GBIDI2=1
If GREP<>"C"
  GBIDC2="M": GFCY=[M:PTH0]PRHFCY : Gosub AUTORIS_OPT From CONTX3
Endif
#----- Si appel par tunnel ou récept.facturé, pas de liste de picking -----#
#If [M:PTH1]INVFLG>2
  #----- Vérification si réception est pointée directement par une facture -----#
  Look [PID] PID1(2)=2;[M:PTH0]PTHNUM
  [G:PID]currind=1 : [G:PID]currlen=0 : # Réinitialisation clé par défaut
  If !fstat  Raz GBIDI2 : Endif
  #-----
#Endif
#-----
If (GREP="C" | GREP="D" | [M:PTH0]PTHNUM<>"") & [M:PTH0]PRHFCY<>"" & GBIDI2=1
  #----- Picking des commandes d'achat -----#
  # Issue 106506 - 2015-04-20 by SR : Landed Cost
  # Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
  If find(currbox,GBOXPO2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)
    #-----
    If find(currbox,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)
      WCRITERE= "[F:SHD]CLEFLG<> 2"                     # non répceptionné
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
# Issue 110671 - 2015-09-01 by SR
#      If [F:SHD]PRCPQTYSTU <> 0
#        FILGAUSUP(2)-= "& [F:SHD]PRCPQTYPUU-[F:SHD]RCPQTYPUU > 0" # Reste à réceptionner
#      Else
#        FILGAUSUP(2)-= "& [F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU > 0" # Reste à réceptionner
#      Endif
# Issue 110325 - 2015-12-01 by SR : Take into account PRCPFLG flag
      WCRITERE= "(([F:SHD]PRCPFLG =2 & ([F:SHD]PRCPQTYPUU-[F:SHD]RCPQTYPUU>0)) |(([F:SHD]PRCPFLG <>2 &[F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU > 0)))"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
# End issue 110671
      # Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
      If currbox = GBOXSHIP1
        WCRITERE= "[F:SHH]SHIPTYP = 1 & [F:SHD]CTRNUM = ''"  # Expédition Sans container
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Elsif currbox = GBOXSHIP2
        WCRITERE= "[F:SHH]SHIPTYP = 1 & [F:SHD]CTRNUM <> ''" # Expédition Avec container
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Elsif currbox = GBOXSHIP4
        WCRITERE= "[F:SHH]SHIPTYP = 2"                       # Pré-réception
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      # Issue 110325 - 2016-08-29 by SR : US120
      If [M:PCOW]WSHIPNUM<>""
         WCRITERE="pat([F:SHD]SHIPNUM,[M:PCOW]WSHIPNUM)<>0"
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      If [M:PCOW]WSHIPDAT<>[0/0/0]
         WCRITERE="[F:SHH]SHIPDAT>=[M:PCOW]WSHIPDAT"
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      If [M:PCOW]WBPTNUM<>""
         WCRITERE="pat([F:SHH]BPTNUM,[M:PCOW]WBPTNUM)<>0"
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      If [M:PCOW]WSHIPUID<>""
         WCRITERE="pat([F:SHH]SHIPUID,[M:PCOW]WSHIPUID)<>0"
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      If [M:PCOW]WTRNNUM<>""
         WCRITERE="pat([F:SHH]TRNNUM,[M:PCOW]WTRNNUM)<>0"
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      # End issue 110325-120
    Else
        WCRITERE= "[F:POQ]SHIQTYPUU=0"                  # Pas de quantité expédiée
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
#    # End issue 106506

    #-----
    WCRITERE="[F:POQ]LINCLEFLG=1 & [F:POQ]WIPSTA<2 & [F:POQ]PRHFCY=[M:PTH0]PRHFCY"
    Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    If [M:PCOW]WBPSNUM<>""
       WCRITERE=" pat([F:POQ]BPSNUM,[M:PCOW]WBPSNUM)<>0"
       Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    If [M:PCOW]WPOHNUM<>""
       WCRITERE="pat([F:POQ]POHNUM,[M:PCOW]WPOHNUM)<>0"
       Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    # Issue 110325 - 2016-08-29 by SR : US120
     If [M:PCOW]WORDDAT<>[0/0/0]
        WCRITERE="[F:POQ]ORDDAT>=[M:PCOW]WORDDAT"
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
     Endif
     # End issue 110325-120
    If [M:PCOW]WVCRNUMORI<>""
       WCRITERE="pat([F:POQ]VCRNUMORI,[M:PCOW]WVCRNUMORI)<>0"
       Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    If [M:PCOW]WITMREF<>""
       WCRITERE="pat([F:POQ]ITMREF,[M:PCOW]WITMREF)<>0"
       Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    If [M:PCOW]WBETFCY=2
        WCRITERE=" [F:POH]BETFCY=2"
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Elsif [M:PTH1]NBLIG>0
        WCRITERE="[F:POH]BETFCY=1"
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    # Issue 106506 - 2015-04-21 by SR : Landed Cost : Lignes déplacées
    If [M:PCOW]WITMREFBPS<>""
      WCRITERE="pat([F:POQ]ITMREFBPS,[M:PCOW]WITMREFBPS)<>0"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif
    If currbox = GBOXPO2 # déjà fait dans le cas des Shipments
      WCRITERE="[F:POQ]LINSTA<>3 & [F:POQ]ORI<>2 & [F:POQ]LINTYP<3"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      #-----
      WCRITERE="(([F:POQ]QTYPUU>[F:POQ]RCPQTYPUU|[F:POQ]QTYSTU>[F:POQ]RCPQTYSTU)|(GRCPORD<>1 & [F:ITM]SCSFLG<>2))"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      WCRITERE="[F:ITM]RCPFLG=2 & [F:POH]APPFLG>2 & [F:POH]SALFCY=''"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Endif

     # Issue 71069 - 2013-08-23 by SR : PJT
    If [M:PTH1]NBLIG > 0 | ([M:PTH1]NBLIG = 0 & [M:PTH0]PJTH <> "")
      If GPJTSNGDOC = G_OUI Then
         WCRITERE='[F:POH]PJTH=[M:PTH0]PJTH'
         Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
    Endif
    # FIN Issue 71069 - 2013-08-23 by SR
    Call AJOUTE_CONDITION_ROLE(FILGAUSUP,IFILGAUSUP,"POH") From CRMUTIL150
  #----- Picking des livraisons de vente inter-sites ou inter-sociétés -----#
  Elsif currbox=GBOXSD2
    #------
    If [M:PCOW]WBPSNUM<>"" & [F:BPR]BPRNUM<>[M:PCOW]WBPSNUM
      Read [BPR] BPR0=[M:PCOW]WBPSNUM : If fstat  Raz [F:BPR] : Endif
    Endif
    If ([M:PCOW]WBETFCY<>2 & [M:PTH1]NBLIG>0) | [M:PTH0]PRHFCY="" | [M:PTH0]BPCORD(0)=""
&                                             | ([M:PCOW]WBPSNUM<>"" & [F:BPR]FCY="")
      WCRITERE="[F:SDD]BPCORD='_'"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
    Else
      WCRITERE="find([F:SDD]BPCORD,[M:PTH0]BPCORD)<>0 & [F:SDD]RCPFLG<>2"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      WCRITERE="[F:SDD]QTYSTU-[F:SDD]RTNQTYSTU-[F:SDD]RCPQTYSTU>0"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      WCRITERE="[F:SDD]LINTYP<11" : # Ne pas proposer le service et la matière fournie
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      If [M:PCOW]WITMREF<>""
        WCRITERE=" pat([F:SDD]ITMREF,[M:PCOW]WITMREF)<>0"
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      # Issue 99540 - 2014-06-06 by SR
     # FILGAUSUP(1) ="& [F:ITM]RCPFLG=2 & [F:SDH]BETFCY=2 & [F:SDH]PRHFCY=[M:PTH0]PRHFCY"
      WCRITERE="[F:SDH]BETFCY=2 & [F:SDH]PRHFCY=[M:PTH0]PRHFCY"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      WCRITERE="[F:SDH]CFMFLG=2 & [F:SDH]SHIDAT<=[M:PTH0]RCPDAT"
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      WCRITERE="[F:SDH]LND<>2"    : # Ne pas proposer les livraisons de prêt
      Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      If [M:PTH0]SALFCY<>""
        WCRITERE="[F:SDH]SALFCY=[M:PTH0]SALFCY"
        Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
      Endif
      # Issue 71069 - 2013-08-23 by SR : PJT
      If [M:PTH1]NBLIG > 0 | ([M:PTH1]NBLIG = 0 & [M:PTH0]PJTH <> "")
         If GPJTSNGDOC = G_OUI Then
          WCRITERE='[F:SDD]PJT=[M:PTH0]PJTH'
          Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
         Endif
      Endif
      # FIN Issue 71069 - 2013-08-23 by SR
      Call AJOUTE_CONDITION_ROLE(FILGAUSUP,IFILGAUSUP,"SDH") From CRMUTIL150
    Endif
  Endif
     # Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
Elsif find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)
  Case currbox
    When GBOXPO2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4 : WCRITERE="[F:POQ]LINCLEFLG=9"
    When GBOXSD2 : WCRITERE="[F:SDD]BPCORD='_'"
   Endcase
   Call ADDCRIT(FILGAUSUP, IFILGAUSUP, "FILGAUSUP", WCRITERE, "&") From GOBJSUB
  # End issue 106506
Endif
Return

$AP_FILGAUCHE
#---------------------------------------------------------#
# Après pagination avant ou arrière d'une liste de gauche #
#---------------------------------------------------------#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4) Return : Endif
WPICK=2 : Gosub ACTUALIS_MARQUAGE
Return

$TIROIR
#---------------------------------------------------#
# Click sur un tiroir                               #
# Désormais entièrement géré par l'objet :          #
# - le remplissage                                  #
# - et l'actualisation (boules bleues)              #
#   par l'appel à la suite de l'action AP_FILGAUCHE #
# ------------------------------------------------- #
# Autres appels par l'applicatif dans les cas       #
# d'abandon, d'après création, d'après modif ...etc #
#---------------------------------------------------#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)  Return : Endif
#-----
ILIS=val(right$(currbox,8))
Gosub REMP_LISGAU From GOBJSUB
Return

$DEB_PICK
#---------------#
# Début picking #
#---------------#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)  Return : Endif
SAVNBLIG=[M:PTH1]NBLIG
Raz WERR
WDEBPICK=1 : GPTH_PICK=1
Return

$PICKE
Local Char SWPJTMSG(250)  # Issue 71069 - 2013-08-23 by SR : PJT
#----------------------#
# Nouvel élément pické #
#----------------------#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)  Return : Endif
If REP=""
  If !CLECUR | !VERROU | !ACTMOD | GCONSULT  OK=0 : Return : Endif
  Gosub AVANT_MOD : If !OK  Return : Endif
Endif

# Issue 89502 - 2013-04-19 by MUARN : landed cost - code regroupement
If WDEBPICK=1 & [M:PTHC]GPGCOD <> [F:POH]GPGCOD & [M:PTHC]GPGCOD <> ""
  Call MESSAGE(func AFNC.MES2(mess(459,194,1),[F:POH]GPGCOD,[M:PTHC]GPGCOD)) From GESECRAN
Endif
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
Case currbox
  When GBOXPO2                       : Gosub PICKE_CDE   From TRTACHPIC1
  When GBOXSD2                       : Gosub PICKE_LIV   From TRTACHPIC1
  When GBOXSHIP1,GBOXSHIP2,GBOXSHIP4 : Gosub PICKE_SHIP  From TRTACHPIC1
Endcase
# End issue 106506

#MRR01 ini.AUREN
If [F:ITM]ZPALENT = 2 Then
  [M:PTH1]ZPALENT(NOL) = 2
Else
  [M:PTH1]ZPALENT(NOL) = 1
Endif

Affzo [M:PTH1]ZPALENT(NOL)
#MRR01 fin.AUREN
#ASR  COMP-15 ini.AUREN
[M:PTH1]ZPALET(NOL) = [F:SHD]ZPALET
Affzo [M:PTH1]ZPALET(NOL)
#ASR  COMP-15 fin.AUREN
#ASR  COMP-51 ini.AUREN
[M:PTH1]CPRCOE(NOL) = [F:SHD]CPRCOE
Affzo [M:PTH1]CPRCOE(NOL)
#ASR  COMP-51 fin.AUREN
Gosub GRISAGE
Return

$DEPICK
#------------------------#
# Nouvel élément dépické #
#------------------------#
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)  Return : Endif
Case currbox
  When GBOXPO2                       : Gosub DEPICK_CDE  From TRTACHPIC1
  When GBOXSD2                       : Gosub DEPICK_LIV  From TRTACHPIC1
  When GBOXSHIP1,GBOXSHIP2,GBOXSHIP4 : Gosub DEPICK_SHIP  From TRTACHPIC1
Endcase
# End issue 106506
Gosub GRISAGE
Return

$FIN_PICK
#-------------#
# Fin picking #
#-------------#
WDEBPICK=0 : GPTH_PICK=0
If REP=""
  If !VERROU
    GMESSAGE=mess(10,100,1) : GERR=1 : OK=0 : Return
  Elsif !CLECUR | !ACTMOD | GCONSULT
    GMESSAGE=mess(9,123,1)  : GERR=1 : OK=0 : Return
  Endif
Endif
#-----
#----- Si pas de zonsui="[M:PTH1]NBLIG(nolign-1)", recalcul global taxe -----#
If [M:PTH1]CLCFLG=2
  If GPIHCALTAX=2 | (dim([M:PTH2]DISVATFLG)>1 & find(2,[M:PTH2]DISVATFLG(0..[M:PTH2]NBFAC-1)))
    For GPTH_INDTAX=1 To [M:PTH2]NBTAX
      Gosub CAL_TAXE_GLOB From SUBPTHD
    Next GPTH_INDTAX
  Endif
  Raz [M:PTH1]CLCFLG
Endif
Gosub PTH_FIN_PICK From TWMLIB
#-----
If !GIMPORT
  Affzo [PTH2]1-99
  Affzo [PTH1]10
  If WPICK=9  WPICK=2 : Affzo [PTH0]1-99 : Gosub TIROIR : Endif
Endif
zonsui="[M:PTH1]NBLIG(max(0,nolign-1))"
Return

$GRISAGE
#-----------------------------------------------------#
# Traitement du grisage et dégrisage des champs écran #
#-----------------------------------------------------#
If [M:PTH1]NBLIG=0 & GREP="C"
  Actzo [PTH0]PRHFCY, BETFCY, BPSNUM, CUR
  If [M:PTH0]CUR<>GLOCALDEV  Actzo [PTH0]CHGTYP : Endif
Else
  Diszo [PTH0]PRHFCY, BETFCY, BPSNUM
Endif
Return

$ACTUALIS_MARQUAGE
#---------------------------------------------------------------#
# Actualisation des éléments "pickés" dans les listes de gauche #
# WPICK : 0 = On ne fait rien                                   #
#         1 = Enlever le marquage des éléments "pickés"         #
#         2 = Marquer les éléments "pickés"                     #
#---------------------------------------------------------------#
If [M:PTH1]NBLIG>0
  For I=0 To [M:PTH1]NBLIG-1
    Gosub MARQUAGE_LIGNE
  Next I
Endif
Return

$MARQUAGE_LIGNE
#--------------------------------------------------------------#
# Actualisation d'un élément "pické" dans les listes de gauche #
# WPICK : 0 = On ne fait rien                                  #
#         1 = Enlever le marquage de l'élément "pické"         #
#         2 = Marquer l'élément "pické"                        #
#     I : indice de la ligne du tableau à traiter              #
#--------------------------------------------------------------#
#----- Si appel depuis Subprog (C_NBLIG.. etc) les variables locales n'existent pas !
If dim(FILGAUSUP)<1
  #----- Variables locales superviseur -----#
  Local Integer FILTREG : FILTREG=1
  Local Integer INDCUR  : INDCUR=1
  Local Integer ICRITERE, IFILROLE, IFILSUITE, IFILGAUSUP
  Local Char    FILTSUP(240), FILROLE(250)(0..2) , FILSUITE(250)(0..5), CRITERE(250)
  Local Char    FILGAUSUP(240)(0..3)
  Local Char    WINPROG(GLONADC), ACTION(20) : WINPROG="WGOPTH"
  Local Char    HINTLIS(10)(0..8)
  #-----
  HINTLIS(val(right$(GBOXPO2,8)))="POQ2"
  # Issue 99540 - 2014-06-06 by SR
  #HINTLIS(val(right$(GBOXSD2,8)))="SDD3"
  #----- Variables locales pour gestion picking liste de gauche -----#
  Local Char     WNUM(GLONVCR), WPOQLNK(16)
  Local Integer  WLIN
  Local Shortint J, K
Endif
#-----
If ([M:PTH1]POHNUM(I)<>"" | [M:PTH1]SDHNUM(I)<>"") & [M:PTH1]CREFLG(I)=0
  J=WPICK
  # Issue 106506 - 2015-04-21 by SR : Landed Cost
  # Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
  If find(currbox,GBOXPO2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)    : #----- Commandes/Shipments -----#
    WNUM=[M:PTH1]POHNUM(I) : WLIN=[M:PTH1]POPLIN(I)
    WPOQLNK=mid$("00000000",1,8-len(num$([M:PTH1]POPLIN(I))))+num$([M:PTH1]POPLIN(I))
&          +mid$("00000000",1,8-len(num$([M:PTH1]POQSEQ(I))))+num$([M:PTH1]POQSEQ(I))
    Read [POQ] POQ3=WNUM;WPOQLNK  : If fstat Raz [F:POQ] : Endif
    Read [POH] POH0=[F:POQ]POHNUM : If fstat Raz [F:POH] : Endif
    Read [ITM] ITM0=[F:POQ]ITMREF : If fstat Raz [F:ITM] : Endif
    Read [ITP] ITP0=[F:POQ]ITMREF;[F:POQ]BPSNUM : If fstat Raz [F:ITP] : Endif
    # Issue 106506 - 2015-04-21 by SR : Landed Cost
    Read [F:SHH] SHH0 = [M:PTH1]SHIPNUM(I) : If fstat : Raz [F:SHH] : Endif
    Read [F:SHD] SHD0 = [M:PTH1]SHIPNUM(I);[M:PTH1]SHIPLIN(I) : If fstat : Raz [F:SHD] : Endif
    # End issue 106506
    If [F:POH]POHNUM="" & [F:ITM]ITMREF="" WPICK=0 : Endif
  Elsif currbox=GBOXSD2  : #----- Livraisons -----#
    WNUM=[M:PTH1]SDHNUM(I) : WLIN=[M:PTH1]SDDLIN(I)
    Read [SDD] SDD0=WNUM;WLIN     : If fstat Raz [F:SDD] : Endif
    Read [SDH] SDH0=[F:SDD]SDHNUM : If fstat Raz [F:SDH] : Endif
    Read [ITM] ITM0=[F:SDD]ITMREF : If fstat Raz [F:ITM] : Endif
    If [F:SDH]SDHNUM="" & [F:ITM]ITMREF="" WPICK=0 : Endif
  Endif
  # Issue 106506 - 2015-04-21 by SR : Landed Cost
  # Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
  If find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)
    Case WPICK
      When 1 : Gosub DEPICK From GOBJSUB
      When 2 : Gosub REPICK From GOBJSUB
    Endcase
  Endif
  WPICK=J
Endif
Return

$DEFLIG
#--------------------------------------------#
# fichier PRECEIPTD   le fichier par defaut  #
# un seul masque dans cet objet              #
#--------------------------------------------#
Default File [PTD]
Default Mask [PTH1]
#------------------------------------------#
#       critère de lecture                 #
#------------------------------------------#
CRIT = 'PTHNUM="'+[M:PTH0]PTHNUM+'"'
#------ fichier details ------#
FICLIG = "PRECEIPTD"
#------- abreviation ------#
ABLIG = "PTD"
#-------zone ligne --------#
ZONLIG = "PTDLIN"
Return

$LIENS_LIG
#-----------------------------#
# Après lecture ligne [F:PTD] #
#-----------------------------#
If dim(NOL)<0 : Local Shortint NOL : Endif
NOL=nolign-1

[M:PTH1]VAT1(NOL)=[F:PTD]VAT(0)
[M:PTH1]VAT2(NOL)=[F:PTD]VAT(1)
[M:PTH1]VAT3(NOL)=[F:PTD]VAT(2)
#-----
If dim([M:PTH1]TSICOD1(NOL))>0 [M:PTH1]TSICOD1(NOL)=[F:PTD]TSICOD(0) : Endif
If dim([M:PTH1]TSICOD2(NOL))>0 [M:PTH1]TSICOD2(NOL)=[F:PTD]TSICOD(1) : Endif
If dim([M:PTH1]TSICOD3(NOL))>0 [M:PTH1]TSICOD3(NOL)=[F:PTD]TSICOD(2) : Endif
If dim([M:PTH1]TSICOD4(NOL))>0 [M:PTH1]TSICOD4(NOL)=[F:PTD]TSICOD(3) : Endif
If dim([M:PTH1]TSICOD5(NOL))>0 [M:PTH1]TSICOD5(NOL)=[F:PTD]TSICOD(4) : Endif
#-----
[M:PTH1]OLDQTYSTU(NOL)=[F:PTD]QTYSTU
If [F:ITP]ITMREF <> [M:PTH1]ITMREF(NOL) | [F:ITP]BPSNUM <> [M:PTH0]BPSNUM
  Read [ITP] ITP0=[M:PTH1]ITMREF(NOL);[M:PTH0]BPSNUM
  If fstat : Raz [F:ITP] : Endif
Endif
If [F:ITM]ITMREF<>[M:PTH1]ITMREF(NOL)
  Read [ITM] ITM0=[M:PTH1]ITMREF(NOL)
  If fstat  Raz [F:ITM] : Endif
Endif
If [F:ITF]ITMREF<>[M:PTH1]ITMREF(NOL) | [F:ITF]STOFCY<>[M:PTH0]PRHFCY
  Read [ITF] ITF0=[M:PTH1]ITMREF(NOL);[M:PTH0]PRHFCY
  If fstat  Raz [F:ITF] : Endif
Endif
If [M:PTH1]POHNUM(NOL)<>""
  If [F:POQ]POHNUM<>[M:PTH1]POHNUM(NOL) |
&    [F:POQ]POPLIN<>[M:PTH1]POPLIN(NOL) |
&    [F:POQ]POQSEQ<>[M:PTH1]POQSEQ(NOL)
    Read [POQ] POQ0=[M:PTH1]POHNUM(NOL);[M:PTH1]POPLIN(NOL);[M:PTH1]POQSEQ(NOL)
    If fstat  Raz [F:POQ]  : Endif
  Endif
  If [M:PTH1]POHTYP(NOL)<>2
    Read [POP] POP0=[F:POQ]POHNUM;[F:POQ]POPLIN;1
    If fstat  Raz [F:POP] : Endif
  Else
    Filter [POP] Where POHNUM=[F:POQ]POHNUM & POPLIN=[F:POQ]POPLIN & POPDAT>=[F:POQ]DEMRCPDAT
    Read [POP] POP1 First : If fstat  Raz [F:POP]  : Endif
    Filter [POP]
  Endif
Endif
# Issue 106506 - 2015-04-23 by SR : Landed Cost
If [M:PTH1]SHIPNUM(NOL) <> ""
  If [F:SHD]SHIPNUM <> [M:PTH1]SHIPNUM(NOL) | [F:SHD]SHIPLIN <> [M:PTH1]SHIPLIN(NOL)
    If [F:SHH]SHIPNUM <> [M:PTH1]SHIPNUM(NOL)
       Read [F:SHH]SHH0 = [M:PTH1]SHIPNUM(NOL)
       If fstat : Raz [F:SHH] : Endif
    Endif
    Read [F:SHD]SHD0 = [M:PTH1]SHIPNUM(NOL); [M:PTH1]SHIPLIN(NOL)
    If fstat : Raz [F:SHD] : Endif
  Endif
  [M:PTH1]WSHDSOLDE (NOL) = [F:SHD]CLEFLG
  If [F:SHD]PRCPQTYSTU <> 0
    [M:PTH1]SHDQTYSTU(NOL) = [F:SHD]PRCPQTYSTU - [F:SHD]RCPQTYSTU
  Else
    [M:PTH1]SHDQTYSTU(NOL) = [F:SHD]SHIQTYSTU - [F:SHD]RCPQTYSTU
  Endif
  [M:PTH1]SHDQTYSTU(NOL) = max(0,[M:PTH1]SHDQTYSTU(NOL))
Endif
# End issue 106506

If [M:PTH1]SDHNUM(NOL)<>"" & [M:PTH1]SDDLIN(NOL)<>0
  Read [SDD] SDD0=[M:PTH1]SDHNUM(NOL);[M:PTH1]SDDLIN(NOL)
  If fstat  Raz [F:SDD] : Endif
Elsif [F:POQ]SDHNUM<>"" & [F:POQ]SDDLIN<>0
  Read [SDD] SDD0=[F:POQ]SDHNUM;[F:POQ]SDDLIN
  If fstat  Raz [F:SDD] : Endif
Endif
If [M:PTH1]STOMGTCOD(NOL)>1
  [M:PTH1]WSTOSAI(NOL)="222222222220222"
  Default Mask [PTH1]
  Call RECSTO_F ("PTH1", [M:PTH0]PRHFCY, 6,
&              [M:PTH0]PTHNUM, [M:PTH1]PTDLIN(NOL), NOL, "") From STKECR
  [M:PTH1]WSTOFLG(NOL)=1
Else
  [M:PTH1]WSTOSAI(NOL)="000222222222222"
  [M:PTH1]WSTOFLG(NOL)=2
Endif
If [F:PTD]QUAFLG=0
  If [M:PTH1]STOMGTCOD(NOL)>1
    If [F:ITP]QUAFLG>0
      [M:PTH1]QUAFLG(NOL)=[F:ITP]QUAFLG
    Elsif [F:ITF]QUAFLG>0
      [M:PTH1]QUAFLG(NOL)=[F:ITF]QUAFLG
    Else
      [M:PTH1]QUAFLG(NOL)=1
    Endif
    If [F:POP]POHNUM<>"" & [M:PTH1]QUAFLG(NOL)<>2
      If [F:POP]QUAFLG=2  [M:PTH1]QUAFLG(NOL)=3  Else  [M:PTH1]QUAFLG(NOL)=1 : Endif
    Endif
  Else
    [M:PTH1]QUAFLG(NOL)=1
  Endif
Endif
If [M:PTH1]POHNUM(NOL)<>""
  [M:PTH1]WSOLDE (NOL) = [F:POQ]LINCLEFLG
#-- Si inter-site on charge les zones pour DL de vente correspondante
  If [M:PTH0]BETFCY =2 & [F:POH]SALFCY<>""
    [M:PTH1]SOHNUM(NOL)=[F:POQ]LINOCNNUM
    [M:PTH1]SOPLIN(NOL)=[F:POQ]OCNLIN
    [M:PTH1]SOQSEQ(NOL)=[F:POQ]OCNSEQ
  Endif
Endif
[M:PTH1]LINFLG(NOL)=1
#- S'il s'agit d'une réception inter-site
If GMODU(5)=2 & [F:SDD]SDHNUM<>""
  [M:PTH1]SDDQTY(NOL) = [F:SDD]QTYSTU
Endif
#----- Chargement comptes et sections analytiques -----#
Call CHARG_ACCCCE(NOL,"[M:PTH1]LINACC","","[M:PTH1]CCE",
&                "PTD",0,[F:PTD]PTHNUM,[F:PTD]PTDLIN,0,"") From TRTX3CPT
#----- Positionnemnt indicateur présence facture -----#
Filter [PIX] Where [PIDB]TYPORI=2
&                & [PIDB]NUMORI=[F:PTD]PTHNUM
&                & [PIDB]LINORI=[F:PTD]PTDLIN
&                & [PIHB]STA=3
Look [PIX] PID1 First
If fstat  [M:PTH1]FACFLG(NOL)=0  Else  [M:PTH1]FACFLG(NOL)=1 : Endif
Filter [PIX]
[M:PTH1]PREQTYPUU(NOL)=[M:PTH1]QTYPUU(NOL)
[M:PTH1]INIQTYPUU(NOL)=[M:PTH1]QTYPUU(NOL)

# Issue 84130 - 2012-09-28 by MUARN : coeff/cout modifiable si pas de SDC
If [M:PTH1]STCNUM(NOL)<> ""
  Diszo [PTH1]CPRAMT(NOL), CPRCOE(NOL), CPR(NOL)
Else
  Actzo [PTH1]CPRAMT(NOL), CPRCOE(NOL), CPR(NOL)
Endif
# Issue 84130 - 2012-11-29 by SR
[M:PTH1]WSTCUPD(NOL)=0
[M:PTH1]WSTCSEQ(NOL)=0
[M:PTH1]MAJFLG (NOL)=0                # hcb X3-117390

Gosub PTH_LIENS From TWMLIB  # Three way matching
Return

$INICRE_LIG
#----------------------------#
# Avant le Write de la ligne #
#----------------------------#
[F:PTD]=[M:PTH0]
Local Shortint NOL : NOL=nolign-1
[F:PTD]BPSINV=[F:PTH]BPSINV
If [F:PTD]LINPRNFLG=0 [F:PTD]LINPRNFLG=1 : Endif
If [F:PTD]LINPSTFLG=0 [F:PTD]LINPSTFLG=1 : Endif
If [F:PTD]CPRCOE   =0 [F:PTD]CPRCOE=1    : Endif
If GACTDEB=2  [F:PTD]LINEECFLG=1 : Endif
#-----
If [F:PTD]SDHNUM<>""
  If [F:SDH]SDHNUM<>[F:PTD]SDHNUM
    Read [SDH] SDH0=[F:PTD]SDHNUM : If fstat  Raz [F:SDH] : Endif
  Endif
  If [F:SDH]ORIFCY=[F:SDH]SALFCY
    [F:PTD]VERFLG=2 : # Indicateur pour rendre facturable la ligne de réception
  Else
    [F:PTD]VERFLG=1 : # Indicateur de version pour DOSMAJ5 (valeur mini)
  Endif
Else
  [F:PTD]VERFLG=1   : # Indicateur de version pour DOSMAJ5 (valeur mini)
Endif
# Alimentation dépôt ligne si renseigné
If dim([M:PTH1]WRH)>0 & [M:PTH1]WRH(nolign-1)<>""
  [F:PTD]WRH = [M:PTH1]WRH(nolign-1)
Else
  [F:PTD]WRH = ""
Endif
#-----
[F:PTD]NETPRIPUU=arr([M:PTH1]NETPRI(NOL)/[M:PTH1]UOMPUUCOE(NOL),10^-GDECPRI)
Gosub CHARG_PTD From SUBPTHB
Gosub POSITION_QTYINV
#----- Création ou duplication texte ligne -----#
Gosub CHARG_TEXT_LIGNE
[F:PTD]CPY=GSOCIETE
Return

$INIMOD_LIG
#------------------------------#
# Avant le Rewrite de la ligne #
#------------------------------#
[F:PTD]=[M:PTH0]
If dim(ANC_LININVFLG)<0
  Local Libelle  ANC_LININVFLG : ANC_LININVFLG=[F:PTD]LININVFLG
  Local Decimal  ANC_CPR       : ANC_CPR      =[F:PTD]CPR
  # Issue 102352 - 2014-09-02 by MUARN : modif quantité ligne
  Local Decimal ANC_QTY        : ANC_QTY      =[F:PTD]QTYSTU
  # Issue 105027 - 2015-03-02 by MUARN : gestion inter-site
  Local Decimal ANC_FCSCPR     : ANC_FCSCPR   =[F:PTD]FCSCPR

  # Issue 101100 - 2014-09-16 by MUARN : inutile fait en amont SUPLIG
  # Issue 85147 - 2012-10-15 by MUARN : modif éléments de facturation
  #Local Decimal  ANC_WINVDTACST
  #Raz ANC_WINVDTACST
  #For I=1 To 9
  #    If [F:PTH]INVDTALIN2(I-1)<>0
  #      Read [PFI] PFI0=[F:PTH]INVDTALIN2(I-1) : If fstat Raz [F:PFI] : Endif
  #      If [F:PFI]NPRVLT=2
  #        ANC_WINVDTACST+=evalue("[F:PTD]DISCRGAMT"+num$(I))
  #      Endif
  #    Endif
  #Next I

Endif
#-----
Local Shortint NOL : NOL=nolign-1
If [F:PTD]STOMGTCOD>1 & (ANC_LININVFLG<>[F:PTD]LININVFLG | ANC_CPR<>[F:PTD]CPR)
  If [F:PTD]LINTYP<3
    Gosub REVALOR_STOCK From TRTACHRCP1
  Endif
Endif
Gosub CHARG_PTD From SUBPTHB
[F:PTD]NETPRIPUU=arr([M:PTH1]NETPRI(NOL)/[M:PTH1]UOMPUUCOE(NOL),10^-GDECPRI)
Gosub POSITION_QTYINV
#----- Création ou duplication texte ligne -----#
Gosub CHARG_TEXT_LIGNE
Return

$VALLIG
#----------------------------------------------------------------------#
# Traitements complémentaires ligne commande                           #
# SIGN vaut +1 en création ou modification                             #
#      vaut -1 en annulation (TRTLIG="A") ou avant modif. (TRTLIG="M") #
#----------------------------------------------------------------------#
Gosub LECT_FICLIG : # Lecture fichiers ligne pour MAJ

#-----
Case SIGN
  When  1 : Gosub CRELIG
  When -1 : Gosub SUPLIG
  When Default
Endcase
If GOK<1 & GPURTRACE=2  & dim(TRA)>0
  TRA=1
Endif
If GOK<1  Return : Endif

# X3-80390 - STWIL - If we have deleted the purchase receipt line delete this document in any non-conformances
If func AFNC.ACTIV ("NCS") & TRTLIG = "A" & GOK > 0
    Local Integer ERROR
    [L]ERROR = func NCSDOCHDR_CSTD.DELETE_NON_CONFORMANCE_DOCUMENTS (1, [F:PTD]PTHNUM, [F:PTD]PTDLIN)
    If [L]ERROR
        GMESSAGE = mess(47,3702,1)
        OK = 0
        GOK = 0
        Return
    Endif
Endif

#----- Mise à jour statistiques ligne réception -----#
Call VALSTA ("PTD",SIGN) From SUBPS2

# VPO 22/11/10 69286 la classe F a été perdu par SPE ou point d'entree
#----- Repositionnement du contexte s'il a été perdu -----#
Gosub DEFLIG       From SUBPTHA
Return

$CRELIG
#--------------------------------------#
# Après Write de la ligne de réception #
#--------------------------------------#

If [M:PTH1]CREFLG(nolign-1)<>0  Goto MODLIG  : Endif
#----- Ecriture des comptes et sections de la ligne de réception -----#
Call ENREG_ACCCCE(nolign-1,"[M:PTH1]LINACC","[M:PTH1]LINDSP","[M:PTH1]CCE","PTD",
&                 0,[F:PTD]PTHNUM,[F:PTD]PTDLIN,0,"",TRTLIG) From TRTX3CPT
If GOK<1  Return : Endif
#----- Achat de sous-traitance -----# # GA 05/2009 on doit passer quelle que soit la valeur [F:PTD]LINTYP (testé + tard)
If find([F:PTD]VCRTYPORI,10,36)
  Gosub MAJ_SOUS_TRAIT From SUBPTHC : # Màj sous-traitance OF ou EO + maj stock
  If GOK<1  Return : Endif
Elsif [F:PTD]STOMGTCOD>1 & [F:PTD]LINTYP<3
#----- Mise à jour stock sauf sous-traitance avec maj OF ou EO -----#
  Gosub MAJ_FICH_STOCK   : # Màj fichiers stock
  If GOK<1  Return : Endif
Else                                                                                     # hcb 86563
  If [M:PTH0]BETFCY = 2                                                                  # hcb 86563
     Call STKMAJITV([M:PTH0]SALFCY,[F:PTD]ITMREF,1,[F:PTD]QTYSTU,-1,WRET1) From STKLIB   # hcb 86563
     If WRET1 : GOK = 0 : Return : Endif                                                 # hcb 86563
  Endif                                                                                  # hcb 86563
Endif
# Issue 84130 - 2012-11-22 by SR : landed cost mise à jour des données structure de cout
If [M:PTH1]WSTCSEQ(nolign-1) <> 0
   Call STCMAJ("PTH1",nolign-1,6,[F:PTD]PTHNUM,[F:PTD]PTDLIN,
&             0,WRET1) From STCLIB
   If WRET1 : GOK = 0 : Return : Endif
Endif
#----- Mise à jour livraisons de vente si inter-site -----#
If [M:PTH1]SDHNUM(nolign-1)<>""
  # Issue 73512 - 2011-05-13 by SR : buffer SDD perdu suite à MAJ_FIC_STOCK
  If [F:SDD]SDHNUM <> [M:PTH1]SDHNUM(nolign-1) | [F:SDD]SDDLIN <>[M:PTH1]SDDLIN(nolign-1)
      Read [SDD]SDD0=[M:PTH1]SDHNUM(nolign-1);[M:PTH1]SDDLIN(nolign-1)
      If fstat : Raz [F:SDD] : Endif
  Endif
  If [F:SDD]SDHNUM <> ""
     Gosub MAJ_SDD          : # Màj fichier ligne livraison ventes
     If GOK<1  Return : Endif
  Endif
Endif
#----- Mise à jour cde achat, encours, cumuls art-site, alloc ctm et mvts fourn -----#
Gosub MAJ_FICHIERS_LIGNE : # Màj autres fichiers (principalement achats)
If GOK<1  Return : Endif
# Issue 83801 - 2012-07-27 by SR : Possibilité de lancer des traitements supplémentaires
[V]GPOINT="CUSADDTRT" : Gosub ENTREE From EXEFNC
If GOK<1  Return : Endif
Return

$MODLIG
#--------------------------------------------#
# Après Rewrite de la ligne de réception PTD #
#--------------------------------------------#
# Issue 84130 - 2013-02-06 by MUARN : landed cost
Local  Integer WRET1
#----- Ecriture des comptes et sections de la ligne de réception -----#
Call ENREG_ACCCCE(nolign-1,"[M:PTH1]LINACC","[M:PTH1]LINDSP","[M:PTH1]CCE","PTD",
&                 0,[F:PTD]PTHNUM,[F:PTD]PTDLIN,0,"",TRTLIG) From TRTX3CPT
If GOK<1  Return : Endif

# Issue 84130 - 2012-11-22 by SR : landed cost mise à jour des données structure de cout
If [M:PTH1]WSTCSEQ(nolign-1) <> 0
   Call STCMAJ("PTH1",nolign-1,6,[F:PTD]PTHNUM,[F:PTD]PTDLIN,
&             0,WRET1) From STCLIB
   If WRET1 : GOK = 0 : Return : Endif
Endif

#--- Issue 104503
Read [ITV]ITV0=[F:PTD]ITMREF;[F:PTD]PRHFCY
If !fstat & [F:PTD]RCPDAT>=[F:ITV]LASPURDAT
  [F:ITV]LASPURPRI=[F:PTD]CSTPUR
  [F:ITV]LASPURDAT=[F:PTD]RCPDAT
  Call REWITV From STKLIB
Endif
#---

#----- Mise à jour livraisons de vente si inter-site -----#
If [M:PTH1]SDHNUM(nolign-1)<>""
  # Issue 73512 - 2011-05-13 by SR : buffer SDD perdu suite à MAJ_FIC_STOCK
  If [F:SDD]SDHNUM <> [M:PTH1]SDHNUM(nolign-1) | [F:SDD]SDDLIN <>[M:PTH1]SDDLIN(nolign-1)
      Read [SDD]SDD0=[M:PTH1]SDHNUM(nolign-1);[M:PTH1]SDDLIN(nolign-1)
      If fstat : Raz [F:SDD] : Endif
  Endif
  If [F:SDD]SDHNUM <> ""
      Gosub MAJ_SDD          : # Màj fichier ligne livraison ventes
      If GOK<1  Return : Endif
  Endif
Endif
#----- Mise à jour cde achat, encours, cumuls art-site, alloc ctm et mvts fourn -----#
Gosub MAJ_FICHIERS_LIGNE : # Màj autres fichiers (principalement achats)
If GOK<1  Return : Endif
# Issue 83801 - 2012-07-27 by SR : Possibilité de lancer des traitements supplémentaires
[V]GPOINT="CUSADDTRT" : Gosub ENTREE From EXEFNC
If GOK<1  Return : Endif
Return

$SUPLIG
#------------------------------------------------------#
# Avant Delete ou Rewrite de la ligne de réception PTD #
# Soustraction statistiques ligne facture              #
#------------------------------------------------------#
If dim(SAVNOLIGN)    <0  Local Integer  SAVNOLIGN        : Endif
If dim(I)            <0  Local Integer  I                : Endif
If dim(WRETOUR)      <0  Local Integer  WRETOUR          : Endif
If dim(WQTE)         <0  Local Decimal  WQTE             : Endif
If dim(WQTE1)        <0  Local Decimal  WQTE1            : Endif
If dim(WQTE2)        <0  Local Decimal  WQTE2            : Endif
If dim(WQTERES)      <0  Local Decimal  WQTERES          : Endif
If dim(WORDNOT)      <0  Local Decimal  WORDNOT          : Endif
If dim(WORDATI)      <0  Local Decimal  WORDATI          : Endif
If dim(WRCPNOT)      <0  Local Decimal  WRCPNOT          : Endif
If dim(WRCPATI)      <0  Local Decimal  WRCPATI          : Endif
If dim(WPRIPUR)      <0  Local Decimal  WPRIPUR          : Endif
If dim(WFINRSP)      <0  Local Char     WFINRSP(GLONFCY) : Endif
If dim(WCUR)         <0  Local Char     WCUR   (GLONCUR) : Endif
If dim(WUOM)         <0  Local Char     WUOM   (GLONUOM) : Endif
If dim(ANC_LINCLEFLG)<0  Local Libelle  ANC_LINCLEFLG    : Endif
If dim(ANC_LININVFLG)<0  Local Libelle  ANC_LININVFLG    : Endif
If dim(ANC_SHDCLEFLG)<0  Local Libelle  ANC_SHDCLEFLG    : Endif # Issue 110325 - 2016-01-12 by SR : FCC sur expé
If dim(ANC_CPR)<0        Local Decimal  ANC_CPR          : Endif
If dim(WSTOCOU)      <0  Local Decimal  WSTOCOU          : Endif
If dim(NEWQTY)       <0  Local Decimal  NEWQTY           : Endif
If dim(NEWMAXQTY)    <0  Local Decimal  NEWMAXQTY        : Endif
If dim(WCOEFF)       <0  Local Decimal  WCOEFF           : Endif
If dim(WVERIF)       <0  Local Libelle  WVERIF           : Endif
If dim(WTRAIT)       <0  Local Libelle  WTRAIT           : Endif
If dim(WCLEFLG)      <0  Local Libelle  WCLEFLG          : Endif
If dim(WCMMFLG)      <0  Local Libelle  WCMMFLG          : Endif
If dim(WCHGTYP)      <0  Local Libelle  WCHGTYP          : Endif
If dim(WCHGDAT)      <0  Local Date     WCHGDAT          : Endif
If dim(ANC_WINVDTACST)<0 Local Decimal  ANC_WINVDTACST   : Endif # Issue 85147 - 2012-10-17 by MUARN : modif élément facturation
If dim(ANC_QTY)<0        Local Decimal  ANC_QTY          : Endif # Issue 101100 - 2014-07-17 by MUARN : suite moteur retour stock
If dim(ANC_WINVDTALIN)<0 Local Integer  ANC_WINVDTALIN(1..9)   : Endif # Issue 101100 - 2014-09-16 by MUARN : code élément de facturation
If dim(WACC)         <0  Local Integer  WACC             : Endif  # Issue 102803 - 2015-02-06 by CCC : run accounting (0=no)
If dim(ANC_FCSCPR)   <0  Local Decimal  ANC_FCSCPR       : Endif  # Issue 105027 - 2015-03-02 by MUARN : gestion inter-site
#-----
If TRTLIG="A"
  ANC_LININVFLG=[F:PTD]LININVFLG
  ##VPO 11/01/11 70572 supprimer les comptes et sections apres maj des stocks
  ###----- Suppression comptes et sections de la ligne de réception -----#
  ##Call ENREG_ACCCCE(0,"","","","PTD",0,[F:PTD]PTHNUM,[F:PTD]PTDLIN,0,"","A") From TRTX3CPT
  ##If GOK<1  Return : Endif
  #----- Suppression du texte ligne si nécessaire -----#
  If left$([F:PTD]LINTEX,3)="PTD"
    Call SUP_CLOB([F:PTD]LINTEX,GBIDI2) From TRTX3TEX
  Endif
  Raz WACC
  #----- Achat de sous-traitance -----# # GA 05/2009 on doit passer quelle que soit la valeur [F:PTD]LINTYP (testé + tard)
  If find([F:PTD]VCRTYPORI,10,36)
    Gosub MAJ_SOUS_TRAIT From SUBPTHC  : # Màj sous-traitance OF ou EO
    If GOK<1  Return : Endif
    If [F:PTD]VCRTYPORI=36  # For WO, accounting is done during tracking deletion
        WACC = 1
    Endif
  #----- Mise à jour stock sauf sous-traitance -----#
  Elsif [F:PTD]STOMGTCOD>1 & [F:PTD]LINTYP<3
    #--- Bug 73441
    # Si on vient du moteur de modif, la maj des stocks est déjà faite
    If dim([L]WENM)<=0 | (dim([L]WENM)>0 & WENM<>1)
    #---
      WVERIF=2 : Gosub VERIF_QTEALL From SUBPTH : # Vérification stock dispo et qtés allouées
      If GMESSAGE<>""
        Call ECR_TRACE(GMESSAGE,1) From GESECRAN : GPURTRACE=2 : Raz GMESSAGE
        GOK=0 : Return
      Endif
      Gosub MAJ_FICH_STOCK                      : # Màj fichiers stock
      If GOK<1  Return : Endif
      WACC=1
    #--- Bug 73441
    Endif
  Endif
  # Issue 102803 - 2015-02-06 by CCC
  If SIGN=-1 & WACC
    Gosub CLOSE_FILES_PTH
    # Issue X3-71033 - 2018-03-15 by MUARN : nolign est perdu
    SAVNOLIGN=nolign
    # Accounting is done for every items of the receipt line (entered and issued)
    Call FUNSTKACC([F:PTH]PRHFCY,"",6,[F:PTD]PTHNUM,[F:PTD]PTDLIN) From STKLIB
    # Issue X3-71033 - 2018-03-15 by MUARN : nolign est perdu
    nolign=SAVNOLIGN
    Gosub OPEN_FILES_PTH

    If GOK<1  Return : Endif
  Endif
  ##VPO 11/01/11 70572 supprimer les comptes et sections apres maj des stocks
  #----- Suppression comptes et sections de la ligne de réception -----#
  Call ENREG_ACCCCE(0,"","","","PTD",0,[F:PTD]PTHNUM,[F:PTD]PTDLIN,0,"","A") From TRTX3CPT
  If GOK<1  Return : Endif
  # Issue 84130 - 2012-11-22 by SR : landed cost mise à jour des données structure de cout
  Delete [F:STCD] Where VCRTYP =6 & VCRNUM = [F:PTD]PTHNUM & VCRLIN =[F:PTD]PTDLIN
  If fstat=1 GOK=-1 : GLOCK="$COSTSTCD"-[F:PTD]PTHNUM-num$([F:PTD]PTDLIN) : Return : Endif
Elsif TRTLIG="M"
  ANC_LININVFLG=[F:PTD]LININVFLG
  ANC_CPR      =[F:PTD]CPR
  # Issue 101100 - 2014-07-17 by MUARN : retour moteur modif stock
  ANC_QTY      =[F:PTD]QTYSTU
  # Issue 105027 - 2015-03-02 by MUARN : gestion inter-site
  ANC_FCSCPR   =[F:PTD]FCSCPR

  # Issue 93971 - 2013-10-29 by MUARN : modif éléments de facturation
  Local Decimal  ANC_WINVDTACST
  Raz ANC_WINVDTACST
  For I=1 To 9
      # Issue 101100 - 2014-09-16 by MUARN : contrôle en fonction des codes éléments sauvegardés
      #If [F:PTH]INVDTALIN2(I-1)<>0
      If ANC_WINVDTALIN(I) <>0
        # Issue 101100 - 2014-09-16 by MUARN : contrôle en fonction des codes éléments sauvegardés
        #Read [PFI] PFI0=[F:PTH]INVDTALIN2(I-1) : If fstat Raz [F:PFI] : Endif
        Read [PFI] PFI0=ANC_WINVDTALIN(I) : If fstat Raz [F:PFI] : Endif
        If [F:PFI]NPRVLT=2
          ANC_WINVDTACST+=evalue("[F:PTD]DISCRGAMT"+num$(I))
        Endif
      Endif
  Next I

  # Issue 105027 - 2015-03-02 by MUARN : gestion inter-site, il faut mettre à jour le CPR
  # basé sur le valo de sortie non connu en modification
  # si réception directe inter site uniquement proratisation sans charge ni élément de facturation
  If [M:PTH0]BETFCY=2 & [M:PTH0]BETCPY =1
    # Issue X3-193575 - 2020-05-06 by MUARN : même sur réception directe
    # réception de livraison vente
    #If [M:PTH1]POHNUM(nolign-1)<>""
      # on a modifié les charges
      If ANC_FCSCPR <> [M:PTH1]FCSCPR(nolign-1)
        [M:PTH1]LINAMTCPR(nolign-1) = arr([M:PTH1]LINAMTCPR(nolign-1) - ANC_FCSCPR + [M:PTH1]FCSCPR(nolign-1),10^-GDECPRI)
        [M:PTH1]CPR(nolign-1) = arr([M:PTH1]LINAMTCPR(nolign-1) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
      Endif

      # on a a modifié les éléments de fscturation
      If dim(WINVDTACST)<0 Local Decimal WINVDTACST   : Endif
      Raz WINVDTACST
      For I=1 To 9
        If [F:PTH]INVDTALIN2(I-1)<>0
          Read [PFI] PFI0=[F:PTH]INVDTALIN2(I-1) : If fstat Raz [F:PFI] : Endif
          If [F:PFI]NPRVLT=2
            WINVDTACST+=evalue("[M:PTH1]DISCRGAMT"+num$(I)+"(nolign-1)")
          Endif
        Endif
      Next I
      If ANC_WINVDTACST <> WINVDTACST & GBETFCYCST=2
        # pas de changement de quantité, seuls les éléments de facturation sont modifié
        If ANC_QTY = [M:PTH1]QTYSTU(nolign-1)
          [M:PTH1]LINAMTCPR(nolign-1) = arr([M:PTH1]LINAMTCPR(nolign-1) - ANC_WINVDTACST + WINVDTACST,10^-GDECPRI)
          [M:PTH1]CPR(nolign-1) = arr([M:PTH1]LINAMTCPR(nolign-1) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
        # modification de la quantité et donc des éléments de facturations répartis sur les lignes
        Else
          # recalcul de LINAMTCPR
          [M:PTH1]LINAMTCPR(nolign-1) = ([M:PTH1]LINAMTCPR(nolign-1) - ANC_WINVDTACST)/ANC_QTY*[M:PTH1]QTYSTU(nolign-1) + WINVDTACST
          # recalcul de CPR en fonction du nouveau LINAMTCPR, et arrondi
          # les calculs sont exécutés de cette manière afin de limiter les erreurs d'arrondi
          [M:PTH1]CPR(nolign-1) = arr([M:PTH1]LINAMTCPR(nolign-1) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
          # Issue X3-193575 - 2020-05-06 by MUARN : add arr
          # déduction de LINAMTCPR en fonction du nouveau CPR, pour la cohérence
          [M:PTH1]LINAMTCPR(nolign-1) = arr([M:PTH1]CPR(nolign-1) * [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
        Endif
      Endif

      # on a changé la quantité
      If (ANC_WINVDTACST = WINVDTACST | GBETFCYCST=1) & ANC_FCSCPR = [M:PTH1]FCSCPR(nolign-1) & ANC_QTY<>[M:PTH1]QTYSTU(nolign-1)
        [M:PTH1]LINAMTCPR(nolign-1) = arr([M:PTH1]CPR(nolign-1) * [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
      Endif
    # réception directe et changement de quantité
    #Elsif [M:PTH1]POHNUM(nolign-1) = "" & ANC_QTY<>[M:PTH1]QTYSTU(nolign-1)
    #  [M:PTH1]LINAMTCPR(nolign-1) = arr([M:PTH1]CPR(nolign-1) * [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
    #Endif
    # End issue X3-193575
  Endif

  # Issue 79371 - 2012-01-19 by VPO : on part dans les alloc sans qté
  If dim([L]WOLDQTYSTU) > 0
    WOLDQTYSTU=[F:PTD]QTYSTU
  Endif
  #----- Cas particulier où l'on modifie le texte en le supprimant -----#
  If [M:PTH1]LINTEX(nolign-1)="" & left$([F:PTD]LINTEX,3)="PTD"
    Call SUP_CLOB([F:PTD]LINTEX,GBIDI2) From TRTX3TEX
  Endif
Endif
#VPO 10/02/11 71387 MAJ_SDD doit être fait dans tous les cas et pas seulement en annulation
#----- Mise à jour livraisons de vente si inter-site -----#
If [F:PTD]SDHNUM<>""
  # Issue 73512 - 2011-05-13 by SR : buffer SDD perdu suite à MAJ_FIC_STOCK
  If [F:SDD]SDHNUM <> [F:PTD]SDHNUM | [F:SDD]SDDLIN <>[F:PTD]SDDLIN
      Read [SDD]SDD0=[F:PTD]SDHNUM;[F:PTD]SDDLIN
      If fstat : Raz [F:SDD] : Endif
  Endif
  If [F:SDD]SDHNUM <> ""
      Gosub MAJ_SDD          : # Màj fichier ligne livraison ventes
      If GOK<1  Return : Endif
  Endif
Endif
#----- Mise à jour cde achat, encours, cumuls art-site, alloc ctm et mvts fourn -----#
Gosub MAJ_FICHIERS_LIGNE : # Màj autres fichiers (principalement achats)
If GOK<1  Return : Endif
If TRTLIG="M" Return : Endif : # Si modif c'est fini
Return

$LECT_FICLIG
#--------------------------------------------------------------------#
# Lecture des fichiers associés à la ligne pour utilisation dans MàJ #
#   - ITMMASTER   [ITM] : Articles                                   #
#   - ITMFACILITY [ITF] : Articles-Sites                             #
#   - ITMBPS      [ITP] : Articles-Fournisseur                       #
#   - PORDER      [POH] : Commandes d'achat entêtes                  #
#   - PORDERQ     [POQ] : Commandes d'achat lignes quantité          #
#   - PORDERP     [POP] : Commandes d'achat lignes prix              #
#   - PORDERC     [POC] : Commandes d'achat lignes article-contrat   #
#   - SDELIVERY   [SDD] : Livraison ventes  lignes                   #
# Issue 106506 - 2015-04-21 by SR : Landed Cost                      #
#   - SHIPMENT    [SHH] : Expédition                                 #
#   - SHIPMENTD   [SHD] : Expédition ligne                           #
#--------------------------------------------------------------------#
#----- lecture article si nécessaire -----#
If [F:ITM]ITMREF<>[F:PTD]ITMREF
  Read [ITM] ITM0=[F:PTD]ITMREF
  If fstat  Raz [F:ITM] : Endif
Endif
#----- Lecture article site si nécessaire -----#
If [F:ITF]ITMREF<>[F:PTD]ITMREF | [F:ITF]STOFCY<>[F:PTD]PRHFCY
  Read [ITF] ITF0=[F:PTD]ITMREF;[F:PTD]PRHFCY
  If fstat  Raz [F:ITF] : Endif
Endif
#----- Lecture article fournisseur si nécessaire -----#
If [F:ITP]ITMREF<>[F:PTD]ITMREF | [F:ITP]BPSNUM<>[F:PTH]BPSNUM
  Read [ITP] ITP0=[F:PTD]ITMREF;[F:PTH]BPSNUM
  If fstat  Raz [F:ITP] : Endif
Endif
#----- Lecture entête commande si nécessaire -----#
If [F:PTD]POHNUM<>""
  # Issue X3-25003 - 2018-04-23 by SR : Relire systématiquement à cause du Superviseur qui peut charge POHNUM sans le reste
  #If [F:POH]POHNUM<>[F:PTD]POHNUM
    Read [POH] POH0=[F:PTD]POHNUM
    If fstat  Raz [F:POH] : Endif
  #Endif
  # Issue X3-25003 - 2017-05-15 by SR : Valorisation des stocks
  WCREDAT = [F:POH]CREDAT
  #----- Lecture ligne commande quantités si nécessaire -----#
  #----- A relire obligatoirement à cause du picking    -----#
  Read [POQ] POQ0=[F:PTD]POHNUM;[F:PTD]POPLIN;[F:PTD]POQSEQ
  If fstat  Raz [F:POQ] : Endif
  #----- Lecture ligne commande prix si nécessaire -----#
  If [F:POH]POHTYP<>2
    If [F:POP]POHNUM<>[F:PTD]POHNUM | [F:POP]POPLIN<>[F:PTD]POPLIN | [F:POP]POPSEQ<>1
      Read [POP] POP0=[F:PTD]POHNUM;[F:PTD]POPLIN;1
      If fstat  Raz [F:POP] : Endif
    Endif
  Else
    Filter [POP] Where POHNUM=[F:PTD]POHNUM & POPLIN=[F:POQ]POPLIN & POPDAT>=[F:POQ]DEMRCPDAT
    Read [POP] POP1 First
    Filter [POP]
    If fstat  Raz [F:POP]  : Endif
    #----- Lecture ligne article commande ouverte si nécessaire -----#
    If [F:POC]POHNUM<>[F:PTD]POHNUM | [F:POC]POPLIN<>[F:PTD]POPLIN
      Read [POC] POC0=[F:PTD]POHNUM;[F:PTD]POPLIN
      If fstat  Raz [F:POC] : Endif
    Endif
  Endif
Else
  Raz [F:POH], [F:POQ], [F:POP], [F:POC]
  # Issue X3-25003 - 2017-05-15 by SR : Valorisation des stocks
  WCREDAT = [F:PTH]CREDAT
Endif
#----- Lecture ligne livraison vente si nécessaire -----#
#----- A relire obligatoirement à cause du picking -----#
If [F:PTD]SDHNUM<>""
  Read [SDD]SDD0=[F:PTD]SDHNUM;[F:PTD]SDDLIN
  If fstat  Raz [F:SDD] : Endif
Endif
# Issue 106506 - 2015-04-21 by SR : Landed Cost
# Lecture du Shipment si nécessaire
If [F:PTD]SHIPNUM<> ""
  If [F:SHH]SHIPNUM<>[F:PTD]SHIPNUM
    Read [F:SHH]SHH0 = [F:PTD]SHIPNUM
    If fstat : Raz [F:SHH] : Endif
    # Issue X3-25003 - 2017-05-15 by SR : Valorisation des stocks
    WCREDAT = [F:POH]CREDAT
  Endif
  If [F:SHD]SHIPNUM<>[F:PTD]SHIPNUM | [F:SHD]SHIPLIN <> [F:PTD]SHIPLIN
    Read [F:SHD]SHD0 = [F:PTD]SHIPNUM;[F:PTD]SHIPLIN
    If fstat : Raz [F:SHH] : Endif
  Endif
Else
  Raz [F:SHH], [F:SHD]
Endif
# End issue 106506
Return

$MAJ_FICH_STOCK
Local Decimal  WCPRAMT, WUOMSTUCOE # Issue 70985 - 2012-04-10 by MUARN : landedcost
Local Char     LECCMAJ(GLONICVVAL), LECCMIN(GLONICVVAL)
#---------------------------------#
# Mise à jour des fichiers stocks #
#---------------------------------#
If dim(WRETOUR)<0  Local Integer  WRETOUR  : Endif
If dim(WPRI)<0     Local Decimal  WPRI     : Endif
#------------------------------------------------------#
# Point d'entrée MAJRCPSTO appelé en import uniquement #
#   Permet de ne pas effectuer les entrées en stock    #
# ---------------------------------------------------- #
# WUPDSTOFLG = 0 Pas de mise à jour                    #
#              1 mise à jour (valeur par défaut)       #
#------------------------------------------------------#
If GIMPORT
  Local Libelle WUPDSTOFLG : WUPDSTOFLG=1
  [V]GPOINT="MAJRCPSTO" : Gosub ENTREE From EXEFNC
  If !WUPDSTOFLG  Return : Endif
Endif

#-----
Raz [M:STW]
[M:STW]STOFCY   = [F:PTD]PRHFCY            : # Site
[M:STW]TRFFCY   = [F:PTD]LINSTOFCY         : # Site de transfert
If [F:PTD]POHNUM<>""                       : # Pièce origine = cde achat
  [M:STW]VCRNUMORI=[F:PTD]POHNUM
  [M:STW]VCRLINORI=[F:PTD]POPLIN
  [M:STW]VCRSEQORI=[F:PTD]POQSEQ
  [M:STW]VCRTYPORI=14
Endif
If [M:STW]TRFFCY<>"" & [F:PTD]SDHNUM<>""   : # Pièce origine = livraison inter-site
  [M:STW]VCRNUMORI=[F:PTD]SDHNUM
  [M:STW]VCRLINORI=[F:PTD]SDDLIN
  [M:STW]VCRSEQORI=0
  [M:STW]VCRTYPORI=4
Endif
[M:STW]BETCPY=[F:PTH]BETCPY
If dim([F:PTD]LINCAT)>0 & [F:PTD]LINCAT=2  : # GA 09/2006
   [M:STW]TRSTYP = 16                      : # Type mouvement (M.704): rcp matières pour sous-traitance
   #--- Bug 73121
   #[M:STW]BPSFCY = [M:PTH0]SALFCY
   [M:STW]BPSFCY = [F:PTD]LINSTOFCY
   #---
Else
   [M:STW]TRSTYP = 3                       : # Type mouvement (M.704): rcp fournisseur
Endif
[M:STW]VCRTYP   = 6                        : # Type pièce (M.701)
[M:STW]VCRNUM   = [F:PTD]PTHNUM            : # Numéro pièce
[M:STW]VCRLIN   = [F:PTD]PTDLIN            : # Numero ligne pièce
[M:STW]ITMREF   = [F:PTD]ITMREF            : # Article
[M:STW]BPRNUM   = [F:PTD]BPSNUM            : # Tiers
[M:STW]CUR      = [F:PTD]NETCUR            : # Devise
[M:STW]PJT      = [F:PTD]PJT               : # Affaire
[M:STW]TRSCOD   = [F:PTH]TRSCOD            : # Code mouvement
[M:STW]TRSFAM   = [F:PTD]TRSFAM            : # Famille mouvement
[M:STW]IPTDAT   = [F:PTD]RCPDAT            : # Date imputation
[M:STW]ENTCOD   = [F:PTH]ENTCOD            : # Pièce auto stock
[M:STW]CCECOD   = "STKREC"                 : # Code paramétrage sections par défaut
[M:STW]PRIORDH  = [F:PTD]CPR               : # Prix de l'ordre
[M:STW]TRAFLG   = 2                        : # Trace normal
#----- Alimentation du masque de travail -----#
If SIGN=-1
  #------------------------------------------#
  # Attention il faut que le masque STOENTM  #
  #      soit ouvert et chargé pour que      #
  #      la suppression puisse fonctionner ! #
  #------------------------------------------#
  If !clalev([M:ENM])  Local Mask STOENTM [ENM] : Default Mask [PTH1] : Endif
  Raz [M:ENM]
  [M:ENM]TABLE1 = "PTR"
  If [F:ITF]ITMREF<>[F:PTD]ITMREF | [F:ITF]STOFCY<>[F:PTH]PRHFCY
    Read [ITF] ITF0=[F:PTD]ITMREF;[F:PTH]PRHFCY : If fstat  Raz [F:ITF] : Endif
  Endif
  [M:ENM]QUAFLG = [F:ITF]QUAFLG
  SAVNOLIGN=nolign : # Le nolign est cassé par le TRTSTOENMA !!
  If TRTLIG="A"
    Call CHARG_PARAM_STOENTM (999999)   From SUBPTHB
  Else
    Call CHARG_PARAM_STOENTM (nolign-1) From SUBPTHB
  Endif
  If !WRETOUR
    [M:ENM]VCRTYP = 6
    [M:ENM]STU    = [F:ITM]STU
    nolign=SAVNOLIGN : # Le nolign est cassé par le TRTSTOENMA !!
    Call ALISTOWORK (4,0,WQTE1,WQTE2,GBIDI2,GBIDI3,WRETOUR) From STKINT
  Endif
Else
  [M:STW]MVTDES = [M:PTH1]MVTDES(nolign-1)          : # Désignation mouvement
# Issue 77436 - 2011-11-14 by VPO : modif calcul prix réception
#  Call CALCUL_PRIPUR(nolign-1,WPRIPUR) From SUBPTHB : # Calcul prix d'achat
#  [M:STW]PRIPUR=WPRIPUR
#  # La saisie du détail de prix ne se faisant pas dans les réceptions
#  # l'alimentation du masque de travail peut se faire juste avant l'appel à ALISTOWORK
#  # En réception on ne fait pas de décomposition (sauf en inter-sites)
#  # donc tout doit aller dans la matière => "M"
#  WPRI = arr([M:STW]PRIPUR*[F:PTD]CPRCOE,10^-GDECPRI)
#  Call SETNEWPRIOVE2([F:PTD]ITMREF,[F:PTD]PRHFCY,[F:PTD]RCPDAT,[M:PTH1]WSTOSEQ(nolign-1),WPRI,3,
#&                    ([M:PTH1]POHNUM(nolign-1)<>"")*14,[M:PTH1]POHNUM(nolign-1),[M:PTH1]POPLIN(nolign-1),[M:PTH1]POQSEQ(nolign-1),
#&                    [M:PTH1]QTYSTU(nolign-1),"M",WRETOUR) From STKVAL
#  # Alimentation de la valeur des éléments de facturation
#  Call SETINVDTA([M:STW]PRIORDH-WPRI,[M:PTH1]WSTOSEQ(nolign-1)) From STKVAL

  # La saisie du détail de prix ne se faisant pas dans les réceptions
  # l'alimentation du masque de travail peut se faire juste avant l'appel à ALISTOWORK
  # En réception on ne fait pas de décomposition (sauf en inter-sites)
  # donc tout doit aller dans la matière => "M" sauf les elements de facturation
  If dim(WMTELT)<0     Local Decimal  WMTELT     : Endif
  Call CALCUL_MTELT(nolign-1,WMTELT) From SUBPTHB
  #on ramène les elt de facturation en prix unitaire

  #X3-103711 MJH 9/14/2018
  #When the stock unit is different than the purchase unit, it can cause a double up of the coefficient between them.
  #Using Purchasing unit here can ensure this does not happen.
#  WMTELT = WMTELT / [F:PTD]QTYSTU #Old
  WMTELT = WMTELT / [F:PTD]QTYPUU #New

  # Issue 104485 - 2014-12-15 by MUARN : gestion inter-site
  If [M:PTH0]BETFCY=2 & [M:PTH0]BETCPY=1
    # Issue 105027 - 2015-02-10 by MUARN : élément de facturation en inter site
    If GBETFCYCST = 1
      WMTELT = 0
    Endif
    If [M:PTH1]STCNUM(nolign-1)<>""
      WPRI = [M:PTH1]FCSCPR(nolign-1) / [F:PTD]QTYSTU
    # Issue 105027 - 2015-02-10 by MUARN : part coeff/cout
    Else
      WPRI =[M:PTH1]CSTPUR(nolign-1)
    Endif
  Else
    WPRI = [M:PTH1]CPR(nolign-1)-WMTELT
  Endif

  ## Prix sans les éléments de facturation et sans landed costs
  # Issue 70985 - 2012-04-10 by MUARN : landedcost
  # Issue 93835 - 2013-10-24 by MUARN : utilisation GBIDD1 ne pas écraser QTYSTU
  Call PCAL_QTY([M:PTH1]QTYPUU(nolign-1),[M:PTH1]PUU(nolign-1),GBIDD1,[M:PTH1]STU(nolign-1),
&             [M:PTH1]ITMREF(nolign-1),[M:PTH0]BPSNUM,1,WUOMSTUCOE) From TRTACHQTE1
  WCPRAMT = arr([M:PTH1]CPRAMT(nolign-1)/WUOMSTUCOE,10^-GDECPRI)

  #--- Issue 104503
  #[M:STW]PRIPUR=arr((WPRI-WCPRAMT)/[F:PTD]CPRCOE,10^-GDECPRI)

  Raz LECCMAJ, LECCMIN
  If dim([M:PTH1]ECCVALMAJ)>0
      [L]LECCMAJ = string$([M:PTH1]ECCVALMAJ(nolign-1)<>"$",[M:PTH1]ECCVALMAJ(nolign-1))
      [L]LECCMIN = string$([M:PTH1]ECCVALMIN(nolign-1)<>"$",[M:PTH1]ECCVALMIN(nolign-1))
  Endif
  # Issue 104485 - 2014-12-15 by CCC : inter-site -> pas de FG (comme avant)
  If [M:PTH0]BETFCY=2 & [M:PTH0]BETCPY=1
    Call SETNEWPRI([F:PTD]ITMREF,LECCMAJ,LECCMIN,[F:PTD]PRHFCY,[F:PTD]RCPDAT,[M:PTH1]WSTOSEQ(nolign-1),WPRI, "I") From STKVAL
  Else
    # Issue 100192 - 2014-06-23 by CCC : to be able to add INVDTA to the amount base for OVE calculating
    #Call SETNEWPRIOVE2([F:PTD]ITMREF,[F:PTD]PRHFCY,[F:PTD]RCPDAT,[M:PTH1]WSTOSEQ(nolign-1),WPRI,3,
    Call SETNEWPRIOVE2([F:PTD]ITMREF,LECCMAJ,LECCMIN,[F:PTD]PRHFCY,[F:PTD]RCPDAT,[M:PTH1]WSTOSEQ(nolign-1),WPRI, WMTELT, 3,
&                      ([M:PTH1]POHNUM(nolign-1)<>"")*14,[M:PTH1]POHNUM(nolign-1),[M:PTH1]POPLIN(nolign-1),[M:PTH1]POQSEQ(nolign-1),
&                      [M:PTH1]QTYSTU(nolign-1),"M",WRETOUR) From STKVAL
  Endif
  # Alimentation de la valeur des éléments de facturation
  Call SETINVDTA(WMTELT,[M:PTH1]WSTOSEQ(nolign-1)) From STKVAL

  #--- Issue 104503
  [M:STW]PRIPUR=[M:PTH1]CSTPUR(nolign-1)

  #----- Si création ligne de réception -----#
  Call ALISTOWORK (2,[M:PTH1]WSTOSEQ(nolign-1),WQTE1,WQTE2,GBIDI2,GBIDI3,WRETOUR) From STKINT
Endif
If !WRETOUR
  #----- La qté à entrer est différente de la qté allouée + rupture -----#
  If WQTE1+WQTE2<>[F:PTD]QTYSTU & SIGN=1
    Call ECR_TRACE([F:PTH]PTHNUM-[F:PTD]ITMREF-num$([F:PTD]PTDLIN)+
&                  "\"+mess(69,192,1)+num$([F:PTD]QTYSTU)+"<>"+num$(WQTE1),1) From GESECRAN
    GOK=0 : GPURTRACE=2
  Endif
Else
  If GPURTRACE=1  GPURTRACE=2 : Endif
  GOK=0
Endif
If GOK<1 : Call RAZTABVALW From STKVALECR : Return : Endif
# Issue 105027 - 2015-01-30 by MUARN : gestion inter-site
If [M:PTH0]BETFCY=2 & [M:PTH0]BETCPY=1 & GREP <> 'A'
  Update [PTD] Where PTHNUM = [M:PTH0]PTHNUM & PTDLIN =[M:PTH1]PTDLIN(nolign-1)
&      With CPR = arr(sum([M:SVW]AMTORD) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI) ,
&           LINAMTCPR = arr(sum([M:SVW]AMTORD),10^-GDECPRI),
&           CPRCLC = arr(sum([M:SVW]AMTORD) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
  [M:PTH1]CPR(nolign-1) = arr(sum([M:SVW]AMTORD) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
  [M:PTH1]LINAMTCPR(nolign-1) = arr(sum([M:SVW]AMTORD),10^-GDECPRI)
  [M:PTH1]CPRCLC(nolign-1) = arr(sum([M:SVW]AMTORD) / [M:PTH1]QTYSTU(nolign-1),10^-GDECPRI)
Endif
#----- Appel du sous-programme de mise à jour des stocks -----#
Call MAJ_STOCK From STKMAJ
If GOK<1 : Call RAZTABVALW From STKVALECR : Return : Endif
Call RAZTABVALW From STKVALECR
# Issue X3-25003 - 2017-05-11 by SR : Valorisation des réceptions
# Si nouvelle méthode et date de départ <= date de création de la commande ou de la réception(réception directe)
# que pour ligne normale. La sous-traitance est traitée dans MAJ_SOUS_TRAIT_EO/WO deSUBPTHC
If GPRIFLG = 2 & GPSVSTRDAT <= WCREDAT & [M:PTH1]LINTYP(nolign-1) = 1
       If TRTLIG = "A"
           # tout ce qui a pu régulariser la ligne de réception, à part
           #les FCC sur commande/Expé qui sont traitées ailleurs (ou pas du tout si FCSCOD renseigné)
           Filter [F:PSV] Where PTHNUM = [F:PTD]PTHNUM &  PTDLIN = [F:PTD]PTDLIN
&          & find([F:PSV]TYP,3,4,9,10)=0
           Look [F:PSV]PSV0 First
       Elsif TRTLIG = "C"
         If [F:PTD]POHNUM <> ""
             Filter [F:PSV] Where POHNUM = [F:PTD]POHNUM & POPLIN = [F:PTD]POPLIN & POQSEQ = [F:PTD]POQSEQ
&            & TIAFLG <> 2 & find(TYP,1,2,5,7,8,11)
             Look [F:PSV]PSV1 First
         Else
           fstat = 1
         Endif
       Endif
       Filter [F:PSV]
       If !fstat
        Call PSVCPRCLC From TRTACHRCP1
        If GOK < 1 : Return : Endif
       Endif
  Endif
# End issue X3-25003
#-----
If GREP <> "A"
   Call STKFREQCQ("PTH1",[M:PTH0]PRHFCY,nolign-1,[M:PTH1]ITMREF(nolign-1),[M:PTH0]BPSNUM,"V",[M:PTH1]QUAFLG(nolign-1),0) From STKACT   # hcb V6CQ (freq)
   If GOK<1  Return : Endif
Endif
# Issue 102803 - 2015-02-06 by CCC
## CCC(04/10/06) DM 37826
#If SIGN=-1 & TRTLIG="A"
#  Gosub CLOSE_FILES_PTH
#
#  Call FUNSTKACC([F:PTH]PRHFCY,[F:PTD]ITMREF,6,[F:PTD]PTHNUM,[F:PTD]PTDLIN) From STKLIB
#  Gosub OPEN_FILES_PTH
#
#  If GOK<1  Return : Endif
#Endif
Return


$MAJ_SDD
#-------------------------------------------------------------------------#
# Mise à jour de l'indicateur sur ligne de livraison ventes si inter-site #
# GBIDD1= Quantité réceptionnnée                                          #
# GBIDI2= Flag réceptionnné : 0=non 1=partiel 2=total                     #
#-------------------------------------------------------------------------#
GBIDD1=[F:SDD]RCPQTYSTU+([F:PTD]QTYSTU*SIGN)
If GBIDD1<0 GBIDD1=0 : Endif
If GBIDD1>=[F:SDD]QTYSTU
  GBIDI2=2
Elsif GBIDD1>0
  GBIDI2=1
Else
  GBIDI2=0
Endif
Update [SDD] Where SDHNUM=[F:PTD]SDHNUM & SDDLIN=[F:PTD]SDDLIN
&              With RCPFLG=GBIDI2, RCPQTYSTU=GBIDD1
If fstat
  GOK=0 : GMESSAGE=mess(213,194,1) : GERR=1 : Return
Endif
[F:SDD]RCPFLG=GBIDI2
[F:SDD]RCPQTYSTU=GBIDD1
Return


$MAJ_FICHIERS_LIGNE
#--------------------------#
# Mise à jour des fichiers #
#--------------------------#
If [F:PTD]POHNUM<>""
  If dim(WCMMFLG)<0  Local Libelle WCMMFLG : Endif
  Raz WCMMFLG
  If [F:POQ]POHTYP = 2
      If TRTLIG = "C"
        # affectations v6, appel impérativement avant mise à jour de l'encours
        Call MAJ_MTO("C", [F:PTD]QTYSTU)   From PURMTOLIB
        If GOK<1 : Return : Endif : # GH 05/09/12 bug 84291
      Endif
  Endif
  # Issue 99235 - 2014-04-16 by MUARN : ne pas lancer en modification de ligne sur commande ouverte
  #--- Issue 101261 by TS
  #If [F:POQ]POHTYP=2 & TRTLIG = "M"
  #  Gosub MAJ_FICHIERS_LIGNE_SUITE
  #Else
  #  Gosub MAJ_COMMANDE    : # Màj ligne et entête commande d'achat
  #Endif
  #--- Issue 111838
  #If [F:POQ]POHTYP<>2 | TRTLIG <> "M"
  #  Gosub MAJ_COMMANDE    : # Màj ligne et entête commande d'achat
  #Endif
  Gosub MAJ_COMMANDE    : # Màj ligne et entête commande d'achat
  #---

$MAJ_FICHIERS_LIGNE_SUITE
  If GOK<1  Return : Endif
  #----- Mise à jour reliquat engagement -----#

  # Issue 90892 - 2013-07-05 by MUARN : si égalité sur quantité faire aussi mise à jour
  #--- Issue 101261 by TS si égalité ne pas désengager
  #If WCMMFLG & [F:POQ]LININVFLG=2 & [F:POQ]QTYPUU>=[F:POQ]INVQTYPUU
  If WCMMFLG & [F:POQ]LININVFLG=2 & [F:POQ]QTYPUU>[F:POQ]INVQTYPUU
  #---
    If [F:POQ]LINCLEFLG=2
      # Issue 90892 - 2013-07-05 by MUARN : avec BUO, affiche erreur buo WMSGFLG de 0 à 3
      Call TRTMAJCMM([F:POQ]POHNUM,[F:POQ]POPLIN,[F:POQ]POQSEQ,-1,2,"POQ2",3,GBIDI1) From TRTACHDIV1
    Else
      # Issue 90892 - 2013-07-05 by MUARN : avec BUO, affiche erreur buo WMSGFLG de 0 à 3
      Call TRTMAJCMM([F:POQ]POHNUM,[F:POQ]POPLIN,[F:POQ]POQSEQ,+1,2,"POQ2",3,GBIDI1) From TRTACHDIV1
    Endif
    If GOK<1  Return : Endif
  Endif
  #-----
  If [F:POH]POHTYP=1 & [F:POQ]LINOCNNUM<>"" & [F:POQ]OCNLIN<>0 & [F:POQ]OCNSEQ<>0
    Gosub MAJ_CDEVEN
    If GOK<1  Return : Endif
  Endif
  #----- Achat de sous-traitance -----#
  If find([F:PTD]VCRTYPORI,10,36)
    Gosub MAJ_OPESTT From SUBPTHC   : # Màj cde de sous-traitance via MAJ_SBC
    If GOK<1  Return : Endif
  Endif
  If [F:POQ]WIPNUM<>""
    If [F:POQ]POHTYP = 1
        # --------------------------------------------------------------------
        # affectations v6, appels impérativement avant mise à jour de l'encours
        # si création ou augmentation de la quantité réceptionnée
        If TRTLIG = "C"
           Call MAJ_MTO("C", [F:PTD]QTYSTU)   From PURMTOLIB
           If GOK<1 : Return : Endif : # GH 05/09/12 bug 84291
        Endif
        If dim([L]WOLDQTYSTU) > 0 & (TRTLIG = "M" & SIGN = 1 & [F:PTD]QTYSTU > [L]WOLDQTYSTU)
           Call MAJ_MTO("C", [F:PTD]QTYSTU - [L]WOLDQTYSTU)   From PURMTOLIB
           If GOK<1 : Return : Endif : # GH 05/09/12 bug 84291
        Endif
        # solde = suppression affectations
        If [F:POQ]LINCLEFLG = 2 : Gosub SUP_MTO_POQ From PURMTOLIB : Endif
        # --------------------------------------------------------------------
    Endif
    Gosub MAJ_ENCOURS   : # Màj fichier des encours
    If GOK<1 : Return : Endif
    # --------------------------------------------------------------------
    # affectations v6, appel impérativement après mise à jour de l'encours
    If TRTLIG = "A"
       Call MAJ_MTO("A", [F:PTD]QTYSTU)   From PURMTOLIB
       If GOK<1 : Return : Endif : # GH 05/09/12 bug 84291
    Endif

    # désolde et diminution quantité
    If TRTLIG = "M"
        If (ANC_LINCLEFLG <> [F:POQ]LINCLEFLG & [F:POQ]LINCLEFLG = 1)
            Gosub MAJ_MTO_POQ From PURMTOLIB
        Elsif dim([L]WOLDQTYSTU) > 0 & (SIGN = 1 & [F:PTD]QTYSTU < [L]WOLDQTYSTU)
            Gosub MAJ_MTO_POQ From PURMTOLIB
        Endif

    Endif
    # création réception de commande ouverte, réaffectation car splittage encours
    If TRTLIG = "C" & [F:POQ]POHTYP = 2 : Gosub MAJ_MTO_POQ From PURMTOLIB : Endif
    # --------------------------------------------------------------------

    Gosub MAJ_ITV       : # Màj fichier cumuls article-site
    If GOK<1  Return : Endif
  Endif
# pris en charge par PURMTOLIB
#  If [F:POQ]ORI=3
#    Gosub MAJ_ALLOC_CTM : # Màj allocation si contremarque réceptionnée
#    If GOK<1  Return : Endif
#  Endif
Endif
Gosub MAJ_MVS         : # Màj mouvements fournisseur
If GOK<1  Return : Endif
Return


$MAJ_COMMANDE
#-----------------------------------------------#
#         Mise à jour commande d'achat          #
# --------------------------------------------- #
# Ligne commande quantité [F:POQ]               #
#    LINRCPNBR : Nbre de réceptions effectuées  #
#    INVRCPNBR : Nbre de réceptions facturées   #
#    RCPQTYPUU : Qtés réceptionnées en UA       #
#    RCPQTYSTU : Qtés réceptionnées en US       #
# Issue 106506 - 2015-05-12 by SR               #
#    SHIQTYPUU : Qtés expédiées en UA           #
#    SHIQTYSTU : Qtés expédiées en US           #
#    LINCLEFLG : Indicateur ligne soldée        #
#    RCPCLEFLG : Indicateur soldé par réception #
#    PTHNUM    : No dernière réception          #
#    PTDLIN    : Ligne dernière réception       #
#    LASRCPDAT : Date dernière entrée           #
#    LINSTA    : Etat ligne commande ouverte    #
#                et splittage éventuel          #
#                                               #
# Ligne article contrat cde ouverte [F:POC]     #
#    RCPQTYPUU : Qtés réceptionnées en UA       #
#    RCPQTYSTU : Qtés réceptionnées en US       #
#    EARQTY    : Qtés avance/retard             #
#    EARDAT    : Date avance/retard             #
# Issue 106506 - 2015-05-12 by SR               #
# Ligne d'expédition [F:SHD]                    #
#    RCPQTYPUU : Qtés réceptionnées en UA       #
#    RCPQTYSTU : Qtés réceptionnées en US       #
#    CLEFLG     : Flag Solde                    #
#                                               #
# Entête commande [F:POH]                       #
#    RCPNBR    : Nbre de réceptions effectuées  #
#    CLELINNBR : Nbre lignes soldées            #
#    RCPLINNBR : Nbre lignes réceptionnées      #
#    CLEFLG    : Indicateur cde soldée          #
#    RCPFLG    : Indicateur cde réceptionnée    #
#    TOTORD    : Total HT  si cde ouverte       #
#    TTVORD    : Total TTC si cde ouverte       #
#-----------------------------------------------#
#----- Si entête commande bloquée logiquement --> Abandon -----#
SYMBOLE2="POH"+[F:PTD]POHNUM : Lock=SYMBOLE2
If fstat GMESSAGE="$PORDER"-[F:PTD]POHNUM-mess(10,100,1) : GERR=1
         GOK=0 : Return : Endif
# Issue X3-100002 - 2018-08-14 by SR : Si commande ouverte
#----- Si cde ouverte et ligne article bloquée logiquement --> Abandon -----#
If [F:PTD]POHTYP = 2
  SYMBOLE2="POC"+num$([F:PTD]POPLIN)+"\"+[F:PTD]POHNUM : Lock=SYMBOLE2
  If fstat
    GMESSAGE="$PORDERC"-[F:PTD]POHNUM-num$([F:PTD]POPLIN)-mess(10,100,1) : GERR=1
    GOK=0
    Return
  Endif
Endif
#----- Lecture entête et ligne commande avec blocage physique -----#
Readlock [POH] POH0=[F:PTD]POHNUM
#----- Pas de màj et pas d'erreur en import si commande n'existe pas -----#
If GIMPORT & fstat Raz [F:POH] : Goto DEBLOC_CDE : Endif
If fstat=1
  GOK=-1 : GLOCK="$PORDER"-[F:PTD]POHNUM             : Goto DEBLOC_CDE
Elsif fstat
  GOK=0  : Call RSTA("POH",[F:PTD]POHNUM) From GLOCK : Goto DEBLOC_CDE
Endif
#----- Mise à jour ligne de commande quantité [F;POQ] -----#
Readlock [POQ] POQ0=[F:PTD]POHNUM;[F:PTD]POPLIN;[F:PTD]POQSEQ
If fstat=1
  GOK=-1 : GLOCK = "$PORDERQ"-[F:PTD]POHNUM-num$([F:PTD]POPLIN)
  Goto DEBLOC_CDE
Elsif fstat
  GOK=0  : Call RSTA ("POQ",[F:PTD]POHNUM-num$([F:PTD]POPLIN)) From GLOCK
  Goto DEBLOC_CDE
Endif
#-----
ANC_LINCLEFLG=[F:POQ]LINCLEFLG
# Issue 82703 - 2013-05-02 by SR : Régul valo stock
If SIGN = -1 : WLINCLEFLG = [F:POQ]LINCLEFLG : Endif
[F:POQ]LINRCPNBR+=SIGN
If [F:PTD]LININVFLG=2
  [F:POQ]INVRCPNBR=max([F:POQ]INVRCPNBR+SIGN,0)
Endif
#----- Si désolde de la ligne de réception, réengagement du reliquat -----#
If SIGN=-1 & [F:PTD]LININVFLG=2 & [M:PTH1]LININVFLG(nolign-1)<>2
  #----- Ligne de commande soldée et plus rien à facturer -----#
  If [F:POQ]RCPCLEFLG=1 & [F:POQ]LINCLEFLG=2 & [F:POQ]LININVFLG=2
    # Issue 90892 - 2013-07-05 by MUARN : avec BUO, affiche erreur buo WMSGFLG de 0 à 3
    Call TRTMAJCMM([F:POQ]POHNUM,[F:POQ]POPLIN,[F:POQ]POQSEQ,+1,2,"POQ2",3,GBIDI1) From TRTACHDIV1
    [F:POQ]LININVFLG=1
    [F:POQ]RCPCLEFLG=2
  Endif
#VPO 08/03/11 72092 suppression ligne de réception doit réengager commande/reception
Elsif SIGN=-1 & TRTLIG = "A" & [F:PTD]LININVFLG=2
  #----- Ligne de commande soldée et plus rien à facturer -----#
  If [F:POQ]RCPCLEFLG=1 & [F:POQ]LINCLEFLG=2 & [F:POQ]LININVFLG=2
    # Issue 90892 - 2013-07-05 by MUARN : avec BUO, affiche erreur buo WMSGFLG de 0 à 3
    Call TRTMAJCMM([F:POQ]POHNUM,[F:POQ]POPLIN,[F:POQ]POQSEQ,+1,2,"POQ2",3,GBIDI1) From TRTACHDIV1
    #VPO#non#[F:POQ]LININVFLG=1
    #VPO#non#[F:POQ]RCPCLEFLG=2
  Endif
Endif
#-----
# Issue 82703 - 2013-03-28 by SR : Régul valo stock
# SIGN = -1 : Suppr de réception
# A faire avant d'avoir mis à jour la qté réceptionnée de la commande
If SIGN = -1
   If TRTLIG = "A"
      # Si cde était soldée
      If ANC_LINCLEFLG = 2
        Call REGPRIX_FCC(3,[F:PTD]PTHNUM,[F:PTD]PTDLIN) From TRTACHFAC1
      Endif
   Endif
Endif

# Issue 79884 - 2012-02-06 by MUARN : bkp qté recue pour maj suite sup récep
ANC_RCPQTYPUU = [F:POQ]RCPQTYPUU
[F:POQ]RCPQTYSTU+=[F:PTD]QTYSTU*SIGN
[F:POQ]RCPQTYPUU+=[F:PTD]QTYPUU*SIGN

# Issue 106506 - 2015-04-23 by SR : Landed Cost
If [F:PTD]SHIPNUM <> ""
   Readlock [F:SHD]SHD0 = [F:PTD]SHIPNUM;[F:PTD]SHIPLIN
   If fstat=1
      GOK=-1 : GLOCK="$SHIPMENTD"-[F:PTD]SHIPNUM             : Goto DEBLOC_CDE
   Elsif fstat
      GOK=0  : Call RSTA("SHD",[F:PTD]SHIPNUM) From GLOCK    : Goto DEBLOC_CDE
   Endif
   # Issue 110325 - 2016-01-12 by SR :FCC sur expé
   ANC_SHDCLEFLG=[F:SHD]CLEFLG
   If SIGN = -1 : WSHDCLEFLG = [F:SHD]CLEFLG : Endif
   # SIGN = -1 : Suppr de réception
   # A faire avant d'avoir mis à jour la qté réceptionnée de l'expédition
   If SIGN = -1
     If TRTLIG = "A"
        # Si l'expé était soldée
       If ANC_SHDCLEFLG = 2
          Call REGPRIX_FCC(6,[F:PTD]PTHNUM,[F:PTD]PTDLIN) From TRTACHFAC1
       Endif
    Endif
   Endif
   # End issue 110325
   # Creation
   If SIGN = 1
    # If shipment closed
    If  [M:PTH1]WSHDSOLDE(nolign-1) = 2
        # Issue 115227 - 2016-03-11 by SR : quantity to be consumed can't be more than shipped quantity
        If [F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU > 0
          [F:POQ]SHIQTYPUU-= ([F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU)*SIGN
          [F:POQ]SHIQTYSTU-= ([F:SHD]SHIQTYSTU-[F:SHD]RCPQTYPUU)*SIGN
        Endif
        # End issue 115227
    Else
      # Issue 115227 - 2016-03-11 by SR : quantity to be consumed can't be more than shipped quantity
      If [F:PTD]QTYPUU <= [F:SHD]SHIQTYPUU
        [F:POQ]SHIQTYPUU-= [F:PTD]QTYPUU*SIGN
        [F:POQ]SHIQTYSTU-= [F:PTD]QTYSTU*SIGN
      Else
        [F:POQ]SHIQTYPUU-= [F:SHD]SHIQTYPUU*SIGN
        [F:POQ]SHIQTYSTU-= [F:SHD]SHIQTYSTU*SIGN
      Endif
      # End issue 115227
    Endif
   # Suppression
   Else
     # if shipment unclosed
     # Issue 117120 - 2016-06-20 by SR : Si suppression totale de la réception dune expé soldée
     If  ([M:PTH1]WSHDSOLDE(nolign-1) = 1 & [F:SHD]CLEFLG = 2) |  (TRTLIG = "A" & [F:SHD]CLEFLG = 2)
      # Issue 115227 - 2016-03-11 by SR : quantity to be reintegrated can't be more than shipped quantity
      If ([F:PTD]QTYPUU+([F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU))<= [F:SHD]SHIQTYPUU
         [F:POQ]SHIQTYPUU-= ([F:PTD]QTYPUU+([F:SHD]SHIQTYPUU-[F:SHD]RCPQTYPUU))*SIGN
         [F:POQ]SHIQTYSTU-= ([F:PTD]QTYSTU+([F:SHD]SHIQTYSTU-[F:SHD]RCPQTYSTU))*SIGN
      Else
         [F:POQ]SHIQTYPUU-= ([F:SHD]SHIQTYPUU)*SIGN
         [F:POQ]SHIQTYSTU-= ([F:SHD]SHIQTYSTU)*SIGN
      Endif
      # End issue 115227
     Else
      # Issue 115227 - 2016-03-11 by SR : quantity to be reintegrated can't be more than shipped quantity
      If [F:PTD]QTYPUU <= [F:SHD]SHIQTYPUU
         [F:POQ]SHIQTYPUU-= [F:PTD]QTYPUU*SIGN
         [F:POQ]SHIQTYSTU-= [F:PTD]QTYSTU*SIGN
      Else
         [F:POQ]SHIQTYPUU-= ([F:SHD]SHIQTYPUU)*SIGN
         [F:POQ]SHIQTYSTU-= ([F:SHD]SHIQTYSTU)*SIGN
      Endif
      # End issue 115227
     Endif
   Endif
   # no negative quantity
   [F:POQ]SHIQTYPUU = max(0,[F:POQ]SHIQTYPUU)
   [F:POQ]SHIQTYSTU = max(0,[F:POQ]SHIQTYSTU)
   # never more than shipped quantity
# Issue 115227 - 2016-03-11 by SR : Doesn't Work if multiple shipments
#   [F:POQ]SHIQTYPUU = min([F:POQ]SHIQTYPUU,[F:SHD]SHIQTYPUU)
#   [F:POQ]SHIQTYSTU = min([F:POQ]SHIQTYSTU,[F:SHD]SHIQTYSTU)
# End issue 115227
   # mise à jour du shipment
   [F:SHD]RCPQTYSTU += [F:PTD]QTYSTU*SIGN
   [F:SHD]RCPQTYSTU = max(0,[F:SHD]RCPQTYSTU)
   [F:SHD]RCPQTYPUU += [F:PTD]QTYPUU*SIGN
   [F:SHD]RCPQTYPUU = max(0,[F:SHD]RCPQTYPUU)
Endif
# Issue 106506 - 2015-04-23 by SR : Landed Cost
#-----
If SIGN=1 & [M:PTH0]BETFCY=2
  [F:POQ]SDHNUM = [F:PTD]SDHNUM
  [F:POQ]SDDLIN = [F:PTD]SDDLIN
Else
  Raz [F:POQ]SDHNUM, [F:POQ]SDDLIN
Endif
If [F:POH]POHTYP=2
  #----- Si commande ouverte -----#
  WQTE1=[F:POQ]QTYPUU
  Read [POC] POC0=[F:PTD]POHNUM;[F:PTD]POPLIN : If fstat  Raz [F:POC] : Endif
  If SIGN=1
    #----- Splittage de la ligne si pas inter-site -----#
    If [F:POH]SALFCY="" & [F:POQ]QTYPUU>[F:POQ]RCPQTYPUU
      Call SPLITTAGE_DL From SUBPTHB : If GOK<1  Goto DEBLOC_CDE : Endif
      [F:POQ]QTYUOM   =[F:POQ]RCPQTYPUU
      [F:POQ]QTYPUU   =[F:POQ]RCPQTYPUU
      [F:POQ]QTYSTU   =[F:POQ]RCPQTYSTU
      [F:POQ]RETQTYPUU=min([F:POQ]RETQTYPUU,[F:POQ]QTYPUU)
      [F:POQ]RETQTYSTU=min([F:POQ]RETQTYSTU,[F:POQ]QTYSTU)
      [F:POQ]LINAMT   =[F:POQ]LINAMT*[F:POQ]QTYPUU/WQTE1
      Call ARRDEV([F:POQ]LINAMT,[F:POH]CUR) From TRTDIV
      [F:POQ]LINATIAMT=[F:POQ]LINATIAMT*[F:POQ]QTYPUU/WQTE1
      Call ARRDEV([F:POQ]LINATIAMT,[F:POH]CUR) From TRTDIV
      [F:POQ]LINATI   =[F:POQ]LINATI*[F:POQ]QTYPUU/WQTE1
      Call ARRDEV([F:POQ]LINATI,[F:POH]CUR) From TRTDIV
    Endif
    [F:POQ]PTHNUM   =[F:PTD]PTHNUM
    [F:POQ]PTDLIN   =[F:PTD]PTDLIN
    [F:POQ]LASRCPDAT=[F:PTD]RCPDAT
    If [F:POQ]RCPQTYSTU>=[F:POQ]QTYSTU | [M:PTH0]BETFCY<>2
    # Issue 96203 - 2014-02-14 by SR : Perf
#      [M:PTH1]WSOLDE(nolign-1)=2 : Affzo [PTH1]WSOLDE(nolign-1)
      [M:PTH1]WSOLDE(nolign-1)=2
      # Issue X3-58532 - 2018-04-03 by SR :
      # LINCLEFLG a pu être passé à 2 lors d'un splittage précedent
      # Dans tous les cas, si ligne soldée(WSOLDE = 2) , elle l'a été par la réception
      # en cours,donc on positionne soldé par réception
      #If [F:POQ]LINCLEFLG<>2
        [F:POQ]LINCLEFLG=2 : WCMMFLG=1
        [F:POQ]RCPCLEFLG=2
        [F:POQ]LINSTA=3
      #Endif
      # End issue X3-58532
    Else
      # Issue 96203 - 2014-02-14 by SR : Perf
#      [M:PTH1]WSOLDE(nolign-1)=1 : Affzo [PTH1]WSOLDE(nolign-1)
      [M:PTH1]WSOLDE(nolign-1)=1
      If [F:POQ]LINCLEFLG=2 & [F:POQ]RCPCLEFLG=2
        [F:POQ]LINCLEFLG=1 : WCMMFLG=1
        [F:POQ]RCPCLEFLG=1
        If [F:POQ]DEMRCPDAT<[F:POC]EARDAT [F:POQ]LINSTA=2 Else [F:POQ]LINSTA=1 : Endif
      Endif
    Endif
  Else
    If [F:POQ]RCPQTYSTU=0 | [F:POH]SALFCY<>"" & [F:POQ]RCPQTYSTU<[F:POQ]QTYSTU
      If [F:POQ]LINCLEFLG=2 & [F:POQ]RCPCLEFLG=2
        [F:POQ]LINCLEFLG=1 : WCMMFLG=1
        [F:POQ]RCPCLEFLG=1
        If [F:POQ]DEMRCPDAT<[F:POC]EARDAT [F:POQ]LINSTA=2 Else [F:POQ]LINSTA=1 : Endif
      Endif
      Raz [F:POQ]PTHNUM, [F:POQ]PTDLIN, [F:POQ]LASRCPDAT
    Endif
    #----- Essai de fusion en cas de suppression ou modification de DL -----#
    Call FUSION_DL(2) From SUBPTHB : If GOK<1  Goto DEBLOC_CDE : Endif
    #-----
  Endif
Else
  #----- Si commande classique -----#
  If SIGN=1
  # Issue 111184 - 2015-09-22 by SR : inutile avec la correction de la fiche 111184 (flags calculés bien plus tôt dans SUBPTHB)
    # Issue 84732 - 2012-09-24 by SR : Recalculer la valeur du flag Solde de la ligne de commande
#    If GACTION = "SAISTOENTM"
#      # Issue 97217 - 2014-02-26 by MUARN : ajout test ligne en cours de modification
#      If nolign=LLIGDOC+1
#        [M:PTH1]WSOLDE(nolign-1) = 1
#        If GPOHCLE=1 | GPOHCLE=2    : # Solde si égalité ou supérieur ou à la demande
#          If [F:POQ]RCPQTYSTU>=[F:POQ]QTYSTU : [M:PTH1]WSOLDE(nolign-1)=2 : Endif
#        Elsif GPOHCLE=4 | GPOHCLE=5 : # Solde suivant % tolérance + reste à la demande
#          GBIDD1=[F:POQ]QTYSTU-[F:POQ]RCPQTYSTU
#          If GBIDD1<=0 | abs((GBIDD1/[F:POQ]QTYSTU)*100)<=[F:ITM]MINRMNPRC
#            [M:PTH1]WSOLDE(nolign-1)=2
#          Endif
#        Endif
#      Endif
      # Issue 106506 - 2015-04-23 by SR : Landed Cost
#      If ([F:SHD]RCPQTYSTU >= [F:SHD]SHIQTYSTU) | [M:PTH1]WSOLDE(nolign-1)=2
#         [M:PTH1]WSHDSOLDE(nolign-1) = 2
#      Else
#         [M:PTH1]WSHDSOLDE(nolign-1) = 1
#      Endif
#      # End issue 106506
#    Endif
    # End issue 111184

    If [M:PTH1]WSOLDE(nolign-1)=2 & [F:POQ]LINCLEFLG<>2
      [F:POQ]LINCLEFLG=2 : WCMMFLG=1
      [F:POQ]RCPCLEFLG=2
    Endif
    [F:POQ]PTHNUM   =[F:PTD]PTHNUM
    [F:POQ]PTDLIN   =[F:PTD]PTDLIN
    [F:POQ]LASRCPDAT=[F:PTD]RCPDAT
    # Issue 106506 - 2015-04-23 by SR : Landed Cost
    If [F:PTD]SHIPNUM <> "" : [F:SHD]CLEFLG = [M:PTH1]WSHDSOLDE(nolign-1) : Endif
    # End issue 106506
  Else
    If [F:POQ]LINCLEFLG=2 & [F:POQ]RCPCLEFLG=2
      [F:POQ]LINCLEFLG=1 : WCMMFLG=1
      [F:POQ]RCPCLEFLG=1
    #VPO 08/03/11 72092 suppression ligne de réception doit désolder commande/reception
    Elsif TRTLIG = "A" & [F:POQ]LINCLEFLG=2
      [F:POQ]LINCLEFLG=1 : WCMMFLG=1
      [F:POQ]RCPCLEFLG=1
    Endif
    # Issue 106506 - 2015-04-23 by SR : Landed Cost
    If [F:PTD]SHIPNUM <> "" & [F:SHD]RCPQTYSTU < [F:SHD]SHIQTYSTU & [F:SHD]CLEFLG = 2
       [F:SHD]CLEFLG = 1
    Endif
    # End issue 106506
  # Issue 102348 - 2014-09-02 by SR :  Si il existe d'autres réceptions
    # si la réception supprimée était celle stockée sur la ligne de cde on récupère l'avant dernière
    If [F:POQ]LINRCPNBR > 0
      If [F:POQ]PTHNUM = [F:PTD]PTHNUM & [F:POQ]PTDLIN = [F:PTD]PTDLIN
        Filter [PTDB] Where POHNUM=[F:POQ]POHNUM & POPLIN=[F:POQ]POPLIN & POQSEQ=[F:POQ]POQSEQ
&                   & (PTHNUM <> [F:POQ]PTHNUM | PTDLIN <> [F:POQ]PTDLIN)
        Read [PTDB] Last
        If !fstat
           [F:POQ]PTHNUM   =[F:PTDB]PTHNUM
           [F:POQ]PTDLIN   =[F:PTDB]PTDLIN
           [F:POQ]LASRCPDAT=[F:PTDB]RCPDAT
        Else
           Raz [F:POQ]PTHNUM, [F:POQ]PTDLIN, [F:POQ]LASRCPDAT
        Endif
      Endif
      Filter [PTDB]
    Else
        Raz [F:POQ]PTHNUM, [F:POQ]PTDLIN, [F:POQ]LASRCPDAT
    Endif
    # End issue 102348
  Endif
Endif
# Issue 82703 - 2013-03-28 by SR : Régul valo stock
# A faire après avoir mis à jour la cde
# Prise en compte des FCC si solde de la cde
If SIGN = +1
  If TRTLIG = "C"
    If [F:POQ]LINCLEFLG = 2
       Call REGPRIX_FCC(2,"",0) From TRTACHFAC1
    Endif
    # Issue 110325 - 2016-01-12 by SR : FCC sur expé
    If [F:PTD]SHIPNUM <> "" & [F:SHD]CLEFLG = 2
        Call REGPRIX_FCC(5,"",0) From TRTACHFAC1
    Endif
  # En modification de réception
  # On utilise WLINCLEFLG car ANC_LINCLEFLG  = nouvelle valeur suite à SIGN = -1
  Elsif TRTLIG = "M"
       If  GACTION = "SAISTOENTM"
        # si modif de la qté et ligne de commande soldée
        # Issue 102485 - 2014-09-08 by SR tester l'existence de WOLDQTYSTU
        # Issue 110325 - 2016-01-12 by SR : FCC sur expé
        #If (dim([L]WOLDQTYSTU) > 0 & [L]WOLDQTYSTU<> [F:PTD]QTYSTU) & [F:POQ]LINCLEFLG = 2
        If (dim([L]WOLDQTYSTU) > 0 & [L]WOLDQTYSTU<> [F:PTD]QTYSTU)
          # Issue X3-25003 - 2017-11-28 by SR : On peut solder ou désolder
          If WLINCLEFLG = 1 & [F:POQ]LINCLEFLG = 2
           Call REGPRIX_FCC(2,"",0) From TRTACHFAC1
          Elsif WLINCLEFLG = 2 & [F:POQ]LINCLEFLG = 1
           Call REGPRIX_FCC(3,"",0) From TRTACHFAC1
          Endif
          If [F:PTD]SHIPNUM <> ""
            If WLINCLEFLG = 1 &  [F:SHD]CLEFLG = 2
               Call REGPRIX_FCC(5,"",0) From TRTACHFAC1
            Elsif WLINCLEFLG = 2 &  [F:SHD]CLEFLG = 1
               Call REGPRIX_FCC(6,"",0) From TRTACHFAC1
            Endif
          Endif
        Endif
        # End issue 110325
       Else
        # Si modif du flag solde sur la ligne de réception : on ne peut que solder
        # Issue X3-25003 - 2017-11-28 by SR : On peut solder ou désolder
        If WLINCLEFLG=1 &  [F:POQ]LINCLEFLG = 2
           Call REGPRIX_FCC(2,"",0) From TRTACHFAC1
        Elsif   WLINCLEFLG=2 &  [F:POQ]LINCLEFLG = 1
           Call REGPRIX_FCC(3,"",0) From TRTACHFAC1
        Endif
        # Issue 110325 - 2016-01-12 by SR :FCC sur expé
        # Issue X3-25003 - 2017-11-28 by SR : On peut solder ou désolder
#        If [F:PTD]SHIPNUM <> "" & WSHDCLEFLG=1 &  [F:SHD]CLEFLG = 2
        If [F:PTD]SHIPNUM <> ""
           If WSHDCLEFLG=1 &  [F:SHD]CLEFLG = 2
              Call REGPRIX_FCC(5,"",0) From TRTACHFAC1
           Elsif WSHDCLEFLG=2 &  [F:SHD]CLEFLG = 1
              Call REGPRIX_FCC(6,"",0) From TRTACHFAC1
           Endif
        Endif
      Endif
  Endif
Endif
#----- Si solde de la ligne de réception, désengagement du reliquat -----#
If SIGN=+1 & [F:PTD]LININVFLG=2 & (ANC_LININVFLG<>2 | (WCMMFLG=1 & [F:POQ]LININVFLG<>2))
  #----- Ligne de commande soldée par réception et plus rien à facturer -----#
  #sr 03.12 Demande 79851 : si ligne déjà complètement facturée on ne fait rien non plus
  If [F:POQ]RCPCLEFLG=2 & [F:POQ]LINCLEFLG=2 & [F:POQ]LININVFLG <> 2
    Filter [PTDB] Where POHNUM=[F:POQ]POHNUM & POPLIN=[F:POQ]POPLIN & POQSEQ=[F:POQ]POQSEQ & LININVFLG<>2
    Look [PTDB] PTD2 First : If fstat  [F:POQ]LININVFLG=2 : Endif
    Filter [PTDB]
    If [F:POQ]LININVFLG=2
      # Issue 90892 - 2013-07-05 by MUARN : avec BUO, affiche erreur buo WMSGFLG de 0 à 3
      Call TRTMAJCMM([F:POQ]POHNUM,[F:POQ]POPLIN,[F:POQ]POQSEQ,-1,2,"POQ2",3,GBIDI1) From TRTACHDIV1
      [F:POQ]RCPCLEFLG=1
      Raz WCMMFLG
    Endif
  Endif
Endif
#----- Appel du point d'entrée POHCLE solde/désolde ligne de commande -----#
If [F:POH]POHTYP<>2 & ANC_LINCLEFLG<>[F:POQ]LINCLEFLG
  WTRAIT=3
  If [F:POQ]LINCLEFLG=2  WCLEFLG=1  Else  WCLEFLG=2 : Endif
  Gosub POINT_POHCLE From TRTACHCDE1
Endif
#-----
If [F:POQ]POHTYP=2
  #--------------------------------------------------------------#
  # Point d'entrée MAJDL pour alimentation de zones spécifiques  #
  # ------------------------------------------------------------ #
  # Variables utilisables par le point d'entrée                  #
  #                                                              #
  # TYPMAJ  : Type de mise à jour (7 = réception DL)             #
  # FICHIER : Nom de la table qui va être écrite "PORDERQ"       #
  # ABRFIC  : Abréviation de la table qui va être écrite "POQ"   #
  # La  classe  [F:POQ] est modifiable avant le Rewrite          #
  #--------------------------------------------------------------#
  Local Libelle  TYPMAJ
  Local Char     FICHIER(GLONATB)
  Local Char     ABRFIC(4)
  TYPMAJ=7 : ABRFIC="POQ" : Gosub POINT_MAJDL From TRTACHPOD1
Endif
#-----
Rewrite [POQ]
If fstat  GOK=0 : Call FSTA ("POQ") From GLOCK : Goto DEBLOC_CDE : Endif
#----- Mise à jour ligne article contrat si commande ouverte [F:POC] -----#
If [F:POH]POHTYP=2
  Readlock [POC] POC0=[F:PTD]POHNUM;[F:PTD]POPLIN
  If fstat=1
    GOK=-1 : GLOCK = "$PORDERC"-[F:PTD]POHNUM-num$([F:PTD]POPLIN)
    Goto DEBLOC_CDE
  Elsif fstat
    GOK=0  : Call RSTA ("POC",[F:PTD]POHNUM-num$([F:PTD]POPLIN)) From GLOCK
    Goto DEBLOC_CDE
  Endif
  #-----
  [F:POC]RCPQTYPUU+=[F:PTD]QTYPUU*SIGN
  [F:POC]RCPQTYSTU+=[F:PTD]QTYSTU*SIGN
  If [F:POQ]DEMRCPDAT<[F:POC]EARDAT
    [F:POC]EARQTY-=[F:PTD]QTYPUU*SIGN
  Endif
  #-----
  Rewrite [POC]
  If fstat  GOK=0 : Call FSTA ("POC") From GLOCK : Goto DEBLOC_CDE : Endif
Endif
#----- Mise à jour entête commande [F:POH] -----#
[F:POH]RCPNBR+=SIGN*1
If [F:POH]POHTYP=2
  #----- Si commande ouverte -----#
  If [F:POH]RCPNBR>0 [F:POH]RCPFLG=2 Else [F:POH]RCPFLG=1 : Endif
  #----- Màj total commande HT et TTC -----#
  If [F:POQ]RCPQTYPUU>[F:POQ]QTYPUU
    WQTE1=[F:PTD]QTYPUU-([F:POQ]RCPQTYPUU-[F:POQ]QTYPUU)
  Else
    WQTE1=[F:PTD]QTYPUU
  Endif
  [F:POH]TOTORD-=[F:POQ]LINAMT   *WQTE1/[F:POQ]QTYPUU*SIGN
  [F:POH]TTVORD-=[F:POQ]LINATIAMT*WQTE1/[F:POQ]QTYPUU*SIGN
Else
  #----- Si commande classique -----#
  If ANC_LINCLEFLG<>[F:POQ]LINCLEFLG
    If [F:POQ]LINCLEFLG=2
      [F:POH]CLELINNBR+=1
      # Issue X3-231693/231427 - 2021-01-19 by MUARN : for commitment and same order in differents partial line on the same receipt remove X3-170080
      # si une ligne de commande est présente plusieurs fois sur une même réception qui solde la ligne de commande
      # Issue X3-170080 - 2020-01-09 by SR : Only if line fully received
      [F:POH]RCPLINNBR+=1
#      If [F:POQ]QTYPUU <= [F:POQ]RCPQTYPUU
#        [F:POH]RCPLINNBR+=1
#      Endif
      # End issue X3-170080
      # End issue X3-231693/231427
    Else
      # Issue 79884 - 2012-02-06 by MUARN : maj nb ligne si sup récep en fonction qté
      #[F:POH]CLELINNBR-=1
      #[F:POH]RCPLINNBR-=1
      If ANC_LINCLEFLG = 2
        [F:POH]CLELINNBR-=1
        # Issue X3-231693/231427 - 2021-01-19 by MUARN : for commitment and same order in differents partial line on the same receipt remove X3-170080
        # si une ligne de commande est présente plusieurs fois sur une même réception qui solde la ligne de commande
        # Issue 84665 - 2012-09-21 by MUARN : en modif toujours retrancher 1 ligne de ligne totalement réceptionnée
        # Issue X3-170080 - 2020-01-10 by SR :
        # following the fix of this issue , RCPLINNBR was increased in creation only if
        # qty received >= qty ordered. So must be decrease taking into account the previous received qty
        If [F:POQ]QTYPUU <= ANC_RCPQTYPUU | GREP="M"
        #If [F:POQ]QTYPUU <= ANC_RCPQTYPUU
          [F:POH]RCPLINNBR-=1
        Endif
        # End issue X3-170080
        # End issue X3-231693/231427
      Endif
    Endif
  Endif
  # Issue 87161 - 2013-03-11 by MUARN : pohcle=3 (jamais) nb ligne totalement réceptionnée en fonction qté
  If GPOHCLE = 3 & ANC_RCPQTYPUU < [F:POQ]QTYPUU & [F:POQ]RCPQTYPUU >= [F:POQ]QTYPUU
    [F:POH]RCPLINNBR+=1
  Elsif GPOHCLE = 3 &  ANC_RCPQTYPUU >=[F:POQ]QTYPUU & [F:POQ]RCPQTYPUU < [F:POQ]QTYPUU
    [F:POH]RCPLINNBR-=1
  Endif
  If [F:POH]CLELINNBR<[F:POH]LINNBR
    [F:POH]CLEFLG=1
  Else
    [F:POH]CLEFLG=2
  Endif
  If [F:POH]RCPLINNBR=0 & [F:POH]RCPNBR=0
    [F:POH]RCPFLG=1
  Elsif [F:POH]RCPLINNBR=0 & [F:POH]RCPNBR<>0
    [F:POH]RCPFLG=2
  Elsif [F:POH]RCPLINNBR<[F:POH]LINNBR
    [F:POH]RCPFLG=2
  Else
    [F:POH]RCPFLG=3
  Endif
Endif
Rewrite [POH]
If fstat  GOK=0 : Call FSTA ("POH") From GLOCK : Goto DEBLOC_CDE : Endif
# Issue 106506 - 2015-04-23 by SR : Landed Cost
If [F:PTD]SHIPNUM <> ""
# Issue 15350 - 2016-12-06 by MAE : mise à jour des quantités réceptionnées et du statut des expéditions
  #Rewrite [F:SHD]
  #If fstat  GOK=0 : Call FSTA ("SHD") From GLOCK : Goto DEBLOC_CDE : Endif
  # Issue X3-233527 - 2021-04-01 by MAE : rewrite the function in 4GL
  #WRET = func SHIPMENT_CMET.MAJQTYRCP([F:PTD]SHIPNUM,[F:PTD]SHIPLIN,[F:SHD]RCPQTYPUU,[F:SHD]RCPQTYSTU,[F:SHD]CLEFLG,GMESSAGE)
  Local Integer WRET
  Call MAJQTYRCP([F:PTD]SHIPNUM,[F:PTD]SHIPLIN,[F:SHD]RCPQTYPUU,[F:SHD]RCPQTYSTU,[F:SHD]CLEFLG,GMESSAGE,WRET) From SHIP_FUNC
  If WRET>=[V]CST_AERROR
     GOK=0 : Call FSTA ("SHD") From GLOCK : Goto DEBLOC_CDE
  Endif
  # End issue 15350
Endif
# End issue 106506
#----- Déblocage logique de la commande -----#
$DEBLOC_CDE
Unlock=SYMBOLE2
Return


$MAJ_CDEVEN
#---------------------------------------#
# Solde ou désolde de la ligne de vente #
#---------------------------------------#
Call CTLMAJSOP("S",[F:POQ]LINOCNNUM,[F:POQ]OCNLIN,[F:POQ]OCNLIN,GBIDI2) From TRTVENISOC
#-- Si commande vente soldée et commande achat soldée rien a faire
If [F:SOQ]SOQSTA=3 & [F:POQ]LINCLEFLG=2   : Raz GBIDI2 : Raz GMESSAGE : Return : Endif
#-- Si commande vente non soldée et commande achat non soldée rien a faire
If [F:SOQ]SOQSTA<>3 & [F:POQ]LINCLEFLG<>2 : Raz GBIDI2 : Raz GMESSAGE : Return : Endif
#-- Si commande non soldée et GBIDI2<>0 solde interdit
If [F:SOQ]SOQSTA<>3 & GBIDI2<>0 & [F:POQ]LINCLEFLG=2
  GOK=0 : Return
#-- Désolde interdit, on ne désolde pas la commande de vente
#-- On peut désolder la commande d'achat
Elsif [F:SOQ]SOQSTA=3 & GBIDI2<>0 & [F:POQ]LINCLEFLG=1
  Raz GMESSAGE : Return
Endif
Raz GBIDC1
Call DIVCLESOQ([F:SOQ]SOHNUM, [F:SOQ]SOPLIN, [F:SOQ]SOQSEQ, GBIDC1) From TRTVENCDE
Return


$MAJ_ENCOURS
#------------------------------#
# Mise à jour de l'encours POF #
#------------------------------#
Read [ORD] ORD0=[F:POQ]WIPTYP;[F:POQ]WIPNUM;[F:POQ]ITMREF
If fstat  Raz [F:ORD] : Endif
[M:ORDK]          = [F:ORD]
#-----
If [F:POQ]LINCLEFLG=2
  [M:ORDK]MAJCOD  = "A"
Else
  [M:ORDK]MAJCOD  = "M"
Endif
[M:ORDK]WIPTYP    = [F:POQ]WIPTYP
[M:ORDK]WIPSTA    = [F:POQ]WIPSTA
[M:ORDK]WIPNUM    = [F:POQ]WIPNUM
[M:ORDK]ITMREF    = [F:POQ]ITMREF
[M:ORDK]STOFCY    = [F:POQ]PRHFCY
[M:ORDK]PJT       = [F:POP]PJT
[M:ORDK]BPRNUM    = [F:POQ]BPSNUM
[M:ORDK]STRDAT    = [F:POQ]ORDDAT
[M:ORDK]ENDDAT    = [F:POQ]EXTRCPDAT
[M:ORDK]VCRTYP    = 14
[M:ORDK]VCRNUM    = [F:POQ]POHNUM
[M:ORDK]VCRLIN    = [F:POQ]POPLIN
[M:ORDK]VCRSEQ    = [F:POQ]POQSEQ
[M:ORDK]EXTQTY    = [F:POQ]QTYSTU
[M:ORDK]CPLQTY    = [F:POQ]RCPQTYSTU
[M:ORDK]ALLQTY    = 0
[M:ORDK]SHTQTY    = 0
[M:ORDK]FMI       = [F:POQ]ORI
[M:ORDK]MRPMES    = 1
# Issue 134624 - 2019-07-23 by STLIG : reset MRP fields when MRP message is reset to 1 No action..
[M:ORDK]MRPDAT    = [0/0/0]
[M:ORDK]MRPQTY    = 0
# Issue 71276 - 2015-02-27 by SR : Versions
If dim([M:ORDK]ECCVALMAJ)> 0
  [M:ORDK]ECCVALMAJ = [F:POQ]ECCVALMAJ
  [M:ORDK]ECCVALMIN = [F:POQ]ECCVALMIN
Endif
# End issue 71276
#----- Chargement infos origine si erreur lecture sur l'ordre à modifier -----#
If [F:ORD]WIPNUM=""
  If [F:POH]SALFCY<>"" : #----- Inter-sites
    If [F:BPR]BPRNUM<>[F:POQ]BPSNUM
      Read [BPR] BPR0=[F:POQ]BPSNUM : If fstat Raz [F:BPR] : Endif
    Endif
    [M:ORDK]ORIFCY    = [F:BPR]FCY
    [M:ORDK]VCRTYPORI = 2
    [M:ORDK]VCRNUMORI = [F:POQ]LINOCNNUM
    [M:ORDK]VCRLINORI = [F:POQ]OCNLIN
    [M:ORDK]VCRSEQORI = [F:POQ]OCNSEQ
  Else                 : #----- Autres
    [M:ORDK]ORIFCY    = [F:POQ]POHFCY
    [M:ORDK]VCRTYPORI = 0
    [M:ORDK]VCRNUMORI = ""
    [M:ORDK]VCRLINORI = 0
    [M:ORDK]VCRSEQORI = 0
  Endif
Endif
#-----
[M:ORDK]BOMALT    = 0
[M:ORDK]ORI       = 1
If [F:POH]POHTYP=2 [M:ORDK]ABBFIL="POC" Else [M:ORDK]ABBFIL="POQ" : Endif
Call WIP From TRTWIP
If GOK<1
  GMESSAGE=mess(13,100,1)-"ORDERS:"-[F:POQ]WIPNUM : Return
Endif
Return


$MAJ_ITV
#---------------------------------------------#
# Mise à jours cumuls mouvements article-site #
# ------------------------------------------- #
#   ORDSTO : Qtés US en commande              #
#---------------------------------------------#
If SIGN=1 & ANC_LINCLEFLG=2  Return : Endif
WQTE1=max([F:POQ]QTYSTU-[F:POQ]RCPQTYSTU+[F:PTD]QTYSTU*SIGN,0) : # Qté à réceptionner avant
WQTE2=max([F:POQ]QTYSTU-[F:POQ]RCPQTYSTU,0)                    : # Qté à réceptionner apres
If WQTE1=0 & WQTE2=0  Return : Endif
If [F:POQ]LINCLEFLG<>ANC_LINCLEFLG
  If SIGN=1  GBIDD1=WQTE1        Else  GBIDD1=WQTE2       : Endif
Else
  If SIGN=1  GBIDD1=WQTE1-WQTE2  Else  GBIDD1=WQTE2-WQTE1 : Endif
Endif
Call LECITV([F:PTD]PRHFCY,[F:PTD]ITMREF,"",WRETOUR) From STKLIB
If GOK<>1 Return : Endif
If WRETOUR=0 | WSTAT=1 [F:ITV]ORDSTO-=GBIDD1*SIGN : Endif
If WRETOUR>2   Return : Endif
Rewrite [ITV]
If fstat  GOK=0 : Call FSTA("ITV") From GLOCK : Return : Endif
Return


$MAJ_ALLOC_CTM
#---------------------------------------------------------------#
#      Mise à jour allocation si contremarque réceptionnée      #
#---------------------------------------------------------------#
# Contrairement à la v130 on alloue tous les statuts vu avec TS #
# Il peut y avoir eu des quantités allouées manuellement        #
# Dans ce cas, il ne faut allouer que le reste à allouer        #
# Si on est pas en création on dégage car il ne faut pas        #
# risquer supprimer des allocations effectuées autrement que    #
# par la réception. Dans ce cas la suppression des allocations  #
# devra se faire manuellement dans un deuxième temps.           #
#---------------------------------------------------------------#
If TRTLIG<>"C" | [F:POQ]SOHNUM=""  Return : Endif
#----- lecture détail cde vente pour récupérer la qté restante à allouer -----#
Read [SOH] SOH0=[F:POQ]SOHNUM
If fstat  Raz [F:SOH] : Return : Endif
Read [SOP] SOP0=[F:POQ]SOHNUM;[F:POQ]SOPLIN;[F:POQ]SOQSEQ
If fstat  Raz [F:SOP] : Endif
Read [SOQ] SOQ0=[F:POQ]SOHNUM;[F:POQ]SOPLIN;[F:POQ]SOQSEQ
If fstat  Raz [F:SOQ] : Endif
#----- Vérification que les liens contremarque sont toujours valables -----#
If [F:SOQ]SOHNUM=""             |
&  [F:SOQ]ITMREF<>[F:POQ]ITMREF |
&  [F:SOQ]FMINUM<>[F:POQ]POHNUM |
&  [F:SOQ]FMILIN<>[F:POQ]POPLIN |
&  [F:SOQ]FMISEQ<>[F:POQ]POQSEQ
  Return
Endif
#----- Si la ligne de commande a été soldée, il ne faut plus la toucher -----#
If [F:SOQ]SOQSTA=3     Return : Endif
#----- Si l'article nest pas géré en stock, on dégage -----#
If [F:SOQ]STOMGTCOD<2  Return : Endif
#----- Vérification si le site de réception et site d'expédition sont différents -----#
If [F:SOQ]STOFCY<>[F:PTD]PRHFCY
  Call ECR_TRACE(mess(339,194,1),0) From GESECRAN : GPURTRACE=2 : Return
Endif
#-----
If dim(WDEFLOC)<1    Local Char    WDEFLOC(GLONLOC)    : Endif
If dim(WDEFLOCTYP)<1 Local Char    WDEFLOCTYP(GLONTLO) : Endif
If dim(WSTOCOU)<1    Local Decimal WSTOCOU             : Endif
#--------------------------------------------#
# WQTERES : quantité restant à allouée       #
# WQTE1   : quantité à allouée ou désallouée #
# WQTE2   : quantité allouée réellement      #
#--------------------------------------------#
Raz WQTE1,WQTE2,WQTE,WQTERES
If SIGN=-1
  WQTERES=[F:PTD]QTYSTU
  If WQTERES>[F:SOQ]ALLQTYSTU
    WQTERES=[F:SOQ]ALLQTYSTU
  Endif
  #--- Suppression des allocations pour chacun des mouvements
  For [STJ] STJ1 Where STOFCY=[F:PTD]PRHFCY
&                    & VCRTYP=6
&                    & VCRNUM=[F:PTD]PTHNUM
&                    & VCRLIN=[F:PTD]PTDLIN
&                    & REGFLG<>2
&                    & TRSTYP<>29                : #--- Issue 115206
    If WQTERES<=0 : Break : Endif
    If WQTERES-[F:STJ]QTYSTU>0
      WQTE1   =[F:STJ]QTYSTU
    Else
      WQTE1=WQTERES
      Raz WQTERES
    Endif
    WQTERES-=WQTE1
    Raz WSTOCOU
    #--- Issue X3-53322 : ajout LPN
    Call CLESTO([F:STJ]STOFCY,[F:STJ]ITMREF,[F:STJ]LOT,[F:STJ]SLO,[F:STJ]BPSLOT,
&               [F:STJ]PALNUM,[F:STJ]CTRNUM,[F:STJ]STA,[F:STJ]LOC,[F:STJ]PCU,
&               [F:STJ]PCUSTUCOE,[F:STJ]SERNUM,[F:STJ]QLYCTLDEM,[F:STJ]OWNER,
&               [F:STJ]STOFLD1,[F:STJ]STOFLD2,[F:STJ]LPNNUM,[L]WSTOCOU) From STKLIB
    For [STA]STA1 Where VCRTYP=2 & VCRNUM=[F:SOQ]SOHNUM & VCRLIN=[F:SOQ]SOPLIN &
&                       VCRSEQ=[F:SOQ]SOQSEQ & STOCOU=WSTOCOU
      # Suppression de l'allocation correspondante de la pièce d'origine
      Call SUPALL([F:STA]STOFCY,[F:STA]ITMREF,[F:STA]STOCOU,[F:STA]SEQ,WRETOUR) From STKALL
      If WRETOUR<>0 : GOK=0 : Break : Endif
      WQTE2+=[F:STA]QTYSTU
    Next
    If GOK<1 : Break : Endif
  Next
  If GOK<1 : Return : Endif
Else
  # Recherche de l'emp (type) de consommation (de livraison) si exclusif
  Raz WDEFLOC, WDEFLOCTYP
  Call RECH_PICLOC(2,[F:SOQ]STOFCY,[F:SOQ]ITMREF,"","",1,1,"O",WDEFLOC,WDEFLOCTYP) From STKALL
  If [F:SOH]SOHCAT = 3
     WQTERES = [F:SOQ]QTYSTU-[F:SOQ]ALLQTYSTU-[F:SOQ]INVQTYSTU
   Else
     WQTERES = [F:SOQ]QTYSTU-[F:SOQ]ALLQTYSTU-[F:SOQ]DLVQTYSTU-[F:SOQ]ODLQTYSTU
  Endif
  If WQTERES<= 0 : Return : Endif
  If WQTERES>=[F:PTD]QTYSTU
    WQTERES=[F:PTD]QTYSTU
  Endif
  #---------------------------------------------------------#
  # Point d'entrée CHGALLQTY pour modifier la qté à allouer #
  # ------------------------------------------------------- #
  # Variable utilisable par le point d'entrée               #
  #                                                         #
  # WQTERES : Quantité à allouer en US                      #
  #---------------------------------------------------------#
  [V]GPOINT="CHGALLQTY" : Gosub ENTREE From EXEFNC
  If WQTERES>[F:PTD]QTYSTU  WQTERES=[F:PTD]QTYSTU : Endif
  #-----
  Raz WQTE,WQTE1
  For [STJ] STJ1 Where STOFCY=[F:PTD]PRHFCY
&                    & VCRTYP=6
&                    & VCRNUM=[F:PTD]PTHNUM
&                    & VCRLIN=[F:PTD]PTDLIN
&                    & REGFLG<>2
&                    & TRSTYP<>29                : #--- Issue 115206
    If WQTERES<=0 : Break : Endif
    If WQTERES-[F:STJ]QTYSTU>0
      WQTE1   =[F:STJ]QTYSTU
    Else
      WQTE1=WQTERES
    Endif
    WQTERES-=WQTE1
    #gbidd1=qté en ua
    GBIDD1=WQTE1
    Case [F:PTD]STOMGTCOD
      When 3 : If [F:STJ]POT<>0
                 GBIDD1=WQTE1*[F:STJ]POT/100
               Endif
      When 4 : If [F:STJ]ACT<>0
                 GBIDD1=WQTE1*[F:STJ]ACT
               Endif
    Endcase
    Call QTEARR(GBIDD1,[F:STJ]STU) From TRTDIV
    Raz GBIDC1
    Raz WSTOCOU
    #--- Issue X3-53322 : ajout LPN
    Call CLESTO([F:STJ]STOFCY,[F:STJ]ITMREF,[F:STJ]LOT,[F:STJ]SLO,[F:STJ]BPSLOT,
&               [F:STJ]PALNUM,[F:STJ]CTRNUM,[F:STJ]STA,[F:STJ]LOC,[F:STJ]PCU,
&               [F:STJ]PCUSTUCOE,[F:STJ]SERNUM,[F:STJ]QLYCTLDEM,[F:STJ]OWNER,
&               [F:STJ]STOFLD1,[F:STJ]STOFLD2,[F:STJ]LPNNUM,[L]WSTOCOU) From STKLIB
    #--- TS 106217 ajout paramètre LECC (avant dernier)
    Call CREALL(2,[F:STJ]STOFCY,[F:STJ]ITMREF,WSTOCOU,[F:PTD]RCPDAT,WQTE1,
&               GBIDD1,2,[F:SOQ]SOHNUM,[F:SOQ]SOPLIN,[F:SOQ]SOQSEQ,GBIDC1,[F:SOQ]SHIDAT,
&               "","","","","","",0,0,WDEFLOC,WDEFLOCTYP,"","",1,"",WRETOUR) From STKALL
    If WRETOUR<>0 : GOK=0 : Break : Endif
    WQTE2+=WQTE1
  Next
  If GOK<1 : Return : Endif
Endif
#----- Si entête commande bloquée logiquement --> Abandon -----#
If dim(SYMBOLE2)<1  Local Char SYMBOLE2(30) : Endif
SYMBOLE2="SOH"+[F:POQ]SOHNUM : Lock=SYMBOLE2
If fstat
  GMESSAGE="$SORDER"-[F:POQ]SOHNUM-mess(10,100,1) : GERR=1 : GOK=0 : Return
Endif
#----- Lecture entête et ligne commande avec blocage physique -----#
Readlock [SOH] SOH0=[F:POQ]SOHNUM
#----- Pas de màj et pas d'erreur en import si commande n'existe pas -----#
If GIMPORT & fstat Raz [F:SOH] : Goto DEBLOC_SCDE : Endif
If fstat=1
  GOK=-1 : GLOCK="$SORDER"-[F:POQ]SOHNUM             : Goto DEBLOC_SCDE
Elsif fstat
  GOK=0  : Call RSTA("SOH",[F:POQ]SOHNUM) From GLOCK : Goto DEBLOC_SCDE
Endif
#----- Mise à jour ligne de commande quantité [F:POQ] -----#
Readlock [SOQ]SOQ0 = [F:POQ]SOHNUM ;[F:POQ]SOPLIN ;[F:POQ]SOQSEQ
If fstat=1
  GOK=-1 : GLOCK = "$SORDERQ"-[F:POQ]SOHNUM-num$([F:POQ]SOPLIN)
  Goto DEBLOC_SCDE
Elsif fstat
  GOK=0  : Call RSTA ("SOQ",[F:POQ]SOHNUM-num$([F:POQ]SOPLIN)) From GLOCK
  Goto DEBLOC_SCDE
Endif
If [F:SOH]SOHCAT = 3
    WQTE1= [F:SOQ]INVQTYSTU
Else
    WQTE1= [F:SOQ]DLVQTYSTU
Endif
If [F:SOQ]ALLQTYSTU + [F:SOQ]ODLQTYSTU + WQTE1 >= [F:SOQ]QTYSTU
&       &  [F:SOQ]SHTQTYSTU = 0 & ([F:SOQ]STOMGTCOD <> 1  | find([F:SOP]LINTYP,2,10))
#--- La ligne etait allouée
    GBIDI2 = 2
Else
# --- La ligne n'etait pas allouée
    GBIDI2 = 1
Endif
#-----------------------------------------#
# mise à jour détail de commande de vente #
#-----------------------------------------#
#-- WQTE2 contient la quantité allouée ou désallouée réellement
[F:SOQ]ALLQTYSTU += WQTE2*SIGN
If [F:SOQ]ALLQTYSTU < 0 : [F:SOQ]ALLQTYSTU = 0 : Endif
#-------- lecture SORDERP pour recuperer UV ----#
If [F:SOP]SAU<>[F:SOP]STU
  GBIDD1=WQTE2*(1/[F:SOP]SAUSTUCOE)
  Call QTEARR(GBIDD1, [F:SOP]SAU) From TRTDIV
  [F:SOQ]ALLQTY += GBIDD1*SIGN
Else
  [F:SOQ]ALLQTY += WQTE2*SIGN
Endif
If [F:SOQ]ALLQTY < 0 : [F:SOQ]ALLQTY = 0 : Endif
[F:SOQ]ALLTYP = 2
Rewrite [SOQ]
If fstat
  GOK = 0 : Call FSTA ("SOQ") From GLOCK : Goto DEBLOC_SCDE
Endif
#V6 SR 02.11 71980
GPOINT="MAJCTMALL" : Gosub ENTREE From EXEFNC
If GOK = 0 : Goto DEBLOC_SCDE : Endif
#V6 SR 02.11
# La ligne est passée du statut non alloué au statut alloué
If [F:SOQ]ALLQTYSTU + [F:SOQ]ODLQTYSTU >= [F:SOQ]QTYSTU
&       &  [F:SOQ]SHTQTYSTU = 0 & ([F:SOQ]STOMGTCOD <> 1 | find([F:SOP]LINTYP,2,10))
&       &  GBIDI2 = 1
    GBIDI3=-1
# La ligne a passé du statut alloué au statut non alloué
Elsif ([F:SOQ]ALLQTYSTU + [F:SOQ]ODLQTYSTU < [F:SOQ]QTYSTU
&       | [F:SOQ]SHTQTYSTU <> 0) & ([F:SOQ]STOMGTCOD <> 1  | find([F:SOP]LINTYP,2,10))
&       &  GBIDI2 = 2
    GBIDI3=1
Else
# La ligne n'a pas changé d'état
    GBIDI3=0
Endif
#-----------------------------------------#
# mise à jour entete de commande de vente #
#-----------------------------------------#
If GBIDI3<>0 : # la ligne a changé d'état
  [F:SOH]ALLLINNBR+=GBIDI3
Endif
If [F:SOH]ALLLINNBR <= 0
  [F:SOH]ALLLINNBR = 0
  [F:SOH]ALLSTA = 3
Elsif [F:SOH]ALLLINNBR < [F:SOH]LINNBR | [F:SOQ]ALLQTY <> 0
  [F:SOH]ALLSTA = 2
Else
  [F:SOH]ALLSTA = 1
Endif
Rewrite [SOH] : If fstat GOK=0 : Call FSTA ("SOH") From GLOCK : Goto DEBLOC_SCDE : Endif
#----------------------------------------------------------------------------------#
# Bug 27897 : Si l'article est un composé de kit, il faut allouer des composants   #
#----------------------------------------------------------------------------------#
#   Si Composé de kit/sous-traité, il faut allouer les composants
If find([F:SOP]LINTYP,2,10) & WQTE2 <> 0
    Local Char WSOQ_TRTLIG : Local Decimal WSOQ_ALLSTU
    If SIGN<0
        # --- C'est une diminution/annulation de l'allocation
        WSOQ_TRTLIG="D" : WSOQ_ALLSTU=WQTE2
    Elsif SIGN>0
        # --- C'est une augmentation de l'allocation
        If [F:SOQ]ALLQTYSTU-WQTE2=0 WSOQ_TRTLIG="C"  Else  WSOQ_TRTLIG="M"  Endif
        WSOQ_ALLSTU=[F:SOQ]ALLQTYSTU
    Endif
    # Récupération du paramètre vente : USERERBPC : Consommation réservations clients
    Local Char WSOQ_PARAM(10) : Call PARAM([F:SOH]SALFCY,"USERERBPC",WSOQ_PARAM) From ADOVAL
    Call GENALLKIT ([F:SOH]SOHNUM, [F:SOQ]SOPLIN, [F:SOQ]SOQSEQ, WSOQ_TRTLIG, val(WSOQ_PARAM), 2, 0, 1, 0,
&                   WSOQ_ALLSTU, WRETOUR) From TRTVENALL
    If WRETOUR<>0 GOK=0 : Goto DEBLOC_SCDE : Endif
Endif
#--------------------------------------#
# Màj de l'encours SOF ou TPF (ventes) #
#--------------------------------------#
If [F:SOQ]DEMNUM <>""
    [M:ORDK]MAJCOD    = "M"
    If [F:SOH]BETFCY=2 & [F:SOH]BETCPY<>2
      [M:ORDK]WIPTYP  = 8
    Else
      [M:ORDK]WIPTYP  = 1
    Endif
    [M:ORDK]WIPSTA    = [F:SOQ]DEMSTA
    [M:ORDK]WIPNUM    = [F:SOQ]DEMNUM
    [M:ORDK]ITMREF    = [F:SOQ]ITMREF
    [M:ORDK]ORIFCY    = [F:SOH]SALFCY
    [M:ORDK]STOFCY    = [F:SOQ]STOFCY
    [M:ORDK]PJT       = [F:SOH]PJT
    [M:ORDK]BPRNUM    = [F:SOH]BPCORD
    [M:ORDK]STRDAT    = [F:SOQ]ORDDAT
    [M:ORDK]ENDDAT    = [F:SOQ]SHIDAT
    [M:ORDK]VCRTYP    = 2
    [M:ORDK]VCRNUM    = [F:SOQ]SOHNUM
    [M:ORDK]VCRLIN    = [F:SOQ]SOPLIN
    [M:ORDK]VCRSEQ    = [F:SOQ]SOQSEQ
    [M:ORDK]EXTQTY    = [F:SOQ]QTYSTU
    If [F:SOH]SOHCAT = 3
      [M:ORDK]CPLQTY = [F:SOQ]INVQTYSTU
    Else
      [M:ORDK]CPLQTY = [F:SOQ]DLVQTYSTU
    Endif
    [M:ORDK]ALLQTY    = [F:SOQ]ALLQTYSTU + [F:SOQ]ODLQTYSTU
    [M:ORDK]SHTQTY    = [F:SOQ]SHTQTYSTU
    [M:ORDK]FMI       = 3
    [M:ORDK]MRPMES    = 1
    [M:ORDK]VCRTYPORI = 0
    [M:ORDK]VCRNUMORI = ""
    [M:ORDK]VCRLINORI = 0
    [M:ORDK]VCRSEQORI = 0
    [M:ORDK]BOMALT    = 0
    [M:ORDK]ORI       = 2
    [M:ORDK]ABBFIL    = "SOQ"
    Call WIP From TRTWIP
    If GOK <1 : GMESSAGE=mess(013,100,1)-"ORDERS:"-[F:SOQ]DEMNUM : Endif
Endif
#----- Déblocage logique de la commande de vente -----#
$DEBLOC_SCDE
Unlock=SYMBOLE2
Return


$MAJ_MVS
#---------------------------------------------------#
#  Mise à jour mvts fournisseurs [F:MVS] et [F:LSM] #
# ------------------------------------------------- #
#   ORDNOTx   : Montant en commande HT              #
#   ORDATIx   : Montant en commande TTC             #
#   RCPNOTx   : Montant réceptionné non facturé HT  #
#   RCPATIx   : Montant réceptionné non facturé TTC #
#                                                   #
#   MVTDAT    : Date dernière réception             #
#   VCRNUM    : No   dernière réception             #
#   AMT       : Mt   dernière réception             #
#---------------------------------------------------#
#----- Pas de mise à jour si réception inter-sites, intra-société -----#
If [F:PTH]BETFCY=2 & [F:PTH]BETCPY<>2  Return : Endif
#----- Calcul Mts en commande -----#
Raz WORDNOT, WORDATI
If [F:PTD]POHNUM<>"" & (SIGN=-1 | ANC_LINCLEFLG<>2)
  WQTE1=max([F:POQ]QTYPUU-max([F:POQ]RCPQTYPUU-[F:PTD]QTYPUU*SIGN,[F:POQ]INVQTYPUU),0) : # Avant
  WQTE2=max([F:POQ]QTYPUU-max([F:POQ]RCPQTYPUU,[F:POQ]INVQTYPUU),0)                    : # Après
  If WQTE1<>0 | WQTE2<>0
    If [F:POQ]LINCLEFLG<>ANC_LINCLEFLG
      If SIGN=1  GBIDD1=WQTE1        Else  GBIDD1=WQTE2       : Endif
    Else
      If SIGN=1  GBIDD1=WQTE1-WQTE2  Else  GBIDD1=WQTE2-WQTE1 : Endif
    Endif
    WORDNOT=-([F:POQ]LINAMT*GBIDD1/[F:POQ]QTYPUU)*SIGN
    WORDATI=-([F:POQ]LINATI*GBIDD1/[F:POQ]QTYPUU)*SIGN
    Call ARRDEV(WORDNOT,[F:POH]CUR) From TRTDIV
    Call ARRDEV(WORDATI,[F:POH]CUR) From TRTDIV
    Call MAJENC_BPS([F:POH]BPSNUM,3,[F:POH]POHFCY,[F:POH]CUR,[F:POH]CHGTYP,[F:POH]ORDDAT,
&                   [F:POH]POHNUM,WORDNOT,WORDATI,[F:POH]TTVORD) From TRTBPMVT
  Endif
Endif
#----- Calcul Mts réceptionnés non facturés -----#
Raz WRCPNOT, WRCPATI, GBIDD1, GBIDD2
If [F:PTD]LININVFLG<>2 & [F:PTD]QTYPUU-[F:PTD]INVQTYPUU>0
  If [F:PTD]QTYPUU<>0 & [F:PTD]INVQTYPUU<>0
    GBIDD1=[F:PTD]LINAMT   *([F:PTD]QTYPUU-[F:PTD]INVQTYPUU)/[F:PTD]QTYPUU
    GBIDD2=[F:PTD]LINATIAMT*([F:PTD]QTYPUU-[F:PTD]INVQTYPUU)/[F:PTD]QTYPUU
  Else
    GBIDD1=[F:PTD]LINAMT
    GBIDD2=[F:PTD]LINATIAMT
  Endif
  #-----
  If [F:PTD]POHNUM=""  Raz [F:POH] : Endif
  #----- Chargement type de cours et date commande ou réception ------#
  If [F:PTD]POHNUM<>"" & GPTHCURDAT=1
    WCHGTYP=[F:POH]CHGTYP : WCHGDAT=[F:POH]ORDDAT
  Else
    WCHGTYP=[F:PTH]CHGTYP : WCHGDAT=[F:PTH]RCPDAT
  Endif
  #----- Conversion si nécessaire du montant en devise entête réception -----#
  If [F:PTH]CUR<>[F:PTD]NETCUR
    Call CONVERT ([F:PTD]NETCUR,[F:PTH]CUR,GLOCALDEV,WCHGTYP,WCHGDAT,
&                GBIDD1,WRCPNOT,WRETOUR) From TRTDEV
    If WRETOUR  WRCPNOT=GBIDD1 : Endif
    Call CONVERT2([F:PTD]NETCUR,[F:PTH]CUR,GLOCALDEV,WCHGTYP,WCHGDAT,
&                GBIDD2,WRCPATI,WRETOUR) From TRTDEV
    If WRETOUR  WRCPATI=GBIDD2 : Endif
  Else
    WRCPNOT=GBIDD1
    WRCPATI=GBIDD2
  Endif
  #-----
  WRCPNOT*=SIGN : Call ARRDEV(WRCPNOT,[F:PTH]CUR) From TRTDIV
  WRCPATI*=SIGN : Call ARRDEV(WRCPATI,[F:PTH]CUR) From TRTDIV
  Call MAJENC_BPS([F:PTH]BPSNUM,4,[F:PTH]PRHFCY,[F:PTH]CUR,WCHGTYP,WCHGDAT,
&                 [F:PTH]PTHNUM,WRCPNOT,WRCPATI,[F:PTH]TOTAMTATI) From TRTBPMVT
Endif
Return


#------------------------------------------------------#
# Valeurs par défaut et initialisations avant création #
#------------------------------------------------------#
$RAZCRE
# Issue 71069 - 2013-08-23 by SR : PJT
# A faire avant tout le reste
If GPJTSNGDOC = G_NON Then
 Call PJT_MODFCY([M:PTH0]PRHFCY,"[M:PTH1]PJT") From TRTPJT
Endif
# Issue 81761 - 2012-04-26 by MUARN : après navigation dans les entrées diverses pertes variables stock
[M:ENTW]WZONPCU = "UOM"
[M:ENTW]WZONQUC = "QTYUOM"
[M:ENTW]WZONCCS = "UOMSTUCOE"
[M:ENTW]WZONQUS = "QTYSTU"
[M:ENTW]WZONSTOUPD = ""
#----- chargement des formats évalués -----#
For I=0 To 8 [M:PTH1]FMTREM(I)="NZ:9.2#" : Next I
[M:PTH2]FMTCPLAMT="NPz:"+GDEVFMT1(max(find(GSYSCUR,GDEVISE(1..GNBDEV)),1))
#-----
Affzo [PTH0]1-99  : Actzo [PTH0]1-99  : # pb diszo
Affzo [PTH1]1-99  : Actzo [PTH1]10-99 : # pb diszo
Affzo [PTH2]1-99  : Actzo [PTH2]1-99  : # pb diszo
Raz [M:AD68] : # Effacement masque adresse fournisseur expéditeur
Raz [M:PCEX] : # Effacement informations douanières
Raz [M:PTHC], [M:PTH0]SALFCY
Raz [M:ORDK]
#-----
Call DELSTOENTW(-1,-1,"PTH1",1,1,"",0,"") From STKENT
Call RAZSTOSORW From STKSOR
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Local  Integer  WOK
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
#-----
Raz [M:STW]
[M:PTH1]INVFLG=1
If GFCY<>GFCYDEF(7)
  GFCY=GFCYDEF(7)
  Call GETFCYDEF(GFCY,"[F:FCY]WRHFLG=2") From TRTX3
  Gosub CHARG_PARAM From SUBPTHB
Endif
#----- Affichage entêtes de colonne variables -----#
Gosub AFF_TITCOL
#-----
If [F:PTR]PTRTYP<>6 | [F:PTR]PTRNUM<>GPTRNUM  : # Relecture transaction si nécessaire
  Read [PTR] PTR0=6;GPTRNUM : If fstat  Raz [F:PTR] : Endif
Endif
[M:PTH0]TRSCOD=[F:PTR]TRSCOD
[M:PTH0]ENTCOD=[F:PTR]ENTCOD
Actzo [PTH0]1-99  : Diszo [PTH0]CUR, CHGTYP
Actzo [PTH1]10-99
Actzo [PTH2]1-99
Raz [M:PCOW]
#--- Valeur par défaut du masque
[M:PTH0]PRHFCY=GFCY
If !GIMPORT
  If GNBAUZ=1 & GFCY<>""  Diszo [PTH0]PRHFCY : Endif
Endif

If dim([M:PTH0]WRHE)>0
   Call WRHINIT([M:PTH0]WRHE,[M:PTH0]PRHFCY,1) From STKWRH
Endif
#----- Chargement des clients correspondant au site de réception -----#
Raz I, [M:PTH0]BPCORD
For [BPD] BPD1 Where RCPFCY=[M:PTH0]PRHFCY
  [M:PTH0]BPCORD(I)=[F:BPD]BPCNUM
  I+=1
  # Issue X3-178900 - 2020-02-25 by SR : [M:PTH0]BPCORD : new dimension = 50
  #If I>9  Break : Endif
  If I>dim([M:PTH0]BPCORD)-1 : Break : Endif
Next
#-----
Actzo [PTH0]BETFCY
[M:PTH0]BETCPY=1
[M:PTH0]BETFCY=1
[M:PTH0]RCPDAT=date$
[M:PTH0]NDEDAT=date$ : [M:PTH0]NDEDAT2=date$
[M:PTH1]PCLFLG=2
[M:PTH2]DSPWEU=GSALDSPWEU
[M:PTH2]DSPVOU=GSALDSPVOU
If GLOCARGNUM  Actzo [PTH1]5  Else  Grizo [PTH1]5 : Endif
#----- Gestion des textes -----#
Call RAZ_CLOB From ACLOB : GCONSDIA=0 : # Rend saisissable le texte
Raz [M:PTH0]TEX1, [M:PTH0]TEX2, [M:PTH1]LINTEX
If !GIMPORT
  Call RESET_IMAGE (4) From GESECRAN
Endif
#----- Mise à jour des listes de gauche picking -----#
If !GIMPORT
  [M:PCOW]WBETFCY=2   : # Pour vider la liste de picking des commandes
  FILGAUSUP(0)="[F:POQ]LINCLEFLG=9"
  Gosub TIROIR
  Raz [M:PCOW]WBETFCY : # Remise à l'état initial
Endif
# Issue 84130 - 2012-12-11 by SR : landed cost mise à jour des données structure de cout
Call RAZSTCDW From STCLIB

# Actzo ou Grizo des dépôts selon le site
Gosub WRH_ETAT
# Issue 71069 - 2013-08-23 by SR : PJT
# A faire après tout le reste
If GPJTSNGDOC = G_OUI Then
 Call PJT_MODFCY([M:PTH0]PRHFCY,"[M:PTH1]PJT") From TRTPJT
Endif
Return


$LIENS
#-----------------------#
# Après lecture [F:PTH] #
#-----------------------#
# Issue 71069 - 2013-08-23 by SR : PJT
# A faire avant tout le reste
If GPJTSNGDOC = G_NON Then
 Call PJT_MODFCY([M:PTH0]PRHFCY,"[M:PTH1]PJT") From TRTPJT
Endif
# Issue 81761 - 2012-04-26 by MUARN : après navigation dans les entrées diverses pertes variables stock
[M:ENTW]WZONPCU = "UOM"
[M:ENTW]WZONQUC = "QTYUOM"
[M:ENTW]WZONCCS = "UOMSTUCOE"
[M:ENTW]WZONQUS = "QTYSTU"
[M:ENTW]WZONSTOUPD = ""
Call DELSTOENTW(-1,-1,"PTH1",1,1,[PTH0]PRHFCY,1,"") From STKENT
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
Call EFFACE_PWS("PTH",GBIDI2)   From PWSLIB
# Issue 95496 & 97173 - 2014-02-26 by CCC
Call RAZSTOSORW From STKSOR
#----- Chargement des indicateurs "facturée" et "soldée" -----#
If dim([M:PTH1]WCLEFLG)>0
  If [F:PTH]INVFLG=3  [M:PTH1]WCLEFLG=2 Else [M:PTH1]WCLEFLG=1 : Endif
Endif
If dim([M:PTH1]WINVFLG)>0
  If [F:PTH]INVLINCTR=0
    [M:PTH1]WINVFLG=1
  Elsif [F:PTH]INVLINNBR<[F:PTH]LINNBR
    [M:PTH1]WINVFLG=2
  Else
    [M:PTH1]WINVFLG=3
  Endif
Endif
#-----
Raz [M:STW]
#----- Chargement de la classe [M:AD68] zones adresse fournisseur expéditeur -----#
If [F:PTH]BPOCRY<>"" | [F:PTH]BPOCTY<>""
  [M:AD68]BPAADD      = [F:PTH]BPOADD
  [M:AD68]BPRNAM(0)   = [F:PTH]BPONAM(0)
  [M:AD68]BPRNAM(1)   = [F:PTH]BPONAM(1)
  [M:AD68]BPAADDLIG(0)= [F:PTH]BPOADDLIG(0)
  [M:AD68]BPAADDLIG(1)= [F:PTH]BPOADDLIG(1)
  [M:AD68]BPAADDLIG(2)= [F:PTH]BPOADDLIG(2)
  [M:AD68]CRY         = [F:PTH]BPOCRY
  [M:AD68]CRYNAM      = [F:PTH]BPOCRYNAM
  [M:AD68]SAT         = [F:PTH]BPOSAT
  [M:AD68]POSCOD      = [F:PTH]BPOPOSCOD
  [M:AD68]CTY         = [F:PTH]BPOCTY
  [M:AD68]ADBBPR      = [F:PTH]BPSNUM
  [M:AD68]ADBFLG      = 2
Else
  Raz [M:AD68]
  [M:AD68]BPAADD = [F:PTH]BPOADD
  [M:AD68]ADBBPR = [F:PTH]BPSNUM
Endif
#----- Chargement informations douanières -----#
[M:PCEX] = [F:PTH]
[M:PCEX]WPOSCOD=""
[M:PCEX]WBPSNUM=[F:PTH]BPSNUM
[M:PCEX]WBPAADD=[F:PTH]BPAADD
[M:PCEX]WCRY   =""
[M:PTHC] = [F:PTH]
[M:PTH1]NBLIG=[F:PTH]LINNBR : Actzo [PTH1]10-99
#--- Traitement des conditions de saisie
Raz [M:PCOW] : # Effacement masque des critères de sélection
[M:PCOW]WBPSNUM=[F:PTH]BPSNUM
[M:PCOW]WBETFCY=[F:PTH]BETFCY
If [M:PCOW]WBPSNUM<>""
  If [F:BPS]BPSNUM<>[M:PCOW]WBPSNUM
    Read [BPS] BPS0=[M:PCOW]WBPSNUM : If fstat Raz [F:BPS] : Endif
  Endif
  [M:PCOW]WBPSNAM=[F:BPS]BPSNAM
Endif
#----- Chargement des paramètres si nécesaire -----#
If GFCY<>[F:PTH]PRHFCY GFCY=[F:PTH]PRHFCY : Gosub CHARG_PARAM From SUBPTHB : Endif
#-----
Diszo [PTH0]PRHFCY, BETFCY, BPSNUM
Actzo [PTH0]CUR
# Issue 84557 - 2014-11-03 by SR : CHGTYP non modifiable si au moins une ligne
#If [M:PTH0]CUR=GLOCALDEV  Diszo [PTH0]CHGTYP Else Actzo [PTH0]CHGTYP : Endif
Diszo [M:PTH0]CHGTYP
# End issue 84557

If GLOCARGNUM  Actzo [PTH1]5  Else  Grizo [PTH1]5 : Endif
#-----
GCUR=[F:PTH]CUR
If [F:TCU]CUR<>GCUR
  Read [TCU] TCU0=GCUR : If fstat  Raz [F:TCU] : [F:TCU]CURRND=0.01 : Endif
Endif
GPTH_RND=[F:TCU]CURRND
#----- Chargement des sections analytiques entête -----#
If dim([M:PTH0]NBAXE)>0
  Call CHARG_CCEH("PTH0","NBAXE","PTH") From TRTX3CPT
Endif
#---- Chargement des éléments de facturation et des taxes -----#
Call CHARG_ELEMENTS (6,[M:PTH0]PTHNUM,"PTH2") From TRTACHELT1
Call CHARG_TAXES    (6,[M:PTH0]PTHNUM,"PTH2") From TRTACHELT1
#----- Lecture du tiers -----#
If [F:BPR]BPRNUM <> [F:PTH]BPSNUM
  Read [BPR]BPR0 = [F:PTH]BPSNUM
  If fstat  : Raz  [F:BPR] : Endif
Endif
If [M:PTH0]BETFCY=2
  [M:PTH0]SALFCY=[F:BPR]FCY
  #----- Chargement des clients correspondant au site de réception -----#
  Raz I, [M:PTH0]BPCORD
  For [BPD] BPD1 Where RCPFCY=[M:PTH0]PRHFCY
    [M:PTH0]BPCORD(I)=[F:BPD]BPCNUM
    I+=1
    # Issue X3-178900 - 2020-02-25 by SR :[M:PTH0]BPCORD : new dimension = 50
    #If I>9  Break : Endif
    If I>dim([M:PTH0]BPCORD)-1 : Break : Endif
  Next
  #-----
Else
  Raz [M:PTH0]SALFCY
Endif
# Issue 84130 - 2012-11-23 by MUARN : landed cost mise à jour des données structure de cout
Call RAZSTCDW From STCLIB
Gosub LIENS From TABLEAUX
[M:PTH0]BPSNDE2=[M:PTH0]BPSNDE
[M:PTH0]NDEDAT2=[M:PTH0]NDEDAT
Gosub TRT_BPSNDE From SUBPTH : # Traitement de la zone "BL fournisseur"
#----- Réajustement indicateur "facturée" si nécessaire -----#
If dim([M:PTH1]WINVFLG)>0 & [M:PTH1]WINVFLG=3 &
&  sigma(I=0,[M:PTH1]NBLIG-1,([M:PTH1]INVQTYSTU(I)>=[M:PTH1]QTYSTU(I)))<[M:PTH1]NBLIG
  [M:PTH1]WINVFLG=2
Endif
#-----
# Issue X3-73534 - 2018-02-01 by MUARN : pas de modification élément de facturation et devise en SST
If sigma(I=0,[M:PTH1]NBLIG-1,[M:PTH1]VCRTYPORI(I)=10)>0 | sigma(I=0,[M:PTH1]NBLIG-1,[M:PTH1]VCRTYPORI(I)=36)>0
  Diszo [PTH2]1-99
  Diszo [M:PTH0]CUR, CHGTYP
Else
  # Issue 121901 - 2017-03-31 by MUARN : pas de modification si facture ou facture complémentaire sur la réception
  #If [M:PTH1]WCLEFLG=2  Diszo [PTH2]1-99  Else  Actzo [PTH2]1-99 : Endif
  If [M:PTH1]WCLEFLG=2
    Diszo [PTH2]1-99
    # Issue X3-38324 - 2017-07-18 by SR : Devise et cours non modifiables
    Diszo [M:PTH0]CUR, CHGTYP
  Else
    If [M:PTH1]WINVFLG > 1
      Diszo [PTH2]1-99
      # Issue X3-38324 - 2017-07-18 by SR : Devise et cours non modifiables
      Diszo [M:PTH0]CUR, CHGTYP
    Else
      Look [PID] PID1(2)=2;[M:PTH0]PTHNUM # Facture complémentaire
      [G:PID]currind=1 : [G:PID]currlen=0 : # Réinitialisation clé par défaut
      If !fstat
        Diszo [PTH2]1-99
        # Issue X3-38324 - 2017-07-18 by SR : Devise et cours non modifiables
        Diszo [M:PTH0]CUR, CHGTYP
      Else
        Actzo [PTH2]1-99
        # Issue X3-38324 - 2017-07-18 by SR : Devise et cours non modifiables
        Actzo [M:PTH0]CUR, CHGTYP
      Endif
    Endif
  Endif
Endif
#-------------------------#
# lecture du fournisseur  #
#-------------------------#
If [F:BPS]BPSNUM<>[F:PTH]BPSNUM
  Read [BPS] BPS0=[F:PTH]BPSNUM : If fstat  Raz [F:BPS] : Endif
Endif
#-----
If GPLISTC<>[F:BPS]PLISTC
  GPLISTC=[F:BPS]PLISTC
  Call COLREM("C",2,[F:BPS]PLISTC) From TRTPRICE
  Call TYPREM(2,[F:BPS]PLISTC)     From TRTPRICE
  Call TARIFCHGT(6)                From TRTPRICE
  GSOC_UPDFLG=1 : # Pour forcer l'affichage des entêtes de colonne variables
Endif
Call FMTREM("PTH1",GCUR) From TRTPRICE
[M:PTH2]FMTCPLAMT="-NPz:"+GDEVFMT1(max(find([M:PTH0]CUR,GDEVISE(1..GNBDEV)),1))
#-----
If [M:PTH2]DSPWEU=""  [M:PTH2]DSPWEU=GSALDSPWEU : Endif
If [M:PTH2]DSPVOU=""  [M:PTH2]DSPVOU=GSALDSPVOU : Endif
#----- Affichage entêtes de colonne variables -----#
If !clalev([F:ADL])  Gosub AFF_TITCOL : Endif
#-----
If GFONC1="GESPTH"  Call RAZ_CLOB From ACLOB : Endif
#----- Affichage icone texte -----#
If !GIMPORT
  If [M:PTH0]TEX1<>"" | [M:PTH0]TEX2<>""
    Call SET_IMAGE (4)   From GESECRAN
  Else
    Call RESET_IMAGE (4) From GESECRAN
  Endif
Endif
#----- Mise à jour des listes de gauche picking -----#
If !GIMPORT & !clalev([F:ADL])  Gosub TIROIR : Endif
#-----
# Actzo ou Grizo des dépôts selon le site
GWRHOBY = GSVGWRHOBY
Gosub WRH_ETAT

#--- Bug 82324
If [F:FCY]WRHGES=2
   If dim([M:PTH1]WRH)>0 Diszo [M:PTH1]WRH Endif
Endif
#---
# Issue 84130 - 2013-01-21 by MUARN : landed cost - onglet cout du document
If GFONCTION = "GESPTH" & !GIMPORT
  Call CSTDOC("PTH1","PTH2", [M:PTH0]PTHNUM, 6, [M:PTH0]CHGCOE) From STCLIB
Endif
# Issue 71069 - 2016-04-13 by MUARN : PJT
If [M:PTH1]WCLEFLG = 2 | [M:PTH1]INVFLG >1
  Diszo [PTH0]PJTH
Else
  Actzo [PTH0]PJTH
Endif

# Issue X3-74498 - 2018-05-15 by RBA : Add LPN management on receipts
Call STKDISCOL("PTH1",[M:PTH1]NBLIG) From STKECR

# Issue 71069 - 2013-08-23 by SR : PJT
# A faire après tout le reste
If GPJTSNGDOC = G_OUI Then
 Call PJT_MODFCY([M:PTH0]PRHFCY,"[M:PTH1]PJT") From TRTPJT
Endif
Return


$INICRE
#---------------------------#
# Chargement avant le Write #
#---------------------------#
If GMANCOU<>2 | (GMANCOU=2 & vireblc([M:PTH0]PTHNUM,2)="")
  Call NUMERO(GCODNUM,[M:PTH0]PRHFCY,[M:PTH0]RCPDAT,"",[M:PTH0]PTHNUM,WSTAT) From SUBANM
  If GOK<0
    Return
  Elsif GOK<1 | WSTAT<>0
    GOK=0 : GERR=1 : GMESSAGE=GCODNUM-mess(60,199,1)
    Return
  Endif
  [F:PTH]PTHNUM = [M:PTH0]PTHNUM
Endif
#----- Lecture du tiers ou fournisseur si besoin -----#
If [F:BPR]BPRNUM<>[F:PTH]BPSNUM
  Read [BPR] BPR0=[F:PTH]BPSNUM : If fstat  Raz [F:BPR] : Endif
Endif
If [F:BPS]BPSNUM<>[F:PTH]BPSNUM
  Read [BPS] BPS0=[F:PTH]BPSNUM : If fstat  Raz [F:BPS] : Endif
Endif
#----- Zones entête -----#
[F:PTH]CPY    = GSOCIETE
[F:PTH]PURTYP = 1
[F:PTH]BPAADD = [F:BPS]BPAADD
[F:PTH] = [M:PTHC]
If dim([F:PTH]TSSCOD)>0
  J= dim([F:PTH]TSSCOD)-1
  If dim([F:BPS]TSSCOD)-1<J J=dim([F:BPS]TSSCOD)-1 : Endif
  For I=0 To J [F:PTH]TSSCOD(I)=[F:BPS]TSSCOD(I) : Next I
Endif
# Alimentation dépôt entête si mono-dépôt
If dim([M:PTH0]WRHE)>0 & GWRHOBY=2
  [F:PTH]WRHE = [M:PTH0]WRHE
Else
  [F:PTH]WRHE = ""
Endif
[F:PTH]PRNFLG = 1
[F:PTH]PSTFLG = 1
Gosub CHARG_ADR_EXPEDITEUR
[F:PTH] = [M:PCEX]
For I=0 To dim([F:PTH]INVDTALIN1)-1 : [F:PTH]INVDTALIN1(I)=GINVDTALIN(I) : Next I
#----- Nombre de lignes -----#
[F:PTH]LINNBR=[M:PTH1]NBLIG
#----- Chargement HT et TTC réception en devise société -----#
Call COURMNT([F:PTH]CUR,GLOCALDEV,GLOCALDEV,[F:PTH]CHGTYP,[F:PTH]RCPDAT,1,
&            [F:PTH]TOTAMTNOT,[F:PTH]TOTAMTNOTL,[F:PTH]CHGCOE,WSTAT) From TRTDEV
Call COURMNT([F:PTH]CUR,GLOCALDEV,GLOCALDEV,[F:PTH]CHGTYP,[F:PTH]RCPDAT,1,
&            [F:PTH]TOTAMTATI,[F:PTH]TOTAMTATIL,[F:PTH]CHGCOE,WSTAT) From TRTDEV
#----- Création ou duplication des textes entête et pied -----#
Gosub CHARG_TEXT_ENTETE
#----- Initialisation des régimes et natures CEE -----#
If GACTDEB=2 & [F:PTH]EECNAT="" & [F:PTH]EECSCH=""
  Call INICRE_EEC("PTH",GBIDI2,[F:PTH]EECNAT,[F:PTH]EECSCH,GBIDI3,GBIDC2,GBIDC3) From FUNDEBA
Endif
# Issue 84130 - 2012-12-17 by SR : Calculer le CPR,etc... sur toutes les lignes
Call MAJ_REPART_LIG From SUBPTHD
Return


$CREATION
#------------------------------#
# Création des lignes commande #
#------------------------------#
GMODIF = 1
#----- Ecriture des éléments de facturation avec comptes et sections -----#
Call ENREG_ELEMENTS(6,[M:PTH0]PTHNUM,"PTH2","C") From TRTACHELT1
# Issue X3-211941 - 2020-08-28 by SR
#If GOK<1  Return : Endif
If GOK<1  Goto ERR_CREATION : Endif
#----- Ecriture du tableau des taxes -----#
Call ENREG_TAXES   (6,[M:PTH0]PTHNUM,"PTH2","C") From TRTACHELT1
# Issue X3-211941 - 2020-08-28 by SR
#If GOK<1  Return : Endif
If GOK<1  Goto ERR_CREATION : Endif
#-----
Gosub CREATION From TABLEAUX : If GOK<1  Return : Endif
Gosub DEVERROU_POH From SUBPTHA : # Déverrou de toutes les commandes
# Issue X3-211941 - 2020-08-28 by SR
#If GOK<1  Return : Endif
If GOK<1  Goto ERR_CREATION : Endif
Gosub REAJUST_ENTETE
# Issue X3-211941 - 2020-08-28 by SR
#If GOK<1  Return : Endif
If GOK<1  Goto ERR_CREATION : Endif
#----- Mise à jour statistiques entête réception -----#
# Issue X3-211941 - 2020-08-28 by SR
#SIGN=1 : Call VALSTA("PTH",SIGN) From SUBPS2 : If GOK<1 Return : Endif
SIGN=1 : Call VALSTA("PTH",SIGN) From SUBPS2
If GOK<1  Goto ERR_CREATION : Endif
Return
# Issue X3-211941 - 2020-08-28 by SR : Erase PTHNUM
$ERR_CREATION
Raz [M:PTH0]PTHNUM
Return
# End issue X3-211941


$APRES_CRE
#-------------------------------------------------------------#
# Effacement fichier de travail, Régul manquants, Impressions #
#-------------------------------------------------------------#
If GVTMOD & dim(GTRAVT)>0
  #----- Réception N° XXXXXXXXXXXXXXX créée ! -----#
  GTRAVT=mess(34,172,1)-[M:PTH0]PTHNUM+"|\|"+mess(224,197,1)
Endif
If !GIMPORT  Affzo [PTH0]PTHNUM : Endif : # Affichage du compteur
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Local  Integer  WOK
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
# Issue 96008 GA 11/2014 do not consider service and materials for an EO receipt
#----- Régularisation des manquants et alloc -----#
#Call REGFROMENT(0,"PTH1","[M:PTH1]CREFLG(I)=0","ITMREF",[M:PTH0]PRHFCY) From TRTSHTCOM
Call REGFROMENT(0,"PTH1","[M:PTH1]CREFLG(I)=0 & [M:PTH1]LINTYP(I)<3","ITMREF",[M:PTH0]PRHFCY) From TRTSHTCOM
#----- Relecture transaction si nécessaire -----#
If [F:PTR]PTRTYP<>6 | [F:PTR]PTRNUM<>GPTRNUM
  Read [PTR] PTR0=6;GPTRNUM : If fstat Raz [F:PTR] : Endif
Endif
#----- Impression des étiquettes sauf si import -----#
#MAE, 05/08/08, pas d'impression d'étiquettes en mode VT
If [F:PTR]PRNCOD1>1 & !GIMPORT & !GWEBSERV & !GVTMOD
   Local Char    LCRIT(250)
   Local Char WPARAM(GLONVCR)(1..4) , WVALEUR(10)
   Local Integer WCREATION
   WPARAM(1) = [M:PTH0]PRHFCY
   WPARAM(2) = num$(6)
   WPARAM(3) = [M:PTH0]PTHNUM

#                                                                                           # hcb X3-91077 - X3-92342 deb
#  Call TRAITE_CHAR(WVALEUR,WPARAM,"ISTOLBE","SUBSLP","",4,"SPESLP") From GTRAITE
  Case [F:PTR]PRNCOD1
       When 2 :
         Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
       When 6 :
         Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE2","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette nouveau contenant
       When 7 :
         If !clalev([F:LPN])  : Local File LPN          [LPN]  : Endif
         Raz WCREATION
         LCRIT   = "STOFCY=[M:PTH0]PRHFCY"
         LCRIT  += "&VCRNUM>=[M:PTH0]PTHNUM"
         LCRIT  += "&VCRNUM<=[M:PTH0]PTHNUM"
         LCRIT  += "&PRTFLG <> 2"
         Filter [F:LPN] Where evalue(LCRIT)
&        Order By Key LPN0
         For [LPN]
             WCREATION = 2
             Break
         Next
         Filter [LPN]
         If WCREATION = 2
            Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE3","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock et contenant créé
         Else
            Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
         Endif
       When Default
  Endcase
#                                                                                           # hcb X3-91077 - X3-92342 fin
Endif
#----- Si présence d'articles de sous-traitance et module GP actif -----#
If find(2,[M:PTH1]WRKMOTEUR(0..[M:PTH1]NBLIG-1)) & GMODU(8)=2
  Local Char WMTKNUMSTR(GLONVCR), WMTKNUMEND(GLONVCR)
  Local Char WFILTRE(80)
  Raz GBIDI1, WMTKNUMSTR, WMTKNUMEND
# GA 06/2006 à faire plus tôt sinon erreur [F:MKI] à l'ouverture TRTPSAISTT
# If !clalev([F:MTK])  Local File MFGHEADTRK   [MTK]  : Endif
# If !clalev([F:MKI])  Local File MFGITMTRK    [MKI]  : Endif
# If !clalev([F:MKI2]) Local File MFGITMTRK    [MKI2] : Endif
  For [MTK] MTK2 Where PTHNUM=[M:PTH0]PTHNUM & MFGFCY=[M:PTH0]PRHFCY
    #----- Il y a un suivi et il contient une déclaration de production -----#
    If [F:MTK]ITMTRKFLG=2
      #----- Régularisation des manquants et alloc pour articles lancés -----#
      For [MKI2] MKI0 Where MFGTRKNUM=[F:MTK]MFGTRKNUM
        WFILTRE="[F:MKI]MFGTRKNUM=[F:MKI2]MFGTRKNUM & [F:MKI]ITMTRKLIN=[F:MKI2]ITMTRKLIN"
        Call REGFROMENT(1,"MKI",WFILTRE,"ITMREF",[F:MTK]MFGFCY) From TRTSHTCOM
      Next
      #-----
      If WMTKNUMSTR=""  WMTKNUMSTR=[F:MTK]MFGTRKNUM : Endif
      WMTKNUMEND=[F:MTK]MFGTRKNUM
    Endif
  Next
  If WMTKNUMSTR<>"" & WMTKNUMEND<>""
    #----- Impression des étiquettes articles lancés sauf si import -----#
    If [F:PTR]PRNCOD1>1 & !GIMPORT & !GWEBSERV & !GVTMOD     #--- Lot V01
      Local Char    LCRIT(250)
      Local Char WPARAM(GLONVCR)(1..4) , WVALEUR(10)
      Local Integer WCREATION
      WPARAM(1) = [M:PTH0]PRHFCY
      WPARAM(2) = num$(15)
      WPARAM(3) = WMTKNUMSTR
      WPARAM(4) = WMTKNUMEND
#                                                                                           # hcb X3-91077 - X3-92342 deb
#     Call TRAITE_CHAR(WVALEUR,WPARAM,"ISTOLBE","SUBSLP","",4,"SPESLP") From GTRAITE
      Case [F:PTR]PRNCOD1
         When 2 :
           Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
         When 6 :
           Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE2","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette nouveau contenant
         When 7 :
           If !clalev([F:LPN])  : Local File LPN          [LPN]  : Endif
           Raz WCREATION
           LCRIT   = "STOFCY=[M:PTH0]PRHFCY"
           LCRIT  += "&VCRNUM>=WMTKNUMSTR"
           LCRIT  += "&VCRNUM<=WMTKNUMEND"
           LCRIT  += "&PRTFLG <> 2"
           Filter [F:LPN] Where evalue(LCRIT)
&          Order By Key LPN0
           For [LPN]
               WCREATION = 2
               Break
           Next
           Filter [LPN]
           If WCREATION = 2
              Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE3","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock et contenant créé
           Else
              Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
           Endif
         When Default
      Endcase
#                                                                                           # hcb X3-91077 - X3-92342 fin
    Endif
  Endif
Endif
#----- Impression bon de réception -----#
If [F:PTR]DOCFLG=2 & !GIMPORT & !GWEBSERV & !GVTMOD   #--- Lot V01
  #-----  Relecture fournisseur si nécessaire -----#
  If [F:BPS]BPSNUM<>[M:PTH0]BPSNUM
    Read [BPS] BPS0=[M:PTH0]BPSNUM : If fstat  Raz [F:BPS] : Endif
  Endif
  #-----
  If [F:BPS]NREPRNFLG=2
    Local Char TBPAR(10)(1..50), TBVAL(30)(1..50)
    Gosub SET_CLE From GOBJSUB : CLECUR=1 : # SET_CLE parce que création
    Call ETAT([F:PTR]DOCNAM,"GESPTH",TBPAR,TBVAL) From ETAT
  Endif
Endif
#----- Affichage icone texte, màj listes gauche picking et affichage trace -----#
If !GIMPORT
  If !GVTMOD
    If [M:PTH0]TEX1<>"" | [M:PTH0]TEX2<>""
      Call SET_IMAGE (4)   From GESECRAN : # Affichage icone texte
    Else
      Call RESET_IMAGE (4) From GESECRAN : # Effacement icone texte
    Endif
    Gosub TIROIR                         : # Màj listes de gaiche picking
    Gosub RELIT From GOBJSUB             : # Relecture pour affichage lot compteur
  Endif
  Gosub LECTURE_TRACE                    : # Affichage de la trace le cas échéant
Else
  If !GVTMOD  Gosub LIENS From SUBPTHA : Endif
Endif
Return

$AB_CREATION
#-------------------------------------------#
# Abandon de la création suite à une erreur #
#-------------------------------------------#
# sr 08.11 Demande 75330
Gosub DEVERROU_POH From SUBPTHA : # Déverrou de toutes les commandes

Gosub LECT_EFFAC_TRACE
# Raz du numéro pour éviter plantage sur clé existante
Raz [M:PTH0]PTHNUM
Return


$AVANT_MOD
#-----------------------------------#
# Après appui sur le bouton "Modif" #
#-----------------------------------#
#--- Facture à recevoir comptabilisée pour cette réception ! Voulez-vous continuer ? ---#
If [M:PTH1]PSTFLG>1
  OK=2 : Call AVERTIR (mess(338,194,1),OK) From GESECRAN
  If OK=2  OK=1  Else  OK=0 : Return : Endif
Endif
Return


$AVANT_MODFIC
#----------------------------------------------------------------#
# Avant chargement des nouvelles valeurs dans la classe [F:PTH]  #
#----------------------------------------------------------------#

#----- Cas particulier où l'on modifie le texte en le supprimant -----#
If [M:PTH0]TEX1="" & left$([F:PTH]TEX1,3)="PTH"
  Call SUP_CLOB([F:PTH]TEX1,GBIDI2) From TRTX3TEX
Endif
If [M:PTH0]TEX2="" & left$([F:PTH]TEX2,3)="PTH"
  Call SUP_CLOB([F:PTH]TEX2,GBIDI2) From TRTX3TEX
Endif
#----- Mise à jour statistiques entête réception -----#
Local Integer SIGN
SIGN=-1 : Call VALSTA("PTH",SIGN) From SUBPS2 : If GOK<1 Return : Endif
#----- Mise à jour date de réception des lignes si besoin -----#
If [M:PTH0]RCPDAT<>[F:PTH]RCPDAT
  Update [PTD] Where PTHNUM=[F:PTH]PTHNUM With RCPDAT=[M:PTH0]RCPDAT
  If fstat  GOK=0 : Call FSTA("PTD") From GLOCK : Return : Endif
Endif
# Réalimenter [M]WRHE avec [F]WRHE pour ne pas écraser le mono-dépôt
If dim([M:PTH0]WRHE)>0
   [M:PTH0]WRHE = [F:PTH]WRHE
Endif

# Issue 93971 - 2013-10-29 by MUARN : inutile
# Issue 85147 - 2012-10-15 by MUARN : modif éléments de facturation
#Local Decimal  ANC_WINVDTACST
#Raz ANC_WINVDTACST
#For I=1 To 9
#    If [F:PTH]INVDTALIN2(I-1)<>0
#      Read [PFI] PFI0=[F:PTH]INVDTALIN2(I-1) : If fstat Raz [F:PFI] : Endif
#      If [F:PFI]NPRVLT=2
#        ANC_WINVDTACST+=evalue("[F:PTD]DISCRGAMT"+num$(I))
#      Endif
#    Endif
#Next I

# Issue 101100 - 2014-09-16 by MUARN : code élément de facturation
For I=1 To 9
  ANC_WINVDTALIN(I) =[F:PTH]INVDTALIN2(I-1)
Next

Return

$INIMOD
#-----------------------------#
# Chargement avant le Rewrite #
#-----------------------------#
#----- lecture du tiers et/ou du four si besoin -----#
If [F:BPR]BPRNUM<>[F:PTH]BPSNUM
  Read [BPR] BPR0=[F:PTH]BPSNUM : If fstat  Raz [F:BPR] : Endif
Endif
If [F:BPS]BPSNUM<>[F:PTH]BPSNUM
  Read [BPS] BPS0=[F:PTH]BPSNUM : If fstat  Raz [F:BPS] : Endif
Endif
#----- Nombre de lignes -----#
[F:PTH]LINNBR=[M:PTH1]NBLIG
# Issue X3-101815 - 2018-07-24 by SR : PURTYP lost by Transclass (PURTYP present on PTH2)
[F:PTH]PURTYP = 1
#-----
[F:PTH] = [M:PTHC]
Gosub CHARG_ADR_EXPEDITEUR
[F:PTH] = [M:PCEX]
#----- Chargement HT et TTC réception en devise société -----#
Call COURMNT([F:PTH]CUR,GLOCALDEV,GLOCALDEV,[F:PTH]CHGTYP,[F:PTH]RCPDAT,1,
&            [F:PTH]TOTAMTNOT,[F:PTH]TOTAMTNOTL,[F:PTH]CHGCOE,WSTAT) From TRTDEV
Call COURMNT([F:PTH]CUR,GLOCALDEV,GLOCALDEV,[F:PTH]CHGTYP,[F:PTH]RCPDAT,1,
&            [F:PTH]TOTAMTATI,[F:PTH]TOTAMTATIL,[F:PTH]CHGCOE,WSTAT) From TRTDEV
#----- Création ou duplication des textes entête et pied -----#
Gosub CHARG_TEXT_ENTETE

# Issue 84130 - 2012-12-17 by SR : Calculer le CPR,etc... sur toutes les lignes
Call MAJ_REPART_LIG From SUBPTHD
Return

$MODIF
#--------------------------------------#
# Modification des lignes de réception #
#--------------------------------------#
GMODIF = 1
#----- Ecriture des éléments de facturation avec comptes et sections -----#
Call ENREG_ELEMENTS(6,[M:PTH0]PTHNUM,"PTH2","M") From TRTACHELT1
If GOK<1  Return : Endif
#----- Ecriture du tableau des taxes -----#
Call ENREG_TAXES   (6,[M:PTH0]PTHNUM,"PTH2","M") From TRTACHELT1
If GOK<1  Return : Endif
#-----
Gosub MODIF From TABLEAUX : If GOK<1  Return : Endif
Gosub DEVERROU_POH From SUBPTHA : # Déverrou de toutes les commandes
If GOK<1  Return : Endif
Gosub REAJUST_ENTETE
If GOK<1  Return : Endif
#----- Mise à jour statistiques entête réception -----#
SIGN=1 : Call VALSTA("PTH",SIGN) From SUBPS2 : If GOK<1 Return : Endif
Return

$APRES_MODIF
#                                                                               # hcb X3-117390 deb
If find(COUZON,"UOM","QTYUOM","UOMSTUCOE","TCTRNUM","LPNNUM","STA","LOCTYP","LOC","BPSLOT","LOT","NBSLO","SLO","SERNUM","PALNUM","CTRNUM")
   [M:PTH1]MAJFLG(nolign-1) = 9
Endif
#                                                                               # hcb X3-117390 fin

#------------------------------------#
# Après modification de chaque champ #
#------------------------------------#
# Issue 84130 - 2012-12-11 by SR  Si modification de zones impactantes
If [M:PTH1]POHNUM(nolign-1) <> ""
    If GSTCPTH=1
      If find(COUZON,"ITMREF","GROPRI","QTYUOM","QTYVOU","QTYWEU","UOM","WEU","VOU","RCPDAT")
         [M:PTH1]WSTCUPD(nolign-1) = 2
      Endif
    Else
      If COUZON = "QTYUOM" & [M:PTH1]CREFLG(nolign-1)=0
         [M:PTH1]WSTCUPD(nolign-1) = 2
      Endif
    Endif
Else
   If find(COUZON,"ITMREF","GROPRI","QTYUOM","QTYVOU","QTYWEU","UOM","WEU","VOU","RCPDAT")
         [M:PTH1]WSTCUPD(nolign-1) = 2
   Endif
Endif
If GIMPORT  Return : Endif
If GRELITPTH=1 : # On vient de modifier une ligne de réception
  #----- Réaffichage de la réception modifiée -----#
  Raz GRELITPTH
  Gosub RELIT From GOBJSUB
  OK=0
  #----- Affichage de la trace, sauf import -----#
  If !GIMPORT Gosub LECTURE_TRACE : Endif
Elsif COUZON="BPSNUM"
  Gosub SETBOUT From GOBJSUB
Endif
# Issue 106506 - 2015-04-20 by SR : Landed Cost
# Issue 115956 - 2016-08-29 by SR : Séparer expéditions et pré réceptions
If !find(currbox,GBOXPO2,GBOXSD2,GBOXSHIP1,GBOXSHIP2,GBOXSHIP4)  Return : Endif
# Issue 71069 - 2016-01-28 by SR : Gestion du PJT
If !find(COUZON,"PRHFCY","BETFCY","BPSNUM","RCPDAT","PJTH") | GIMPORT Return : Endif
If (FILGAUSUP(0)<>"[F:POQ]LINCLEFLG=9" & FILGAUSUP(0)<>"[F:SDD]BPCORD=''")|
&  [M:PCOW]WBPSNUM<>"" | [M:PCOW]WBETFCY=2 | COUZON="BPSNUM"
  If COUZON="RCPDAT"  [M:PTH0]RCPDAT=CZ : Endif
  Gosub TIROIR
Endif
Return

$APRES_MOD
#--------------------------------------------------------------------------#
# Après modification : affichage indicateurs entête et rechargement lignes #
#--------------------------------------------------------------------------#
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Local  Integer  WOK
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
# Issue 96008 GA 11/2014 do not consider service and materials for an EO receipt
#----- Régularisation des manquants et alloc -----#
#Call REGFROMENT(0,"PTH1","[M:PTH1]CREFLG(I)=0","ITMREF",[M:PTH0]PRHFCY) From TRTSHTCOM
Call REGFROMENT(0,"PTH1","[M:PTH1]CREFLG(I)=0 & [M:PTH1]LINTYP(I)<3","ITMREF",[M:PTH0]PRHFCY) From TRTSHTCOM
#----- relecture transaction si nécessaire -----#
If [F:PTR]PTRTYP<>6 | [F:PTR]PTRNUM<>GPTRNUM
  Read [PTR] PTR0=6;GPTRNUM : If fstat Raz [F:PTR] : Endif
Endif
#----- Impression des étiquettes sauf si import -----#
If [F:PTR]PRNCOD1>1 & !GIMPORT & !GWEBSERV & sigma(I=0,[M:PTH1]NBLIG-1,[M:PTH1]UPDFLG(I)<>0)
   Local Char    LCRIT(250)
   Local Char WPARAM(GLONVCR)(1..4) , WVALEUR(10)
   Local Integer WCREATION
   WPARAM(1) = [M:PTH0]PRHFCY
  WPARAM(2) = num$(6)
  WPARAM(3) = [M:PTH0]PTHNUM
#                                                                                           # hcb X3-91077 - X3-92342 deb
#  Call TRAITE_CHAR(WVALEUR,WPARAM,"ISTOLBE","SUBSLP","",4,"SPESLP") From GTRAITE
  Case [F:PTR]PRNCOD1
       When 2 :
         Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
       When 6 :
         Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE2","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette nouveau contenant
       When 7 :
           If !clalev([F:LPN])  : Local File LPN          [LPN]  : Endif
           Raz WCREATION
           LCRIT   = "STOFCY=[M:PTH0]PRHFCY"
           LCRIT  += "&VCRNUM>=[M:PTH0]PTHNUM"
           LCRIT  += "&VCRNUM<=[M:PTH0]PTHNUM"
           LCRIT  += "&PRTFLG <> 2"
           Filter [F:LPN] Where evalue(LCRIT)
&          Order By Key LPN0
           For [LPN]
               WCREATION = 2
               Break
           Next
           Filter [LPN]
           If WCREATION = 2
              Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE3","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock et contenant créé
           Else
              Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
           Endif            When Default
  Endcase
#                                                                                           # hcb X3-91077 - X3-92342 fin
  #----- Si présence d'articles de sous-traitance et module GP actif -----#
  If find(2,[M:PTH1]WRKMOTEUR(0..[M:PTH1]NBLIG-1)) & GMODU(8)=2
    Local Char WMTKNUMSTR(GLONVCR), WMTKNUMEND(GLONVCR)
    Raz GBIDI1, WMTKNUMSTR, WMTKNUMEND
    If !clalev([F:MTK])  Local File MFGHEADTRK   [MTK] : Endif
    For [F:MTK] MTK2 Where PTHNUM=[M:PTH0]PTHNUM & MFGFCY=[M:PTH0]PRHFCY
      If [F:MTK]ITMTRKFLG=2
        #----- Il y a un suivi et il contient une déclaration de production -----#
        For [STJ] STJ1 Where STOFCY=[F:MTK]MFGFCY
&                          & VCRTYP=15
&                          & VCRNUM=[F:MTK]MFGTRKNUM
&                          & UPDCOD=2
          If WMTKNUMSTR=""  WMTKNUMSTR=[F:MTK]MFGTRKNUM : Endif
          WMTKNUMEND=[F:MTK]MFGTRKNUM
        Next
      Endif
    Next
    If WMTKNUMSTR<>"" & WMTKNUMEND<>""
      #----- Impression des étiquettes articles lancés sauf si import -----#
      If [F:PTR]PRNCOD1>1 & !GIMPORT & !GWEBSERV
        Local Char WPARAM(GLONVCR)(1..4) ,WVALEUR(10)
        WPARAM(1) = [M:PTH0]PRHFCY
        WPARAM(2) = num$(15)
        WPARAM(3) = WMTKNUMSTR
        WPARAM(4) = WMTKNUMEND
#                                                                                           # hcb X3-91077 - X3-92342 deb
#       Call TRAITE_CHAR(WVALEUR,WPARAM,"ISTOLBE","SUBSLP","",4,"SPESLP") From GTRAITE
           Case [F:PTR]PRNCOD1
             When 2 :
               Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE1","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock
             When 6 :
               Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE2","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette nouveau contenant
             When 7 :
               Call TRAITE_CHAR(WVALEUR,WPARAM,"IRCPLBE3","SUBRCPLBE","",4,"SPERCPLBE") From GTRAITE  # Etiquette stock et contenant créé
             When Default
           Endcase
#                                                                                           # hcb X3-91077 - X3-92342 fin
      Endif
    Endif
  Endif
Endif
#----- Réactualisation et affichage des indicateurs -----#
[M:PTH1]=[F:PTH]
Gosub LIENS From SUBPTHA
If dim([M:PTH1]WCLEFLG)>0
  If [F:PTH]INVFLG=3  [M:PTH1]WCLEFLG=2 Else [M:PTH1]WCLEFLG=1 : Endif
Endif
If !GIMPORT  Affzo [PTH1]10-15 : Endif
#----- Affichage icone texte, màj listes gauche picking et affichage trace -----#
If !GIMPORT
  If [M:PTH0]TEX1<>"" | [M:PTH0]TEX2<>""
    Call SET_IMAGE (4)   From GESECRAN : # Affichage icone texte
  Else
    Call RESET_IMAGE (4) From GESECRAN : # Effacement icone texte
  Endif
  Gosub TIROIR                         : # Màj listes de gauche picking
  Gosub LECTURE_TRACE                  : # Affichage de la trace le cas échéant
Endif
Return

$AB_MODIF
#-----------------------------------------------#
# Abandon de la modification suite à une erreur #
#-----------------------------------------------#
# sr 08.11 Demande 75330
Gosub DEVERROU_POH From SUBPTHA : # Déverrou de toutes les commandes

Gosub LECT_EFFAC_TRACE
Return

$ABANDON
#----------------------------------------------------#
# Abandon création et modification par l'utilisateur #
#----------------------------------------------------#
GMODIF=1
Local Shortint SAVGOK : SAVGOK=GOK  : # Sauvegarde de GOK
Call DELSTOENTW(-1,-1,"PTH1",1,1,[PTH0]PRHFCY,1,"") From STKENT
# Issue 84130 - 2012-12-11 by SR : landed cost mise à jour des données structure de cout
Call RAZSTCDW From STCLIB
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Local  Integer  WOK
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
#-----
Local Integer WRET                                            # FQ 72505 GA 03/2011
Call DELSTOSORW(-1, -1,"PTH1",[PTH0]PRHFCY,WRET) From STKSOR  # FQ 72505 GA 03/2011
Raz [M:STW]
Gosub DEVERROU_POH     From SUBPTHA : # Déverrou de toutes les commandes
Gosub SUPPRESS_TEX     From SUBPTHB : # Suppression des textes
#--- Remise à blanc du filtre de sélection ---#
Raz [M:PCOW]
#----- Mise à jour des listes de gauche picking -----#
If GREP="C" & !GIMPORT & BOUT="A"
  Raz [M:PTH0], [M:PTH1], [M:PTH2]
  Actzo [PTH0] : Actzo [PTH1]10-99 : Actzo [PTH2] : Gosub TIROIR
Endif
If GREP="C" & !GIMPORT Raz [M:PTH0]PTHNUM : Endif
#----- Affichage de la trace le cas échéant -----#
If !GIMPORT Gosub LECTURE_TRACE : Endif
GOK=SAVGOK                          : # Restitution de GOK
Return


$VERF_ANU
#--------------------------#
# Contrôles de suppression #
#--------------------------#
Local Char    WFCY(GLONFCY)
Local Date    WDATE
If dim(I)     <1  Local Integer  I       : Endif
If dim(WVERIF)<1  Local Libelle  WVERIF  : Endif
Raz GMESSAGE
WFCY  = [M:PTH0]PRHFCY
WDATE = [M:PTH0]RCPDAT
Raz GERR, GMESSAGE
#-- Controle de période
#-- Si site inexistant GERR=1 et GMESSAGE positionné
#-- Si période indéfinie ou traitement interdit à cette date idem
#-- Si période fermée poser la question
#---
# Issue 149726 - 2019-07-31 by SR : no stock period control if only products "not managed in stock"
# STOMGTCOD = :
# 1 : product not managed in stock
# 2 : product  managed in stock
# 3 : product  managed in stock with potency
# if there is at least one "Not manage in stock" product, we must control financial period---> CTLPER
If sigma(0,[M:PTH1]NBLIG-1,[M:PTH1]STOMGTCOD(indcum)<2) #sum STOMGTCOD values only if <2
   Call CTLPER(WFCY,WDATE) From TRTACHCTL1
   If mkstat : End : Endif
Endif
# if there is at least one "Manage in stock" product  : Control stock period status and
# financial status (taking into account ACCIFA parameter) ---> STKCTRIPT
If sigma(0,[M:PTH1]NBLIG-1,[M:PTH1]STOMGTCOD(indcum)>1) #sum STOMGTCOD values only if >1
  Call STKCTRIPT(WDATE,WFCY,"1") From STKLIB
  If GERR=1
    GMESSAGE=mess(21,196,1) : OK=0 : Return
  Elsif GERR=2
    I=1 : Call AVERTIR(GMESSAGE,I) From GESECRAN
    If I=1
      Raz GMESSAGE, GERR, mkstat : OK=0 : Return
    Else
      Raz GMESSAGE, GERR, mkstat
    Endif
  Endif
Endif
# End issue X3-149726
#---
#----- Suppression interdite si présence d'un retour non validé -----#
Call VERIF_RETOUR ([M:PTH0]PTHNUM,0) From SUBPTHB
If GMESSAGE<>""  GERR=1 : OK=0 : Return : Endif
#-------------------------------------------------------------------#
# Vérification si réception est pointée directement par une facture #
#-------------------------------------------------------------------#
Look [PID] PID1(2)=2;[M:PTH0]PTHNUM
[G:PID]currind=1 : [G:PID]currlen=0 : # Réinitialisation clé par défaut
If !fstat
  GERR = 1 : GMESSAGE =mess(118,194,1) : OK=0  :  Return
Endif
#--------------------------------------------------------#
# Vérification si réception passée en facture à recevoir #
#--------------------------------------------------------#
#--- Facture à recevoir comptabilisée pour cette réception ! Voulez-vous continuer ? ---#
If [M:PTH1]PSTFLG>1
  OK=2 : Call AVERTIR (mess(338,194,1),OK) From GESECRAN
  If OK=2  OK=1  Else  OK=0 : Return : Endif
Endif

#------------------------------#
# Vérification sur les détails #
#------------------------------#
# Issue 97484 - 2014-03-10 by SR
OK = 1
Filter [PTD] Where PTHNUM = [F:PTH]PTHNUM
For [PTD]PTD0
  If [F:PTD]RTNQTYSTU<>0 GMESSAGE=mess(111,194,1) : Break : Endif
  If [F:PTD]INVQTYSTU>=[F:PTD]QTYSTU
    #GMESSAGE=mess(112,194,1) : Break
  Endif
  Read [ITF] ITF0=[F:PTD]ITMREF;[F:PTD]PRHFCY : If fstat  Raz [F:ITF] : Endif
  If [F:ITF]CUNFLG=2
    GMESSAGE=[F:PTD]ITMREF-mess(185,199,1)+"\"+mess(184,193,1) : Break
  Endif
  # Issue 97484 - 2014-03-10 by SR
  # Des charges de cette ligne ont-elles déjà été rapprochées
  If [F:PTD]STCNUM <> ""
    Filter [F:STCD]Where VCRTYP = 6 & VCRNUM = [F:PTD]PTHNUM & VCRLIN = [F:PTD]PTDLIN & STCRFLG=2
    Look [F:STCD]STCD1 First
    Filter [F:STCD]
    If !fstat
        # Des charges rapprochées existent pour ce document. Voulez-vous continuer ?
        OK =2 :Call OUINON (mess(470,194,1),OK) From GESECRAN
        If OK=2  OK=1  Else  OK=0 : Break : Endif
    Endif
  Endif
Next
Filter [PTD]
# Issue 97484 - 2014-03-10 by SR
If OK = 0 : Return : Endif

If GMESSAGE<>""  : GERR=1 : OK=0 : Return : Endif
#----- Suppression interdite si des qtés ont été allouées -----#
#----- Ou si des numéros de série ont été sortis
#----- Ou si stock non dispo
#----- Ou si période indisponible
WVERIF=3 : Gosub VERIF_QTEALL From SUBPTH : # Vérification stock dispo et qtés allouées
If GMESSAGE<>""  OK=0 : Return : Endif

# X3-80390 - STWIL - Before we delete the purchase receipt check if this document is in any non-conformances
If func AFNC.ACTIV ("NCS")
    If GNCSHDRFLG = 0
        Local Integer EXISTS
        Local Char NCSMESS(255)
        [L]EXISTS = func NCSDOCHDR_CSTD.NON_CONFORMANCE_EXISTS (1, [F:PTD]PTHNUM, -1, [L]NCSMESS, 1)
        If [L]EXISTS > 0
            Call OUINON([L]NCSMESS,OK) From GESECRAN
            GNCSHDRFLG = 1
            If OK = 1
                OK = 0
                Return
            Endif
        Endif
    Endif
Endif

Gosub OUVERTURE_TRACE
Return

$ANNULE
#---------------------------------------#
# Suppression des textes entête et pied #
#---------------------------------------#
If left$([F:PTH]TEX1,3)="PTH"
  Call SUP_CLOB([F:PTH]TEX1,GBIDI2) From TRTX3TEX
Endif
If left$([F:PTH]TEX2,3)="PTH"
  Call SUP_CLOB([F:PTH]TEX2,GBIDI2) From TRTX3TEX
Endif
#-----
GMODIF = 1
#----- Suppression éléments de facturation avec comptes et sections -----#
Call ENREG_ELEMENTS(6,[M:PTH0]PTHNUM,"PTH2","A") From TRTACHELT1
If GOK<1  Return : Endif
#----- Suppression du tableau des taxes -----#
Call ENREG_TAXES   (6,[M:PTH0]PTHNUM,"PTH2","A") From TRTACHELT1
If GOK<1  Return : Endif
#-----
Gosub ANNULE From TABLEAUX
If GOK <1 : Return : Endif

# X3-80390 - STWIL - If we have deleted the purchase receipt delete this document in any non-conformances
If func AFNC.ACTIV ("NCS") & GOK > 0
    Local Integer ERROR
    [L]ERROR = func NCSDOCHDR_CSTD.DELETE_NON_CONFORMANCE_DOCUMENTS (1, [F:PTD]PTHNUM, -1)
    If [L]ERROR
        GMESSAGE = mess(47,3702,1)
        OK = 0
        GOK = 0
        Return
    Endif
Endif

#----- Mise à jour statistiques entête réception -----#
SIGN=-1 : Call VALSTA("PTH",SIGN) From SUBPS2 : If GOK<1 Return : Endif

Return


$AP_ANNULE
#-------------------------------------------#
# Après annulation complète d'une réception #
#-------------------------------------------#
#Call  DELSTOENTW(-1,-1,"PTH1",1) From STKENT
#----- Affichage de la trace le cas échéant -----#
If !GIMPORT Gosub LECTURE_TRACE : Endif
Return


$FIN_ACTION
#--------------------#
# Après toute action #
#--------------------#
If REPONSE=GSTAANU
  #----- Effacement des écrans stock et lecture trace après une annulation -----#
  If !GIMPORT Gosub LECTURE_TRACE : Endif
  #----- Mise à jour des listes de gauche picking après une annulation -----#
  If !GIMPORT & [M:PTH0]PRHFCY=""  Raz CRITERE : Gosub TIROIR : Endif
Endif
Return


$FERME
#--------------------------------------------------------------#
# Fermeture fichier ligne réception pour éviter un plantage en #
# AVANT_OUVRE lors du changement de transaction par la ToolBar #
#--------------------------------------------------------------#
If dim(OUVFICPOQ)>0
  If OUVFICPOQ=1
    Close Local File [POQ] : Raz OUVFICPOQ
  Endif
Endif
#----- Restitution des variables globales -----#
Gosub REST_GLOB From TRTX3GLOB
#-----
If clalev([M:AD68])  Close Local Mask [AD68] : Endif
If clalev([M:PCEX])  Close Local Mask [PCEX] : Endif
#-----
If GFONC1="GESPTH"
  Raz GORITITCOL, GMENBOUT, GCONSDIA
Endif
Raz GFLTITM
#----- Effacement écran(s) et fichier de travail sous-traitance -----#
# GA 04/2006 avant Gosub EFFAC_PWRKSTT from SUBPTHC
Local  Integer  WOK
Call  EFFACE_PWS("PTH",WOK) From PWSLIB
#----- Effacement des écrans de stocks et GP
Raz [M:ENTW], [M:STW],[M:ALP],[M:SOW]
If clalev([M:ORDK])  Raz [M:ORDK] : Endif
#----- Effacement icone texte -----#
If !GIMPORT  Call RESET_IMAGE(4) From GESECRAN : Endif
#----- Suppression variables globales "noms des currbox" -----#
If dim(GBOXPO2)>0         Kill GBOXPO2         : Endif
If dim(GBOXSD2)>0         Kill GBOXSD2         : Endif
If dim(GPTH_SYMBOL2)>0    Kill GPTH_SYMBOL2    : Endif
# Issue X3-100002 - 2019-10-08 by SR
If dim(GPTH_SYMBOLPOC)>0  Kill GPTH_SYMBOLPOC  : Endif
If dim(GPTH_VERROU)>0     Kill GPTH_VERROU     : Endif
If dim(GPTH_PICK)>0       Kill GPTH_PICK       : Endif
If dim(GRELITPTH)>0       Kill GRELITPTH       : Endif
If dim(GPTH_INDTAX)>0     Kill GPTH_INDTAX     : Endif
If dim(GPTH_RND)>0        Kill GPTH_RND        : Endif
If dim(GPTH_INDBASTAX)>0  Kill GPTH_INDBASTAX  : Endif
# SR 09.11 Demande 75817
If dim(GSTEP3)>0          Kill GSTEP3  : Endif
# Issue 84130 - 2013-03-22 by SR : Landed cost
If dim(GOUVSTC)>0 & WCREOUVSTC = 1  Kill GOUVSTC        : Endif

Gosub FERMETURE_TRACE  : # Fermeture de la trace si nécessaire
Return

$VERIF
Local Shortint RES
# Issue 85961 - 2012-11-22 by SR
Local Char WVAL(GLONCCE)
# Issue 94549 - 2013-09-30 by SR
Local Char  WFCY(GLONFCY)
# Issue X3-157601 - 2019-10-09 by MUARN : default mask had to be defined for check PFICCE
Local Char SAV_DEFMSK(255) : SAV_DEFMSK=dbgstr(1)
Local Integer PLAN # Issue X3-186012 - 2020-04-01 by MUARN : check account
Local Char    WACCOUNT(GLONGAC) # Issue X3-186012 - 2020-04-01 by MUARN : check account

#---------------------------#
# Vérifications en création #
#---------------------------#
Raz GMESSAGE
# Issue 88312 - 2013-02-28 by SR
SAVNOLIGN = nolign
#-----------------------------------------------#
# mise à jour impossible si pas de ligne saisie #
#-----------------------------------------------#
If [M:PTH1]NBLIG = 0
  GERR=1 : GMESSAGE=mess(61,199,1)
  OK = 0 : Return
# Issue 85961 - 2012-11-22 by SR contrôle des axes
Else
  For I=0 To [M:PTH1]NBLIG-1
    # Issue X3-186012 - 2020-04-01 by MUARN : check account
    nolign = I+1
    For PLAN = 1 To 10
      WACCOUNT = evalue("[M:PTH1]LINACC"+num$(PLAN)+"("+num$(I) +")")
      Call CTRL_ACC(WACCOUNT,PLAN,GFINRSP,[M:PTH0]RCPDAT,[M:PTH0]CUR,"[M:PTH1]LINACC") From TRTX3CPT
      If mkstat
        GERR = 1
        GMESSAGE -= mess(18,197,1) - num$(I+1)
        OK = 0
        Break 2
      Endif
    Next
    # End issue X3-186012
    # Issue 88312 - 2013-02-28 by SR
    nolign = I+1
    # Issue 94549 - 2013-09-30 by SR : PE permettant de choisir le site à utiliser
    WFCY = GFINRSP :    GPOINT = "CHGACCFCY" : Gosub ENTREE From EXEFNC
    # Issue 87812 - 2013-02-08 by SR : Utiliser GNBDIE et pas GOPTCANA et vérifier si les axes sons saisissables
    For J = 1 To GNBDIE
      WVAL = evalue("[M:PTH1]CCE"+num$(J)+"("+num$(I) +")")
      Call SAIS_CCE(WVAL,J,"[M:PTH1]LINACC","") From TRTX3CPT
      If !mkstat
        # Issue 94549 - 2013-09-30 by SR : Passer WFCY au lieu de GFINRSP
        Call CTRL_CCE(WVAL,J,"[M:PTH1]LINACC",WFCY,[M:PTH0]RCPDAT) From TRTX3CPT
        If GMESSAGE <> ""
          GERR = 1
          GMESSAGE -= mess(18,197,1) - num$(I+1)
          OK = 0
          Break 2
        Endif
      Endif
      # Issue 95966 - 2014-01-20 by SR
      Raz mkstat
      # Issue 106269 - 2015-02-13 by MUARN : contrôle axes invisibles et duplication
      Call CTLCCE(WVAL,GDIE(J),GFINRSP,[M:PTH0]RCPDAT,nolign-1,
&         "GDIE(1","[M:PTH1]CCE#","GCOA(1","[M:PTH1]LINACC#") From SELCCE
      If mkstat : Raz mkstat : OK=0 : GERR=1 : Break 2 : Endif
    Next
    # Issue 84130 - 2013-03-21 by SR : Landed cost
    If [M:PTH1]STCNUM(I) <> "" & [M:PTH1]WSTCSEQ(I) <> 0
      Raz J
      J = find([M:PTH1]WSTCSEQ(I),[M:STCDW]WSTCSEQ(0..[M:STCDW]NBLIG-1))
      If J<1
        GMESSAGE = mess(457,194,1) - num$(I+1)
        GERR = 1 : OK = 0
        Break
      Endif
    Endif
    # Issue 108538 - 2015-06-05 by SR : Landed Cost
    If (GIMPORT |GWEBSERV) & [M:PTH1]SHIPNUM(nolign-1) <> ""
       If [M:PTH1]WSOLDE(I) = 2 :  [M:PTH1]WSHDSOLDE(I) = 2
       Elsif [M:PTH1]WSHDSOLDE(I) <> 2
        Gosub MAJ_WSHDSOLDE From SUBPTHB
       Endif
    Endif

    # Issue X3-235113 - 2021-02-11 by MUARN : check VAT1 when invisible
    If [M:PTH1]VAT1(I)= "" & [M:PTH1]LINTYP(I)<>2
      GMESSAGE=mess(18,197,1)-num$(I+1)-mess(126,104,1)
      OK=0 : GERR=0 : Break
    Endif

  Next
Endif

# Issue X3-141352 - 2019-06-05 by MUARN : check for invoicing element
If OK <> 0 & [M:PTH2]NBFAC >0
  For I=0 To [M:PTH2]NBFAC-1
    # Issue X3-186012 - 2020-04-01 by MUARN : check account
    nolign = I+1
    For PLAN = 1 To 10
      WACCOUNT = evalue("[M:PTH2]ACC"+num$(PLAN)+"("+num$(I) +")")
      Call CTRL_ACC(WACCOUNT,PLAN,GFINRSP,[M:PTH0]RCPDAT,[M:PTH0]CUR,"[M:PTH2]ACC") From TRTX3CPT
      If mkstat
        GERR = 1
        GMESSAGE -= "-"-mess(523,197,1)-num$([M:PTH2]INVDTA(I))-[M:PTH2]INVDTALIB(I)
        OK = 0
        Break 2
      Endif
    Next
    # End issue X3-186012
    nolign = I+1
    # Issue X3-157601 - 2019-10-09 by MUARN : default mask had to be defined for check PFICCE
    Default Mask [PTH2]
    For J = 1 To GNBDIE
      WVAL = evalue("[M:PTH2]PFICCE"+num$(J)+"("+num$(I) +")")
      Call SAIS_CCE(WVAL,J,"[M:PTH2]ACC","") From TRTX3CPT
      If !mkstat
        Call CTRL_PFICCE(WVAL,J,"[M:PTH2]ACC",GFINRSP,[M:PTH0]RCPDAT) From TRTX3CPT
        If GMESSAGE <> ""
          GERR = 1
          GMESSAGE-="-"-mess(523,197,1)-num$([M:PTH2]INVDTA(I))-[M:PTH2]INVDTALIB(I)
          OK = 0
          Break 2
        Endif
      Endif
      # contrôle axes invisibles et duplication
      Raz mkstat
      # Issue X3-168797 - 2019-11-08 by MUARN : pour le contrôle des enveloppes/budgets si axes invisibles
      # Call CTRL_PFICCE(WVAL,J,"[M:PTH2]ACC",GFINRSP,[M:PTH0]RCPDAT) From TRTX3CPT
      Call CTLCCE(WVAL,GDIE(J),GFINRSP,[M:PTH0]RCPDAT,nolign-1,
&       "GDIE(1","[M:PTH2]PFICCE#","GCOA(1","[M:PTH2]ACC#") From SELCCE
      If mkstat : Raz mkstat : OK=0 : GERR=1 : Break 2 : Endif
    Next

  Next I
Endif

# Issue X3-157601 - 2019-10-09 by MUARN : default mask had to be defined for check PFICCE
Default Mask SAV_DEFMSK

# Issue 88312 - 2013-02-28 by SR
nolign = SAVNOLIGN
If OK = 0 : Return : Endif
#-----
# VPO 07/12/10 69066 verifier valeur Code escompte, Regime de taxe
# VPO 01/03/11 71999 ameliorer message d'erreur
If [M:PTHC]DEP<>""
#--CPO 71937 TABDEPAGIO
mkstat=0
    #Call CONTROLE("TDA","!",[M:PTHC]DEP,"",RES) From CONTOBJ
    #If RES : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","PTHC~DEP")+'"\'+GMESSAGE : Return : Endif
    Call CONTTDA([M:PTHC]DEP,GCURLEG,"PTH9","DEP",[M:PTH0]PRHFCY,"","") From SUBTDA
If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","PTHC~DEP")+'"\'+GMESSAGE : Return : Endif
#--/CPO
Endif
If [M:PTH0]VACBPR<>""
    mkstat=0
    # 71937 : Multilégislation
    #Call CONTADI([M:PTH0]VACBPR,"1","") From SUBADI
    #If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","PTH0~VACBPR")+'"\'+GMESSAGE : Return : Endif
    #Call CONTROLE("ADI","",[M:PTH0]VACBPR,"1",RES) From CONTOBJ
    #If RES : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","PTH0~VACBPR")+'"\'+GMESSAGE : Return : Endif
    Call CONTTVB([M:PTH0]VACBPR,GCURLEG,"PTH0","VACBPR",[M:PTH0]PRHFCY,"","") From SUBTVB
    If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","PTH0~VACBPR")+'"\'+GMESSAGE : Return : Endif
    # 71937 : Multilégislation
Endif

#-----
If dim(I)<0  Local Shortint I : Endif
# Issue X3-38669 - 2017-05-19 by SR : ajouter le cas de l'onglet valorisation invisible
If [F:PTR]PTRTYP<>6 | [F:PTR]PTRNUM<>GPTRNUM
  Read [PTR] PTR0=6;GPTRNUM : If fstat  Raz [F:PTR] : Endif
Endif
If GIMPORT | GVTMOD | [F:PTR]VLTFDRCOD = 3
  #---- Si import : Màj bases taxables et calcul taxes éléments facturation -----#
  If [M:PTH1]CLCFLG=2
    For I=0 To [M:PTH2]NBFAC-1
      Call MAJ_ELEMENT (I,0,-1) From SUBPTHD
      Call MAJ_ELEMENT (I,0,+1) From SUBPTHD
    Next I
    If GPIHCALTAX=2 | (dim([M:PTH2]DISVATFLG)>1 & find(2,[M:PTH2]DISVATFLG(0..[M:PTH2]NBFAC-1)))
      For GPTH_INDTAX=1 To [M:PTH2]NBTAX
        Gosub CAL_TAXE_GLOB From SUBPTHD
      Next GPTH_INDTAX
    Endif
  Endif
  Raz [M:PTH1]CLCFLG
  [M:PTH2]TOTAMTNOT=sum([M:PTH2]INVDTAAMT)+[M:PTH2]TOTLINAMT
  If [M:PTH0]VACTYP<>4
    [M:PTH2]TOTTAXAMT=sum([M:PTH2]AMTTAX)
    [M:PTH2]TOTAMTATI=sum([M:PTH2]INVDTAAMT)+[M:PTH2]TOTLINAMT+sum([M:PTH2]AMTTAX)
  Else
    [M:PTH2]TOTTAXAMT=0
    [M:PTH2]TOTAMTATI=sum([M:PTH2]INVDTAAMT)+[M:PTH2]TOTLINAMT
  Endif
Else
  Gosub TEST_VALID From SUBPTH
Endif
Gosub PTH_VERIF From TWMLIB        # Three way matching GRNA
If GERR=1 : OK=0 : Return : Endif  # Three way matching GRNA
#---------------------------------------------#
# Contrôle de cohérence des quantité entrées  #
# pour article géré en stock
#---------------------------------------------#
Default Mask [PTH1] : Call CTLSTOENT( "PTH1", "QTYSTU", [M:PTH1]NBLIG, OK ) From STKECR
# Issue 113936 - 2016-01-25 by SR
If OK = 0 : Return : Endif

#---------------------------------------------#
# Contrôle de cohérence des quantité entrées  #
# pour ligne de sous-traitance                #
#---------------------------------------------#
If find(10,[M:PTH1]VCRTYPORI(0..[M:PTH1]NBLIG-1))
   Gosub CTL_STT_QTY From SUBPTHC
   # Issue 113936 - 2016-01-25 by SR
   If OK = 0 : Return : Endif
Endif
# Issue 113936 - 2016-01-25 by SR : Déplacé après les contrôles
#Gosub OUVERTURE_TRACE

# Issue X3-84077 - 2018-06-13 by MUARN : contrôle cohérence des quantités de matière à sortir en SST
If find(36,[M:PTH1]VCRTYPORI(0..[M:PTH1]NBLIG-1))
  Gosub CTL_STT_EO_QTY From SUBPTHC
  If OK = 0 : Return : Endif
Endif

# Issue 71069 - 2013-08-23 by SR : PJT
Call PJT_CONTROLE_HEAD_DETAIL("[M:PTH0]PJTH", "[M:PTH1]PJT") From TRTPJT
If GERR <> 0
  OK = 0
  Return
Endif

#85785 * RMA * document amount cannot be negative
If func PORLEGLIB.DIGSIGN([M:PTH0]PRHFCY, "") & ([M:PTH2]TOTAMTATI<0)
  GERR = 1: GMESSAGE = mess(216,191,1) : OK = 0 : Return
Endif
# Issue 113936 - 2016-01-25 by SR : Déplacé après les contrôles
Gosub OUVERTURE_TRACE

Return

######################################################################
############################ Gosub ###################################

#--------------------------------------------------#
# Déverrou de toutes les commandes de la réception #
#--------------------------------------------------#
$DEVERROU_POH
If dim(I)<0        Local Shortint I            : Endif
If dim(SYMBOLE2)<0 Local Char     SYMBOLE2(30) : Endif
For I=0 To [M:PTH1]NBLIG-1
  If [M:PTH1]POHNUM(I)<>""
    SYMBOLE2 = "POH"+[M:PTH1]POHNUM(I)
    Unlock = SYMBOLE2
    # Issue X3-100002 - 2018-08-16 by SR : Si commande ouverte
    If [M:PTH1]POHTYP(I) = 2
      SYMBOLE2 = "POC"+num$([M:PTH1]POPLIN(I))+"\"+[M:PTH1]POHNUM(I)
      Unlock = SYMBOLE2
    Endif
  Endif
  If [M:PTH1]SDHNUM(I)<>""
    SYMBOLE2 = "SDH"+[M:PTH1]SDHNUM(I)
    Unlock = SYMBOLE2
  Endif
  #----- Ctrl des locks en cas de sous-traitance -----#
  # Issue 89758 GA 12/2013 unlock WO or EO
  Case [M:PTH1]VCRTYPORI(I)
     When 10 : Unlock="MFG"+[M:PTH1]VCRNUMORI(I)
     When 36 : Unlock="SCO"+[M:PTH1]VCRNUMORI(I)
  Endcase
Next I
Return


#--------------------------------------------------#
# Appel du point d'entrée CPRCOE                   #
# pour assurer la pérennité avec la version 120    #
#--------------------------------------------------#
$POINT_CPRCOE
GPOINT="CPRCOE" : Gosub ENTREE From EXEFNC
Return

#-----------------------------------------------------#
# Appel du point d'entrée CHXPRIORD depuis le SUBPTHB #
#-----------------------------------------------------#
$POINT_CHXPRIORD
GPOINT="CHXPRIORD" : Gosub ENTREE From EXEFNC
Return

#--------------------------------------------------#
# Appel du point d'entrée CPRCAL depuis le SUBPTHD #
#--------------------------------------------------#
$POINT_CPRCAL
GPOINT="CPRCAL" : Gosub ENTREE From EXEFNC
Return

#-----------------------------------------------------#
# Appel du point d'entrée CLCQTYPTH depuis le SUBPTHB #
#-----------------------------------------------------#
$POINT_CLCQTYPTH
GPOINT="CLCQTYPTH" : Gosub ENTREE From EXEFNC
Return

#-------------------------------------------------------#
# Appel du point d'entrée CHARGLIGPTH depuis le SUBPTHB #
#-------------------------------------------------------#
$POINT_CHARGLIGPTH
GPOINT="CHARGLIGPTH" : Gosub ENTREE From EXEFNC
Return

$POSITION_QTYINV
#----------------------------------#
# MAJ qté facturée de la réception #
#----------------------------------#
If [F:PTD]POHNUM<>""
  If [F:POQ]POHNUM<>[F:PTD]POHNUM |
&    [F:POQ]POPLIN<>[F:PTD]POPLIN |
&    [F:POQ]POQSEQ<>[F:PTD]POQSEQ
    Read [POQ] POQ0=[F:PTD]POHNUM;[F:PTD]POPLIN;[F:PTD]POQSEQ
    If fstat  Raz [F:POQ] : Endif
  Endif
  WQTE1 = [F:POQ]INVQTYPUU - [F:POQ]RCPQTYPUU
  WQTE2 = [F:POQ]INVQTYSTU - [F:POQ]RCPQTYSTU
  #-----------------------------------------------------#
  # Il faut tenir compte des retours en attente d'avoir #
  #  avec réintégration en commande sur la même ligne   #
  #-----------------------------------------------------#
  If WQTE1>0 | WQTE2>0
    For [PTDB] PTD2 Where POHNUM=[F:PTD]POHNUM
&                       & POPLIN=[F:PTD]POPLIN
&                       & POQSEQ=[F:PTD]POQSEQ
&                       & RTNQTYSTU<>0
      For [PND] PND1 Where PTHNUM=[F:PTDB]PTHNUM
&                        & PTDLIN=[F:PTDB]PTDLIN
&                        & ORDFLG=2
&                        & LININVFLG<2
        WQTE1-=[F:PND]QTYPUU
        WQTE2-=[F:PND]QTYSTU
      Next
    Next
  Endif
  #-----
  If WQTE1>[F:PTD]QTYPUU | WQTE2>[F:PTD]QTYSTU
    [F:PTD]INVQTYPUU=[F:PTD]QTYPUU
    [F:PTD]INVQTYSTU=[F:PTD]QTYSTU
  Elsif WQTE1>0 | WQTE2>0
    [F:PTD]INVQTYPUU=WQTE1
    [F:PTD]INVQTYSTU=WQTE2
  Else
    Raz [F:PTD]INVQTYPUU
    Raz [F:PTD]INVQTYSTU
  Endif
Endif

# Issue 95171 - 2014-01-02 by MUARN : modification quantité facturée
[V]GPOINT="CHGINVQTY" : Gosub ENTREE From EXEFNC

#----- Si modif et pas de changement qté facturée, il faut laisser l'indicateur -----#
If GREP<>"M" | [M:PTH1]INVQTYSTU(NOL)<>[F:PTD]INVQTYSTU
  [M:PTH1]INVQTYSTU(NOL)=[F:PTD]INVQTYSTU
  # Issue 91585 - 2013-08-02 by MUARN : ajout : ou si ligne de commande est facturée on solde la ligne de réception
  If [M:PTH1]LININVFLG(NOL)=1 & ( [M:PTH1]INVQTYSTU(NOL)>=[M:PTH1]QTYSTU(NOL) | [F:POQ]LININVFLG=2)
    # Issue 111978 - 2015-10-28 by MUARN : ajout ne pas faire si rien de facturé sur réception
    # Issue 104651 - 2014-12-10 by MUARN : ne pas faire si POHCLE=3
    If GPOHCLE <>3 & [F:PTD]INVQTYPUU <> 0
      [M:PTH1]LININVFLG(NOL)=2 : [F:PTD]LININVFLG=2
    Endif
  Endif
Endif
Return


$REAJUST_ENTETE
#----------------------------------------------------------------#
# MAJ nbre ligne facturée, indicateur réception facturée ... etc #
# -------------------------------------------------------------- #
# [F:PTH]LINNBR    : Nombre de lignes                            #
# [F:PTH]INVLINNBR : Nombre de ligne totalement facturées        #
# [F:PTH]INVLINCTR : Nombre de ligne dont qté facturée <>0       #
# [F:PTH]PSTLINNBR : Nombre de ligne comptabilisée (LINPSTFLG=2) #
#                                                                #
# [F:PTH]INVFLG    : Indicateur réception facturée               #
# [F:PTH]PSTFLG    : Indicateur réception comptabilisée          #
#----------------------------------------------------------------#
GBIDI1=sigma(I=0,[M:PTH1]NBLIG-1,[M:PTH1]LININVFLG(I)=2)  : # Nbre lignes totalement facturées
GBIDI2=sigma(I=0,[M:PTH1]NBLIG-1,[M:PTH1]INVQTYSTU(I)<>0) : # Nbre lignes facturées
#-----
If GBIDI1=[M:PTH1]NBLIG
  I=3 : # Totalement facturée
Elsif GBIDI1>0 | GBIDI2>0
  I=2 : # Partiellement facturée
Else
  I=1 : # Non facturée
Endif
#-----
If [F:PTH]PSTLINNBR=[M:PTH1]NBLIG
  J=2 : # Oui, comptabilisée
Else
  J=1 : # Non
Endif
#-----
Update [PTH] Where PTHNUM=[F:PTD]PTHNUM
&            With  LINNBR=[M:PTH1]NBLIG, INVLINNBR=GBIDI1, INVLINCTR=GBIDI2, INVFLG=I, PSTFLG=J
If fstat  GOK=0 : Call FSTA("PTH") From GLOCK : Return : Endif
#-----
[F:PTH]LINNBR   =[M:PTH1]NBLIG
[F:PTH]INVLINNBR=GBIDI1
[F:PTH]INVLINCTR=GBIDI2
[F:PTH]INVFLG   =I
[F:PTH]PSTFLG   =J
Return


$OUVERTURE_TRACE
#---------------------------------------#
# Ouverture fichier trace si nécessaire #
#---------------------------------------#
If GPURTRACE=0 & !GIMPORT & !GWEBSERV
  Call OUVRE_TRACE(mess(193,197,1)) From LECFIC : GPURTRACE=1
Endif
Return

$LECTURE_TRACE
#----------------------------------------#
# Lecture du fichier trace si nécessaire #
#----------------------------------------#
If GPURTRACE=2 & !GIMPORT & !GWEBSERV
  Call FERME_TRACE From LECFIC
  Call LEC_TRACE   From LECFIC
  GPURTRACE=0
Endif
Return

$LECT_EFFAC_TRACE
#----------------------------------------------------------#
# Lecture et effacement trace si abandon de la transaction #
#----------------------------------------------------------#
If GPURTRACE=2 & !GIMPORT & !GWEBSERV
  Call FERME_TRACE From LECFIC
 #Call SUPP_TRACE  From LECFIC ; # On laisse la possibilité de garder la trace
  Call LEC_TRACE   From LECFIC : # TS le 18/09/2008
  GPURTRACE=0
Endif
Return

$FERMETURE_TRACE
#---------------------------------------#
# Fermeture fichier trace si nécessaire #
#---------------------------------------#
If GPURTRACE<>0 & !GIMPORT & !GWEBSERV
  Call FERME_TRACE From LECFIC : GPURTRACE=0
Endif
Return

$CHARG_ADR_EXPEDITEUR
#-------------------------------------------------------------#
# Traitement du nom et de l'adresse du fournisseur expéditeur #
#-------------------------------------------------------------#
If [M:AD68]ADBFLG<>2
  [F:PTH]BPOADD=[M:AD68]BPAADD
  If GACTSAD=2 : # Stockage systématique de l'adresse !
    #----- Lecture BPARTNER si nécessaire -----#
    If [F:BPR]BPRNUM<>[F:PTH]BPSNUM
      Read [BPR] BPR0=[F:PTH]BPSNUM
      If fstat Raz [F:BPR] : [F:BPR]CUR=GLOCALDEV : [F:BPR]LAN=GLANGUE : Endif
    Endif
    #----- Lecture de l'adresse si nécessaire -----#
    If [F:BPA]BPATYP<>1 | [F:BPA]BPANUM<>[F:PTH]BPSNUM | [F:BPA]BPAADD<>[F:PTH]BPOADD
      Read [BPA] BPA0=1;[F:PTH]BPSNUM;[F:PTH]BPOADD
      If fstat  Raz [F:BPA] : Endif
    Endif
    #-----
    [F:PTH]BPONAM(0)    = [F:BPR]BPRNAM(0)
    [F:PTH]BPONAM(1)    = [F:BPR]BPRNAM(1)
    [F:PTH]BPOADDLIG(0) = [F:BPA]BPAADDLIG(0)
    [F:PTH]BPOADDLIG(1) = [F:BPA]BPAADDLIG(1)
    [F:PTH]BPOADDLIG(2) = [F:BPA]BPAADDLIG(2)
    [F:PTH]BPOCRY       = [F:BPA]CRY
    [F:PTH]BPOCRYNAM    = [F:BPA]CRYNAM
    [F:PTH]BPOSAT       = [F:BPA]SAT
    [F:PTH]BPOPOSCOD    = [F:BPA]POSCOD
    [F:PTH]BPOCTY       = [F:BPA]CTY
  Else
    Raz [F:PTH]BPONAM,[F:PTH]BPOADDLIG,[F:PTH]BPOCRY,[F:PTH]BPOCRYNAM,
&       [F:PTH]BPOSAT,[F:PTH]BPOPOSCOD,[F:PTH]BPOCTY
  Endif
Else
  [F:PTH]BPOADD       = [M:AD68]BPAADD
  [F:PTH]BPONAM(0)    = [M:AD68]BPRNAM(0)
  [F:PTH]BPONAM(1)    = [M:AD68]BPRNAM(1)
  [F:PTH]BPOADDLIG(0) = [M:AD68]BPAADDLIG(0)
  [F:PTH]BPOADDLIG(1) = [M:AD68]BPAADDLIG(1)
  [F:PTH]BPOADDLIG(2) = [M:AD68]BPAADDLIG(2)
  [F:PTH]BPOCRY       = [M:AD68]CRY
  [F:PTH]BPOCRYNAM    = [M:AD68]CRYNAM
  [F:PTH]BPOSAT       = [M:AD68]SAT
  [F:PTH]BPOPOSCOD    = [M:AD68]POSCOD
  [F:PTH]BPOCTY       = [M:AD68]CTY
Endif
Return

#--------------------------------------#
# Chargement des textes entête et pied #
#--------------------------------------#
$CHARG_TEXT_ENTETE
If [M:PTH0]TEX1<>""
  If left$([M:PTH0]TEX1,3)="PTH"
    Call CRE_CLOB([M:PTH0]TEX1,GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Elsif left$([M:PTH0]TEX1,3)<>"BPS"
    Call DUP_CLOB("PTH",[M:PTH0]TEX1,GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Endif
  [F:PTH]TEX1=[M:PTH0]TEX1
Endif
If [M:PTH0]TEX2<>""
  If left$([M:PTH0]TEX2,3)="PTH"
    Call CRE_CLOB([M:PTH0]TEX2,GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Elsif left$([M:PTH0]TEX2,3)<>"BPS"
    Call DUP_CLOB("PTH",[M:PTH0]TEX2,GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Endif
  [F:PTH]TEX2=[M:PTH0]TEX2
Endif
Return

#---------------------------------#
# Chargement du texte de la ligne #
#---------------------------------#
$CHARG_TEXT_LIGNE
If [M:PTH1]LINTEX(nolign-1)<>""
  If left$([M:PTH1]LINTEX(nolign-1),3)="PTD"
    Call CRE_CLOB([M:PTH1]LINTEX(nolign-1),GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Elsif !find(left$([M:PTH1]LINTEX(nolign-1),3),"ITM","ITP")
    Call DUP_CLOB("PTD",[M:PTH1]LINTEX(nolign-1),GOK) From TRTX3TEX
    If GOK<1  Return : Endif
  Endif
  [F:PTD]LINTEX=[M:PTH1]LINTEX(nolign-1)
Endif
Return

#------------------------------------------------------------------------#
# Affichage entêtes colonnes variables (comptes et sections analytiques) #
#------------------------------------------------------------------------#
$AFF_TITCOL
If GSOC_UPDFLG & !GIMPORT & !GVTMOD & (dim([M:PTH1]DISCRGVAL1)>0 | dim([M:PTH1]LINACC1)>0 | dim([M:PTH1]CCE1)>0)
  Local Char BASPAG(10)
  BASPAG="NBLIG" : Gosub TIT_COL From ="W1WE6"+GPTRNUM+"1"
  BASPAG="NBFAC" : Gosub TIT_COL From ="W1WE6"+GPTRNUM+"2"
  #----- Pour forcer l'utilisation des formats évalués si tableau vide -----#
  If [M:PTH1]NBLIG=0
    [M:PTH1]NBLIG=1 : Affzo [PTH1]10 : Effzo [PTH1]10
    [M:PTH1]NBLIG=0 # Issue 80986 - 2012-03-28 by MUARN : erreur zone obligatoire
  Endif
  If [M:PTH2]NBFAC=0
    [M:PTH2]NBFAC=1 : Affzo [PTH2]5 : Effzo [PTH2]5
    [M:PTH2]NBFAC=0 # Issue 80986 - 2012-03-28 by MUARN : erreur zone obligatoire
  Endif
  #-----
Endif
Raz GSOC_UPDFLG

# Issue 84130 - 2013-01-24 by MUARN : landed cost
If GFONCTION = "GESPTH" & !GIMPORT
  Titcol [M:CSTT]NBCST mess(796,197,1) + " (" + GCUR + ")" For TOTDOC
  Titcol [M:CSTT]NBCST mess(797,197,1) + " (" + GLOCALDEV + ")" For TOTSOC
Endif

Return

#########################################
$GRISE
# Accès à un document créé en multi-dépôt avec une transaction mono-dépôt
# --> pas d'application du mono-dépôt
If [F:PTH]WRHE="" & GWRHOBY=2
   GWRHOBY=1
   If [M:PTH0]PRHFCY<>[F:FCY]FCY : Read [FCY]FCY0=[M:PTH0]PRHFCY : Endif
   If [F:FCY]WRHGES=2 : Call MESSAGE(mess(351,184,1)) From GESECRAN : Endif
Endif
Return

#------------------------------------------#
# Actzo ou Grizo des dépôts selon le site  #
#------------------------------------------#
$WRH_ETAT
If GWRHACT<>2 Return Endif
If [M:PTH0]PRHFCY<>[F:FCY]FCY
  Read [FCY]FCY0=[M:PTH0]PRHFCY
Endif
If [F:FCY]WRHGES=2
   If find(GREP,"C","D")
      Actzo [M:PTH0]WRHE
      If GWRHOBY=2
         Diszo [M:PTH1]WRH
      Else
         Actzo [M:PTH1]WRH
      Endif
   Elsif [M:PTH0]WRHE<>""
      Diszo [M:PTH0]WRHE
      Diszo [M:PTH1]WRH
   Else
      Actzo [M:PTH0]WRHE
      Actzo [M:PTH1]WRH
   Endif
Else
  Raz   [M:PTH0]WRHE
  Grizo [M:PTH0]WRHE
  Grizo [M:PTH1]WRH
Endif
Return

#---------------------------------------------------------#
# Point d'entrée CHGALLQTY pour modifier la qté à allouer #
#         appelé depuis le traitement PURMTOLIB           #
# ------------------------------------------------------- #
# Variable utilisable par le point d'entrée               #
#                                                         #
# WQTERES : Quantité à allouer en US                      #
#---------------------------------------------------------#
$POINT_CHGALLQTY
[V]GPOINT="CHGALLQTY" : Gosub ENTREE From EXEFNC
Return

# Issue 119281 - 2017-01-05 by SR : Ne pas recalculer les montants unitaires
#---------------------------------------------------------#
# Appel du point d'entrée NOREAJUST                       #
#---------------------------------------------------------#
# Variables utilisable par le point d'entrée              #
# GPE : Positionner à 0 pour inhiber le rajustement       #
# WZON: Zone courante : UOM/QTYUOM/UOMSTUCOE              #
#---------------------------------------------------------#
$POINT_NOREAJUST
GPOINT="NOREAJUST" : Gosub ENTREE From EXEFNC
Return
