#<AdxTL>@(#)6.0.0.0 $Revision$ Gestion des livraisons vente
#########################################################################
# Gestion des livraisons                                        SUBSDHA #
#-----------------------------------------------------------------------#
# Avril 1998                                                         TS #
#########################################################################
# Issue 110491 - 20151130 by LD : Import livraison de BP avec kits commerciaux
# Issue 122277 - 20170419 by LD : Ship line complete in a non allocated context KO
# Issue X3-53890 - 20180404 by LD : Weight and delivery lead time
# Issue X3-86975 - 20180525 by LD : BESDAT field from STOALL when changing a delivery
# Issue X3-134259 - 20190522 by LD :  Delivery / Management tab / Packing block / Non-modifiable fields
# Issue X3-132694 - 20190813 by LD : Error of non-available stock in subcontracting deliveries
# Issue X3-150122 - 20191017 by LD : Customer Credit Limit check affects the Sub-Contract shipment process
# Issue X3-160406 - 2019-10-14 by SR : Active/Inactive customer control
# 06.317.883 - JC.06102022.CONSULTA  campo Total Crédito

#########################################################################
# SECTION CONTENANT LES ACTIONS SUR L'OBJET                             #
#########################################################################
# FGR 29/11/2012 : X3SUIVI75601 (début) : déplacé dans SUBSDHA1
##########################################################################
#$DEFTRANS
##--CPO 75115 modif TYPLIV le 3="toutes" devient 4 et 3 devient "sous-traitance"
#Local Integer TYPLIV : # Type livraison autorisé 1=normale, 2=prêt, 3=sous-traitance et 4=toutes
#Local Integer WRET   :#--CPO 75115
##Local Integer NBACS
##Local Char    TABACS(10)(100)
#
## On vient par bouton livraison et la création est interdite (on ressort)
#If GCREPARBOU = 2
#   Raz GCREPARBOU
#   Raz OK
#   Return
#Endif
#
## Si on ne vient pas de la gestion des livraisons
#If GFONC1 <> "GESSDH" Raz GFLAG Endif
#
#TYPLIV =4 :#TYPLIV = 3 :#--CPO 75115 Nouveau champ SDHTYP
## Si tunnel, on filtre avec le type de livraison
#If SAVCLE1<>"" & GCREPARBOU = 0 : # Bug 56046 : Si SAVCLE1<>"", on vient d'un vrai tunnel
#   Read [SDH]SDH0=CLE1
#   If !fstat
#     #--CPO 75115 Nouveau champ SDHTYP
#     If [F:SDH]SDHTYP<>""
#       Call LEC_TSD_LEG(GCURLEG,[F:SDH]SDHTYP,WRET) From TRTLECLEG
#       If WRET>0 Raz [F:TSD] : Endif
#     Endif
#     If [F:TSD]SDHCAT>0
#       TYPLIV = [F:TSD]SDHCAT
#     Else
#     #--/CPO
#       TYPLIV = 1
#       If [F:SDH]LND=2
#         TYPLIV = 2
#      Elsif [F:SDH]SCO=2
#        TYPLIV = 3
#      Endif
#     Endif :#--CPO
#   Endif
#   Raz GCREPARBOU
## Si bouton depuis commande, on filtre en fonction du type de commande
#Elsif GFONC1="GESSOH"
#   #--CPO 75115 Nouveau champ SDHTYP
#   If [F:SOH]SDHTYP<>""
#     Call LEC_TSD_LEG(GCURLEG,[F:SOH]SDHTYP,WRET) From TRTLECLEG
#     If WRET>0 Raz [F:TSD] : Endif
#   Endif
#   If [F:TSD]SDHCAT>0
#     TYPLIV = [F:TSD]SDHCAT
#   Else
#   #--/CPO
#     TYPLIV = 1
#     If [F:SOH]SOHCAT = 2
#        TYPLIV = 2
#     Endif
#   Endif :#--CPO
##--CPO 75115 Nouveau champ SDHTYP
##--Si bouton depuis BP, on filtre en fonction de l'origine du BP
#Elsif GFONC1="GESPRH"
#  If [F:PRH]SDHTYP<>""
#     Call LEC_TSD_LEG(GCURLEG,[F:PRH]SDHTYP,WRET) From TRTLECLEG
#     If WRET>0 Raz [F:TSD] : Endif
#  Endif
#  If [F:TSD]SDHCAT>0
#     TYPLIV = [F:TSD]SDHCAT
#  Else
#     Case [F:PRH]ORIPRH
#       When 1 : TYPLIV = 1 :# Commande         => Livraison normale
#       When 2 : TYPLIV = 2 :# Commande de prêt => Livraison de prêt
#       When 3 : TYPLIV = 3 :# Besoin sous-tt   => Livraison pour sous-traitance
#     Endcase
#  Endif
##--/CPO
#Endif
#
## Chargement des codes accés du profil utilisateur qui ont 'éxécution à NON'
##Call CHARGE_ACC(NBACS,TABACS) From SELTRS
#
#Return
#
##########################################################################
#$VARIANTE
## La transaction lu est elle utilisable ?
#If clalev ([F:SLT])=0 Local File SALTRS [SLT] Endif
#Read [SLT]SLT0=4;[F:AWI]TRN
#If fstat
#   OK = 0
##--CPO 75115 Nouveau champ SDHTYP
##Elsif [F:SLT]ENAFLG<>2 | ([F:SLT]DLVTYP=1 & TYPLIV=2) | ([F:SLT]DLVTYP=2 & TYPLIV=1)
#Elsif [F:SLT]ENAFLG<>2 | (TYPLIV<>4 & (([F:SLT]DLVTYP=1 & TYPLIV<>1) | ([F:SLT]DLVTYP=2 & TYPLIV<>2) | ([F:SLT]DLVTYP=3 & TYPLIV<>3)))
#   OK = 0
##Elsif [F:SLT]ACSCOD<>"" & NBACS>0
##   Le code accés de la transaction autorise t-il son éxécution
##   Call VERIF_ACC(NBACS,TABACS,[F:SLT]ACSCOD,OK) From SELTRS
#Endif
#
#Return
#
##########################################################################
#$SETTRANS
#Gosub SETTRANS_DEF
#
#If clalev ([F:SLT])=0 Local File SALTRS [SLT] Endif
#Read [SLT]SLT0=4;GFLAG
#If clalev ([F:DTR])=0 Local File DIETRS [DTR] Endif
#Read [DTR]DTR0="SLT";4;GFLAG;0;0
##FQ 67314
##Il faut sauver la valeur de GDLVTYP car le $OUVRE qui s'execute après le $SETTRANS
##va sauvegarder la nouvelle valeur de GDLVTYP qui dépendra de la transaction choisie
#If dim(SAVEGDLVTYP)<0 : Local Shortint SAVEGDLVTYP : Endif
##Dans $OUVRE on va restaurer la valeur de GDLVTYP d'avant la modification
#SAVEGDLVTYP=GDLVTYP
##fin FQ 67314
#GDLVTYP     = [F:SLT]DLVTYP
#GSLTSTKFLG  = [F:SLT]STKFLG
#GSLTENTCOD  = [F:SLT]ENTCOD
#
#GPKGTYP     = [F:SLT]PKGTYP     # type colisage
#
#
##GSLTCCEDEF  = [F:SLT]CCEDEF
#
#WSLTTRSCOD  = [F:SLT]TRSCOD : Gosub VERIF_TRSCOD From TRTVENSTK
#WSLTTRSFAM  = [F:SLT]TRSFAM : Gosub VERIF_TRSFAM From TRTVENSTK
#
#WSLTDOCFLG  = [F:SLT]DOCFLG
#WSLTDOCNAM  = [F:SLT]DOCNAM
#WSLTNPRFLG  = [F:SLT]NPRFLG
#WSLTNPRNAM  = [F:SLT]NPRNAM
#WSLTSTRNUM  = [F:SLT]STRNUM
#
#WSLTPKGTYP  = [F:SLT]PKGTYP
#WSLTPKTNUM  = [F:SLT]PKTNUM
#
#If  func AFNC.ACTIV("LTA") : GSSTENTCOD  = [F:SLT]SSTENTCOD  : Endif  #LTA.n
#
## Dépôt entête obligatoire ou non (mono-dépôt)
#If GWRHACT=2
#  GWRHOBY = [F:SLT]WRHOBY
#Else
#  GWRHOBY = 1
#Endif
#GSVGWRHOBY = GWRHOBY
#
##MAE, le 28/01/08, evol GRP_SITE
#GGRPFCY = [F:SLT]GFY
#
#Close Local File [SLT], [DTR]
#
#Return
#
##-------------------------------------------------------------
## Afin d'être appelé dans ouvre pour ne pas planter en import
#$SETTRANS_DEF
#
#If dim(GSVGWRHOBY)<=0  : Global Integer  GSVGWRHOBY          : Endif
#
#If dim(GSLTSTKFLG)<=0  : Global Libelle  GSLTSTKFLG          : Endif
#If dim(GSLTENTCOD)<=0  : Local Char      GSLTENTCOD(GLONGAU) : Endif
##If dim(GSLTCCEDEF)<=0  : Local Char      GSLTCCEDEF(GLONCDE) : Endif
#
#If dim(WSLTTRSCOD)<=0  : Local Char      WSLTTRSCOD(GLONADI) : Endif
#If dim(WSLTTRSFAM)<=0  : Local Char      WSLTTRSFAM(GLONADI) : Endif
#
#If dim(WSLTDOCFLG)<=0  : Local Shortint  WSLTDOCFLG          : Endif
#If dim(WSLTNPRFLG)<=0  : Local Shortint  WSLTNPRFLG          : Endif
#If dim(WSLTDOCNAM)<=0  : Local Char      WSLTDOCNAM(GLONARP) : Endif
#If dim(WSLTNPRNAM)<=0  : Local Char      WSLTNPRNAM(GLONARP) : Endif
#If dim(WSLTSTRNUM)<=0  : Local Char      WSLTSTRNUM(GLONTRS) : Endif
#
#If dim(WSLTPKGTYP)<=0  : Local Shortint  WSLTPKGTYP          : Endif
#If dim(WSLTPKTNUM)<=0  : Local Char      WSLTPKTNUM(GLONTRS) : Endif
#
#If dim(GSSTENTCOD)<=0  : Global Integer  GSSTENTCOD          : Endif  #LTA.n
#Return
# FGR 29/11/2012 : X3SUIVI75601 (fin) déplacé dans SUBSDHA1

#########################################################################
#$OUVRE
#
## Rajout d'un raccourci sur bouton 1 : Stock
##Additm 129,2168  Titled mess(191,124,1)  To 280 At 55    : # Alt F9 sur Bouton 1
##Call SHORTCUT(7,1) From STKLIB
#
##FQ 67314
##Dans $OUVRE on va restaurer la valeur de GDLVTYP
##d'avant la modification dans $SETTRANS, le cas échéant
#Local Shortint TMPGDLVTYP
#If dim(SAVEGDLVTYP)>0 & SAVEGDLVTYP<>GDLVTYP
#  TMPGDLVTYP=GDLVTYP : GDLVTYP=SAVEGDLVTYP
#Endif
##fin FQ 67314
#
##-----------------------------------#
## Sauvegarde des variables globales #
##-----------------------------------#
#Gosub SAUV_GLOB From TRTX3GLOB
#
##FQ 67314
##On restaure la valeur définie dans $SETTRANS, le cas échéant
#If dim(SAVEGDLVTYP)>0 & (TMPGDLVTYP<>0)
#  GDLVTYP=TMPGDLVTYP
#Endif
##fin FQ 67314
#
##maxmem = max(maxmem/1024,8192)
#Gosub SETTRANS_DEF From SUBSDHA1  # FGR 29/11/2012 : X3SUIVI75601 obligé de découper le traitement
#
#Global Char     GCPT14(GLONANM) : # Compteur no 14 (livraison définitive : localisation italienne)
#Global Char     GNUM(GLONVCR)  : # No livraison
#Global Char     GPNTITMREF     : # Composé
#Global Integer  GCDTUNL        : # Flag déblocage crédit autorise
#Global Integer  GDACLOK        : # Flag blocage en contrôle
#Global Shortint GPRIMOD        : # Prix/Remises : 1 = Pas de modif / 2 Modif
#Global Char     GFOCITMREF     : # Article gratuit
#Global Char     GFOCUOM        : # Unité article gratuit
#Global Decimal  GFOCQTY        : # Quantité gratuite
#Global Shortint GFOCMOTIF, GFOCFLG
#Global Shortint GSUPCOLIS      : # Pour suppression des colis
#Global Shortint GETATCEE       : # Flag etat appartenant à la CEE
#Global Integer  GGENLIV        : # Livraison générée (cde)  0/1
#Global Shortint GINVTYP        : # 1 = facture / 2 = avoir / 5 = proforma
#Global Char     GTARFLG(1)     : # Flag recalcul des tarifs
#Global Shortint GRELITSDH      : # 1 = Pour éxécuter Gosub RELIT après modif mvt stock
#Global Shortint GRELITSDH2     : # 1 = Pour court-circuité des messages
#Global Integer  GALLORD        : # FLAG réallocation des commandes
#Global Char     GLOCCAT(4)     : # Pour filtrer les catégories d'emplacements
#Global Libelle  GIMPLIVVAL     : # 1=Importation d'une livraison validée        : # TS_Import
#Global Integer  GUNVERROU
#Global Integer  GSDHSUPPLIGDSP : #--CPO 79343 Afin d'afficher un message si suppr ligne et doc ori avec elts fact
#
#Raz GLOCSEL, GRELITSDH, GRELITSDH2
#
## Filtre catégorie emplacement pour le contrôle et la sélection emplacement
#GLOCCAT="12"
#
## SR 09.11 Demande 75817
#Gosub POINT_SEQDLVSPL From TRTX3
#
#Local  Integer  STAT, WSOHCAT
#Local  Decimal  WCDEHT         : # En commande HT
#Local  Decimal  WCDETTC        : # En commande TTC
#Local  Decimal  WLIVTTC        : # En livraison TTC
#Local  Decimal  WSALSTOSTU     : # Gestion des signatures cdes : Qté en cde client
#Local  Decimal  DELTAQTY       : # Delta de la quantité livrée (en + ou -)
#Local  Decimal  DELTAQTYSTU    : # Delta de la quantité livrée US (en + ou -)
#Local  Decimal  ECARTQTY       : # Ecart entre qte cde et qte liv (en + ou -)
#Local  Decimal  WQTYREA        : # Qté réallouée sur la commande
#Local  Char     CODE(3)
#Local  Integer  RETOUR, CDTSTA
#Local  Char     SYMBOLE2(50)
#Local  Integer  WNBGAUCHE, TYP12
#Local  Char     SVGCURRBOX, YSOHNUM(GLONVCR), SVGSOHNUM(GLONVCR)
#Local  Date     YSHIDAT        : # Pour maj date dernière liv. dans les cdes
#Local  Integer  YPACNBR        : # Pour la sauvegarde du nbre de colis
#Local  Integer  WPICK
#Local  Shortint IBOX
#Local  Integer  WRET
#Local  Char     WPRHNUM        : # Pour maj entête bon de préparation
#Local  Integer  WCPE_SOQSTA    : # Bug 52442 : Svg statut solde du composé
#Local  Char     WORINUM(20)    : #MAE, LIV_BP
#Local  Integer  WCOLFLG        : # Bug 682317
#
#If !clalev([F:TPA])  Local File TABPACKAGE [TPA]   Endif   # hcb 74093
#
#If !clalev([F:ACV])  Local File ACTIV      [ACV]   Endif
#If !clalev([F:ACC])  Local File ACCES      [ACC]   Endif
#If !clalev([F:TCA])  Local File TABCOUAFF  [TCA]   Endif
#If !clalev([F:TMD])  Local File TABMODELIV [TMD]   Endif
#
#Gosub OPEN_SFI From TRTX3CPY: #If clalev([F:SFI])=0 : Local File SFOOTINV   [SFI] : Endif
#
#If !clalev([F:BPA])  Local File BPADDRESS  [BPA]   Endif
#If !clalev([F:BPT])  Local File BPCARRIER  [BPT]   Endif
#
#If !clalev([F:SPH])  Local File SPACK      [SPH]   Endif
#If !clalev([F:SPD])  Local File SPACKD     [SPD]   Endif
#If !clalev([F:STA])  Local File STOALL     [STA]   Endif
#If !clalev([F:SDD1]) Local File SDELIVERYD [SDD1]  Endif
#If !clalev([F:SRT])  Local File STKTRS     [SRT]   Endif
#
#If !clalev([F:TRU])  Local File TABALLRUL  [TRU]   Endif
#If !clalev([F:SRU])  Local File TABSTORUL  [SRU]   Endif
#If !clalev([F:SWW])  Local File STOWIPW    [SWW]   Endif
#
#If GMODU(6)=2 & clalev([F:POQ])=0 : Local File PORDERQ [POQ] : Endif
#If GMODU(6)=2 & clalev([F:PTH])=0 : Local File PRECEIPT[PTH] : Endif : #VPO 02/06/09 50951
#
#If !clalev([F:GCM])  Local File GACM       [GCM]   Endif
#
## Ouverture des masques de travail pour les stocks
#If !clalev([M:ALP])  Local Mask ALLPAR     [ALP]   Endif
#If !clalev([M:SOW])  Local Mask STOSORW    [SOW]   Endif
#
## Déclaration masque écran pour les encours
#If !clalev([M:ORDK]) Local Mask ORDK       [ORDK]  Endif
#
## v6 affectations
#Gosub OPEN_MTO From MTOLINKLIB
#
##Global Integer GACTMUL : GACTMUL=1    : # Globale multisociété : 1(non) / 2(oui)
##Read [ACV] CODACT="MUL" : If fstat  Raz [F:ACV] : Endif
##If [F:ACV]FLACT=2 GACTMUL=2 Endif
#
##WNBGAUCHE = GNBGAUCHE
#
##If !GIMPORT & !GWEBSERV & !GSERVEUR : GTRACE = "" : Endif : # 68052
#
## C'est une fonction vente qui travaille sur un site d'expédition
## On surcharge donc le site par défaut du module avec celui d'expédition
## pour que les contrôles d'autorisation des sites soient corrects.
#GFCYDEF(0) = GFCYDEF(7)
#
#If GMODU(7)=2 GLOCSEL = "[F:STC]LOCCAT<>3&[F:STC]LOCCAT<>4" Endif
#Local Char WPARAM(10)
#
## Chargement flag déblocage crédit autorisé
#Call PARAMUTIL("SCDTUNL",WPARAM,"","") From SUBAUS
#GCDTUNL=val(WPARAM)
#If GCDTUNL=0 GCDTUNL=1 Endif
## Chargement flag blocage en contrôle qte,prix,marge
#Call PARAMUTIL("SDACLOK",WPARAM,"","") From SUBAUS
#GDACLOK=val(WPARAM)
#If GDACLOK=0 GDACLOK=1 Endif
#
## Activation/Desactivation des zones prix en fonction des codes acces
#Call PARAMUTIL("SPRIMOD",WPARAM,"","") From SUBAUS
#GPRIMOD=val(WPARAM)
#If GPRIMOD=0 GPRIMOD=1 Endif
#
##------------------------------------------------------------#
##              Chargements liés aux tarifs                   #
##------------------------------------------------------------#
## Contrôle existence de la structure tarif par défaut        #
## Chargement des variables globales pour la recherche tarif  #
## Récupération de la structure des frais/remises             #
## Récupération des types de frais/remises                    #
##              des no éléments facturation                   #
##------------------------------------------------------------#
#GORITITCOL=1
##If GACTMUL=2
#GPLISTC="néant" :# Pour forcer l'affichage des entêtes de colonne si structure=""
##Endif
#
#Call CTLSTRUCT (1,STAT) From TRTPRICE
#If STAT<>0: OK=0: Return :Endif
#Call TARIFCHGT(5)         From TRTPRICE
#Call COLREM("C",1,"")     From TRTPRICE
#Call TYPREM(1,"")  From TRTPRICE
##------------------------------------------------------------#
#
#Raz GSOC_ACTIVE
#GFCY = GFCYDEF (7)
## Ctrl site par défaut par rapport au critère, si aucun site par défaut, charge le 1er site correspondant au critere
#Call GETFCYDEF(GFCY,"[F:FCY]WRHFLG=2") From TRTX3
## Chargement globales référenciels, comptes et sections de la société
#Gosub CHARG_PARAM : If GERR=1 OK=0 : Return Endif
#
## --- Recherche du compteur livraison en fonction de la transaction
##--CPO 75115 remplacement SDHCAT par SCO
##--Plus besoin de le faire ici ! A virer...
##Local Integer WLND    : WLND=GDLVTYP
###Local Integer WSDHCAT : WSDHCAT=1
##Local Integer WSCO    : WSCO=1
##Gosub REC_CPT_LIV From SUBSDHB : If GERR=1 Return Endif
##GCPT14=[F:TCA]CODNUM(13)
##--/CPO
#
## --- Déclaration des fenetres d'adresses ------------- #
## Bug 70949
##Local Mask ADRBPC [ADB2]
##Local Mask ADRBPC [ADB3]
#If clalev([M:ADB2])=0
#    Local Mask ADRBPC [ADB2]                     : # Déclaration de l'écran d'adresse ADB1
#Else
#  If !clalev([M:ADBT])
#    Local Mask ADRBPC [ADBT] : [M:ADBT]=[M:ADB2] : # Sauvegarde de l'adresse ADB2 à cause de la navigation
#  Endif
#Endif
#If clalev([M:ADB3])=0
#    Local Mask ADRBPC [ADB3]                     : # Déclaration de l'écran d'adresse ADB1
#Else
#  If !clalev([M:ADBU])
#    Local Mask ADRBPC [ADBU] : [M:ADBU]=[M:ADB3] : # Sauvegarde de l'adresse ADB2 à cause de la navigation
#  Endif
#Endif
## Bug 70949
#
#Gosub DECLARE From TABLEAUX
#
## --- Ouverture + reservations pour repartition elts facturation a la ligne ----
#Gosub OUV_DSPLIN From TRTVENFACC
#
## -- ACA - Ouverture du tableau de stockage des éléments facture
#Local Char SFIT_OBJ : SFIT_OBJ="SDH"
#Gosub INIT_SFIT From SUBSFIT
#
## Detail local tax data
#Gosub OUVRE_LTA From TRTTAXUSA
#
#Return

#########################################################################
$BOITE
#If GFONC1 <> "GESSDH" GNBGAUCHE = 0 Endif
Return

#########################################################################
$OUVRE_BOITE

# Récupération des noms de currbox des tiroirs
# MAE, BP_LIV Global Char  GBOXSO1(10),GBOXSO2(10),GBOXRE1(10),GBOXSC1(10)
Global Char  GBOXSO1(10),GBOXSO2(10),GBOXRE1(10),GBOXSC1(10), GBOXPH1(10)

# X3-1152 : Non invoiceable deliveries
Global Char  GBOXPJ5(10)
# X3-1152 : Non invoiceable deliveries

GBOXSO1 = "GAU_CHE"+num$(find("SO1",OBJLIS(1..8)))
GBOXSO2 = "GAU_CHE"+num$(find("SO2",OBJLIS(1..8)))
GBOXRE1 = "GAU_CHE"+num$(find("RE1",OBJLIS(1..8)))
GBOXSC1 = "GAU_CHE"+num$(find("SC1",OBJLIS(1..8)))
#MAE, BP_LIV
GBOXPH1 = "GAU_CHE"+num$(find("PH1",OBJLIS(1..8)))
# X3-1152 : Non invoiceable deliveries
GBOXPJ5 = "GAU_CHE"+num$(find("PJ5",OBJLIS(1..8)))
# X3-1152 : Non invoiceable deliveries

Return

#########################################################################
$FILTRE
Default File [SDH]
#--CPO 75115 Nouveau champ SDHTYP et modif SDHCAT -> "Catégorie livraison"
#FILTSUP = "GDLVTYP=4 | GDLVTYP=LND"

# X3-1152 : Non invoiceable deliveries
#FILTSUP = "GDLVTYP=5 | GDLVTYP=SDHCAT"
FILTSUP = "GDLVTYP=4 | (GDLVTYP=SDHCAT & GDLVTYP<4) | (SDHCAT=4 & GDLVTYP=5)"
# X3-1152 : Non invoiceable deliveries

Return

#########################################################################
$DEFLIG
# --- Définition du fichier des lignes
# Critère de lecture             (CRIT)
# Nom et abréviation du fichier  (FICLIG,ABLIG)
# Zone numéro de ligne           (ZONLIG)
Default Mask [SDH1]
# FGR 24/07/2015 : X3SUIVI109796 : Optimisation (début)
#Default File [SDD]
#Default File [LSDD]
If dim(SAVACT) >= 0 and find(SAVACT,"MODIF","CREATION","ANNULE") Then
  Default File [SDD]
Else
  Default File [LSDD]
Endif
# FGR 24/07/2015 : X3SUIVI109796 : Optimisation (fin)

CRIT = 'SDHNUM="'+[M:SDH0]SDHNUM+'"'
FICLIG = "SDELIVERYD" : ABLIG  = "SDD"
ZONLIG = "SDDLIN"
Return

#########################################################################
$SETBOUT
# ------------------------------------------------------------------------------------- #
# Suppression des boutons                                                               #
# ------------------------------------------------------------------------------------- #
#     H : Changement de code                                                            #
#     A : Supprimer  : Si liv validée                                                   #
#     1 : Validation : Si en cours de traitement ou aucune liv                          #
#                      Si liv déjà validée                                              #
#     2 : Facture    : Si on vient des factures                                         #
#                      Si en cours de traitement ou aucune liv                          #
#                      Si liv non validée, ou facturée, ou inter-site intra-société     #
#                      Si liv sous-traitance                                            #
#                      Si liv de prêt et date retour prêt > date du jour                #
#                      Si rien à facturer (tout est retourné)                           #
#     3 : Proforma   : Si on vient d'ailleurs                                           #
#                      Si en cours de traitement ou aucune liv                          #
#                      Si liv facturée, ou inter-site intra-société                     #
#                      Si liv déjà proforma, ou liv prêt ou liv sous-traitance          #
#                      Si rien à facturer (tout est retourné)                           #
#     4 : Colisage   : Si en cours de traitement ou aucune liv                          #
# ------------------------------------------------------------------------------------- #
GUNVERROU=VERROU
Call VIREBOUT(CHAINE,"H") From GOBJET
# Si l'on vient d'ailleurs, suppression des accès aux autres enregistrements
If GFONC1 <> "GESSDH"
   Call VIREBOUT(CHAINE,"RCD<>S09") From GOBJET
Endif
# Bug 39742 : Si mode consultation, il faut désactiver les boutons
If GCONSULT Call VIREBOUT(CHAINE,"123") From GOBJET Endif
# Pas de clé courante ou livraison validée
# Issue X3-69499 - 2018-02-14 by TS
#If !CLECUR | [M]CFMFLG=2
If !CLECUR | [M]CFMFLG=2 | [M]CFMPAR=2
# End issue X3-69499
   Call VIREBOUT(CHAINE,"A") From GOBJET
Endif
# Modif en cours ou pas de clé courante
If GREP<>"" | !CLECUR
   Call VIREBOUT(CHAINE,"1234") From GOBJET
   Goto SETBOUT_SUI
Endif
# Livraison validée ou non
If [M]CFMFLG=2
   Call VIREBOUT(CHAINE,"1") From GOBJET
Else
   Call VIREBOUT(CHAINE,"2") From GOBJET
Endif
# Proforma déjà existante
If [M]PRFNUM<>""
   Call VIREBOUT(CHAINE,"3") From GOBJET
Endif

## On vient des factures ou liv déjà facturée ou inter-site mais pas inter-société
## ou sous-traitance ou prêt dont la date de retour prévue n'est pas atteinte
#If GFONC1="GESSIH" | [M]INVFLG=2 | ([M]BETFCY=2 & [M]BETCPY<=1) |
#&  (dim([M:SDH0]SDHCAT)>0 & [M:SDH0]SDHCAT=2) |
#&  ([M]LND=2 & dim([M]LNDRTNDAT)>0 & [M]LNDRTNDAT>date$)
#   Call VIREBOUT(CHAINE,"23") From GOBJET
#Else
## On vérifie qu'il y a quelquechose à facturer (que tout n'a pas été retourné)
#    Gosub VERI_FAC : If WLIG=0 Call VIREBOUT(CHAINE,"23") From GOBJET Endif
#Endif

# Dde 71811
# Suppression du bouton facture :
# On vient des factures ou liv déjà facturée ou inter-site mais pas inter-société
# ou sous-traitance ou prêt dont la date de retour prévue n'est pas atteinte

# X3-1152 : Non invoiceable deliveries
#If GFONC1="GESSIH" | [M]INVFLG=2 | ([M]BETFCY=2 & [M]BETCPY<=1) |
#&  (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2) |
#&  ([M]LND=2 & dim([M]LNDRTNDAT)>0 & [M]LNDRTNDAT>date$) : # 90293
If GFONC1="GESSIH" | [M]INVFLG=2 | ([M]BETFCY=2 & [M]BETCPY<=1) |
&  (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2) |
&  ([M]LND=2 & dim([M]LNDRTNDAT)>0 & [M]LNDRTNDAT>=date$) | [M]SDHCAT=4 : # 90293
# X3-1152 : Non invoiceable deliveries
   Call VIREBOUT(CHAINE,"2") From GOBJET
Else
# 40127 : Return status management
## On vérifie qu'il y a quelquechose à facturer (que tout n'a pas été retourné)
#    Gosub VERI_FAC : If WLIG=0 Call VIREBOUT(CHAINE,"2") From GOBJET Endif
    # Suppression du bouton facture :
    # Si tout est retourné pour les livraisons de prêt
    #                      pour les livraisons normales et pas de facturation qté retournée (GDLVRTNCNO=1)
    If ([M:SDH1]RTNSTA=3 & ([M]LND=2 | GDLVRTNCNO=1))
        Call VIREBOUT(CHAINE,"2") From GOBJET
    Endif
# 40127
Endif

#85803 RICAR 2014/05/20 - Portuguese legal requirements - BEGIN
If func AFNC.ACTIV("KPO")
  Local Char    LSIVTIP(30) : [L]LSIVTIP=''
  Call PARAM([M]STOFCY,"SIVTYP",[L]LSIVTIP) From ADOVAL
  If func PORLEGLIB.VAL_SIMINV([L]LSIVTIP) = 2
    Call VIREBOUT(CHAINE,"2") From GOBJET
  Endif
Endif
#85803 RICAR 2014/05/20 - Portuguese legal requirements - END

# Suppression du bouton proforma  :
# On vient des factures ou liv déjà facturée
If GFONC1="GESSIH" | [M]INVFLG=2
   Call VIREBOUT(CHAINE,"3") From GOBJET
Else
# 40127 : Return status management
## On vérifie qu'il y a quelquechose à facturer (que tout n'a pas été retousné)
#    Gosub VERI_FAC : If WLIG=0 Call VIREBOUT(CHAINE,"3") From GOBJET Endif
    # Suppression du bouton proforma :
    # Si tout est retourné pour les livraisons pour sous-traitance
    #                      pour les livraisons inter-site
    #                      pour les livraisons de prêt
    #                      pour les livraisons normales et pas de facturation qté retournée (GDLVRTNCNO=1)
    If ([M:SDH1]RTNSTA=3 & ((dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2) |
&                         ([M]BETFCY=2 & [M]BETCPY<=1)          |
&                         ([M]LND=2 | GDLVRTNCNO=1)))
        Call VIREBOUT(CHAINE,"3") From GOBJET
    Endif
# 40127
Endif
# Dde 71811

#--------------------------------------------------------------------------------#
# Activation/Désactivation des menus                                             #
#--------------------------------------------------------------------------------#
# E,F,H,J : Texte          : Actif si liv.en ligne ou création ou duplication    #
#     K,L : Adresse        : Actif si liv.en ligne ou création ou duplication    #
#       M : Info douanières: Actif si liv.en ligne                               #
#       R : Stock lot      : Actif si liv.en ligne et rien en cours              #
#       W : Réceptions     : Actif si liv.en ligne inter-site validée            #
#       0 : Transaction                                                          #
#       N : Traçabilité pièces                                  SYMEU 08/12/2008 #
#       P : Visualisation tournée                                                #
#       O : Sage Sales Tax                                      RBU 26/04/2012   #
#--------------------------------------------------------------------------------#
$SETBOUT_SUI
# Création ou dupplication ou clé courante
If GREP="C" | GREP="D" | CLECUR
   CHMEN += "EFHJKLB"
Endif
# Clé courante
If CLECUR
   #CHMEN += "M"
   CHMEN += "MP"
   # Pas de modif en cours
   If GREP=""
      CHMEN += "R"
      # Livraison validée et inter-site
      If [M]CFMFLG=2 & [M]BETFCY=2
         CHMEN += "5"  # FGR 31/07/2014 : X3SUIVI101684 "W" devient "5"
      Endif
   Endif
Endif
CHMEN += "0"

# Issue X3-64479 - 2019-04-02 by MUARN : add picking criteria
# the delivery is not validated and when the shipment site and the shipment type are fed
If [M:SDH1]CFMFLG =1  & [M:SDH0]SDHTYP <> "" & [M:SDH0]SALFCY <> ""
  CHMEN += "O"
Endif

If !find(GREP,"C","D") and !find("CONSPIV",GNAVIG(1..GPILNAV)) Then CHMEN += "N" Endif # SYMEU 08/12/2008 : branchement traçabilité pièces

# If  func AFNC.ACTIV("LTA") & GLOCUSATAX : CHMEN += "O" : Endif   # 106867.o  #This menu option does not exist for v7 and above

# 78411 Sage Exchange
If CLECUR & GREP="" & func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([M:SDH2]PTE)
  #If the payment method has Sage Exchange turned on - enable the menu
  If !instr(0,CHMEN,"S") : CHMEN += "S" : Endif
Endif

# BRBAN 24-07-2014 SAM 93745 US2
If func AFNC.ACTIV('KPO')>0 & func PORLEGLIB.DIGSIGN([M:SDH0]STOFCY,'')=1
  If [M:SDH1]CFMFLG = 2 & GREP = "" & [M:SDH0]SDHNUM <> "" & func PORLEGLIB.DOCCTR(2,[M:SDH0]BPCORD,[F:SDH]SDHTYP,[F:SDH]STOFCY)=1 #[F:BPC]BPCNUM
    Read [F:PTDKD]DKD0 = "SAFT-PT";[M:SDH0]SDHTYP;[M:SDH0]SDHNUM
    # BRBAN 24-03-2015 #106027
    If !fstat & [F:PTDKD]ATDTCOD = "" & func PORLEGLIB1.CTRL_COMDAT([F:SDH]STOFCY,[F:SDH]DPEDAT,[F:SDH]ETD)=1
      CHMEN+='U'
    Endif
  Endif
Endif

#RBA 110811/US2
If func AFNC.ACTIV("EDIX3") <> 0
  If func CNSEDKSTD.GET_EDI_CATACT([M]SDHNUM, 5) <> 0
    CHMEN += "V"#Historic
  Endif
  If func CNSEDNSTD.GET_SDELIVERYNO_FLAG([M]SDHNUM) = [V]CST_ATRUE
    CHMEN += "Z"#Historic #X3-7673 EDI_improvements_CRUD_method_for_receipt RBA
  Endif
#CJ 110811/US9
  GFCY=[M:SDH0]SALFCY : GBIDC2="I" : Gosub AUTORIS_OPT From CONTX3
  If GBIDI2 and [M:SDH1]CFMFLG = 2
 #RBA 112138/US2
    CHMEN += "Y" #Run EDI Issue
  Else
    Call VIREBOUT(CHMEN,"Y") From GOBJET # No EDI Issue
  Endif
#/CJ 110811/US9
Endif
#/RBA 122138/US2
Gosub SET_BOUT_SPE From GSAISIE

Return

#########################################################################
# Avant éxécution des boutons et menus
#########################################################################
$AVANTBOUT
Local Char    WFONC1(30)
Local Integer I, WLIG, WCOD, WMODULE
Local Char    WTYP(4), WTEX(12), WANCTEX(12)
#fq66051-gbn
Local  Integer  SAV_GCONSULT : SAV_GCONSULT=GCONSULT
Local  Integer  SAV_GCONSDIA : SAV_GCONSDIA=GCONSDIA

# Visu des textes si aucun droit de modif :commande soldée (Bug 39742)
#If !ACTMOD GCONSDIA=1 Endif : # Bug 42904
If (find(GREP,"C","D") & !ACTCRE) | (GREP="M" & !ACTMOD) GCONSDIA=2 Endif : # Bug 42904

  # FGR 19/05/2015 : X3SUIVI106158 (début)
  If find(BOUT, "E", "F", "H", "J", "K", "L") Then
    If [M:SDH0]BPCORD = "" Then
      GERR = 1
      GMESSAGE = mess(427,192,1)
      Return
    Endif
  Endif
  # FGR 19/05/2015 : X3SUIVI106158 (fin)

GERR=0
WMODULE = 5
Case BOUT
 When "E" : If [M]SDHNUM = "" & GREP <> "C" & GREP <> "D"
               GERR=1 : GMESSAGE="" : Return
            Endif
 When "F" : If [M]SDHNUM = "" & GREP <> "C" & GREP <> "D"
               GERR=1 : GMESSAGE="" : Return
            Endif
 When "H" : If [M]SDHNUM = "" & GREP <> "C" & GREP <> "D"
               GERR=1 : GMESSAGE="" : Return
            Endif
 When "J" : If [M]SDHNUM = "" & GREP <> "C" & GREP <> "D"
               GERR=1 : GMESSAGE="" : Return
            Endif
 When "K" : [M]CNTNAM=[M:ADB2]CNTNAM            : # Adresse livraison
 When "L" : [M]CNTNAM=[M:ADB3]CNTNAM            : # Adresse facture
#            If dim([M:ADB3]EECNUM)>0
#               [M]EECNUM=[M:ADB3]EECNUM
#            Endif
 When "1" : GFCY=[M]STOFCY                      : # Autorisation validation
            GBIDC2="V": Gosub AUTORIS_OPT From CONTX3
            If !GBIDI2
               GERR=1 : GMESSAGE=mess(2,104,1) : Return
            Endif
            Gosub AVTBOUT_VAL
 When "2" : GFCY=[M]SALFCY                       # Autorisation facturation
            GCREPARBOU = 2
            GBIDC2="F": Gosub AUTORIS_OPT From CONTX3
            If !GBIDI2
               GERR=1 : GMESSAGE=mess(2,104,1) : Return
            Endif
            GINVTYP = 1                         : # Facturation
            WFONC1  = GFONC1
            GFONC1  = "GESSDH"
            If [M]INVFLG = 1
              Lock="SDH"
            Endif
#            Gosub VERI_FAC
            Gosub AVTBOUT_FAC
            If GERR <> 1
               Gosub VERROU_SDH
               If GERR <> 1
                  GCREPARBOU = 1
               Endif
            Endif
 When "3" : GFCY=[M]SALFCY                      : # Autorisation proforma
            GCREPARBOU = 2
            GBIDC2="P": Gosub AUTORIS_OPT From CONTX3
            If !GBIDI2
               GERR=1 : GMESSAGE=mess(2,104,1) : Return
            Endif
            GINVTYP = 5                         : # Proforma
            WFONC1  = GFONC1
            GFONC1  = "GESSDH"
#           Gosub VERI_FAC
            Gosub AVTBOUT_FAC
            If GERR <> 1
               Gosub VERROU_SDH
               If GERR <> 1
                  GCREPARBOU = 1
               Endif
            Endif
 When "4" : GFCY=[M]STOFCY                      : # Autorisation colisage
            GBIDC2="G": Gosub AUTORIS_OPT From CONTX3
            If !GBIDI2
               GERR=1 : GMESSAGE=mess(2,104,1) : Return
            Endif
            Gosub PCK_SDH
 # - 101090 - Bill of lading menu, setting creation mode
 When "B" : If [M:SDH2]BOLNUM=""
              If [F:SDH]BPTNUM="" | [F:SDH]MDL=""
                GMESSAGE = mess(3,2086,1)   # The carrier and/or delivery method are blank
                GERR=1
              Else
                GCREFONC=1
              Endif
            Endif
Endcase

#Fq66051-Gbn
Case BOUT
 When "E", "F", "H", "J", "K", "L", "M" : If GREP="" & (!ACTMOD | !VERROU)  GCONSULT=1 : GCONSDIA=2  : Endif
 When Default
Endcase

Return

###########################################################################################
#    Avant execution du bouton validation                                                 #
###########################################################################################
$AVTBOUT_VAL
Local Integer WI, CDTSTA
Raz GERR, GMESSAGE

#--- Issue X3-138438
Gosub REFRESH_SDELIVERY
#--- End issue X3-138438

# 78411 Sage Exchange - skip credit processing
If func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([M:SDH2]PTE) : Return : Endif

If [F:BPC]BPCNUM<>[M:SDH0]BPCORD
    Read [F:BPC] BPC0=[M:SDH0]BPCORD
    If fstat Raz [F:BPC] : Endif
Endif
If [F:BPC]BPCNUM<>[F:BPC]BPCRSK
    Read [F:BPC] BPC0=[F:BPC]BPCRSK
    If fstat Raz [F:BPC] : Endif
Endif

# Bug 63136
If [F:BPC]OSTCTL <> 3
    Call SDCDTSTA ("",[M:SDH0]BPCORD,[M:SDH0]CHGTYP,0,"",[M:SDH1]SHIDAT,0,1,CDTSTA,GBIDD1,GBIDD1) From TRTVENCDT
Endif

# Bug 63136
# Issue X3-150122 - 20191017 by LD
# For subcontract deliveries, if credit is exceeded, there is only a warning message
#If [F:BPC]OSTCTL = 3 | (CDTSTA=3 & GCDTUNL=1)  : # Bug 63136
If [F:BPC]OSTCTL = 3 | ([M:SDH0]SDHCAT<>3 & CDTSTA=3 & GCDTUNL=1)  : # Bug 63136
# Issue X3-150122 - 20191017 by LD
    # Client bloqué ou dépassement d'encours et déclocage crédit non autorisé
    # --> On bloque la validation sf si déblocage autorisé sur ttes les cdes
    Raz CDTSTA
    If [M:SDH0]SOHNUM<>""
        # Une seule commande pour cette livraison
        If [F:SOH]SOHNUM<>[M:SDH0]SOHNUM
            Read [SOH] SOH0=[M:SDH0]SOHNUM
            If fstat Raz [F:SOH] : Endif
        Endif
        # Déblocage non autorisé sur cette commande
        If [F:SOH]UNL<>2 CDTSTA=2 : Endif
    #VPO 21/04/09 50583
    #Elsif sum([M:SDH1]XSOHNUM)<>""
    #CPO 68235
    #Elsif max([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1))<>""
    Elsif ([M:SDH1]NBLIG-1>=0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) <> "")
        # Plusieurs commandes pour cette livraison
        For WI=0 To [M:SDH1]NBLIG
            If [M:SDH1]XSOHNUM(WI)<>""
                If [F:SOH]SOHNUM<>[M]XSOHNUM(WI)
                    Read [SOH] SOH0=[M]XSOHNUM(WI)
                    If fstat Raz [F:SOH] : Endif
                Endif
                # Déblocage non autorisé sur cette commande : On arrête la recherche et on bloque la validation
                If [F:SOH]UNL<>2 CDTSTA=2 : Break : Endif
            Endif
        Next
    Else
        # Livraison directe : On bloque
        CDTSTA=2
    Endif
    # Bug 63136
    If CDTSTA=2

        # X3-1152 : Non invoiceable deliveries
        If [M:SDH0]SDHCAT<>4
        # X3-1152 : Non invoiceable deliveries
           GERR=1
           If [F:BPC]OSTCTL=3
             GMESSAGE = mess(151,199,1)        #- Mess  Client bloqué
           Else
             GMESSAGE = mess(29,192,1)         #- Mess  En-cours autorisé atteint
             #-- 81855
             If dim(GVENFLG02)>=0 & (GVENFLG02=2 or GVENFLG02=3 )
               GMESSAGE += WMESS9
             Endif
           Endif
           Return
        # X3-1152 : Non invoiceable deliveries
        Endif
        # X3-1152 : Non invoiceable deliveries

#        GERR=1 : If [F:BPC]OSTCTL=3 GMESSAGE = mess(151,199,1) Else GMESSAGE = mess(29,192,1) Endif
#        Return
    Endif
    # Bug 63136
# Bug 63136
Elsif CDTSTA=3
    # Client en dépassement d'encours et déclocage crédit autorisé
    # --> Message d'avertissement
    # FGR 10/03/2015 : X3SUIVI23273 (début)
    #GMESSAGE = mess(29,192,1)
    #Call AVERTIR(GMESSAGE,OK) From GESECRAN
    #Raz GMESSAGE
    #If OK=1 OK=0 : GERR=1 : Return : Endif

    # X3-1152 : Non invoiceable deliveries
    If [M:SDH0]SDHCAT<>4
    # X3-1152 : Non invoiceable deliveries
      If !([M:SDH1]BETFCY = 2 & [M:SDH1]BETCPY <> 2) or GCTLBETFCY = 2 Then
        GMESSAGE = mess(29,192,1)
        If dim(GVENFLG02)>=0 & (GVENFLG02=2 or GVENFLG02=3 )
          GMESSAGE +=  WMESS9
        Endif
        Call AVERTIR(GMESSAGE,OK) From GESECRAN
        Raz GMESSAGE
        If OK=1 OK=0 : GERR=1 : Return : Endif
      Endif
    # X3-1152 : Non invoiceable deliveries
    Endif
    # X3-1152 : Non invoiceable deliveries

    # FGR 10/03/2015 : X3SUIVI23273 (fin)
#    # Contrôle état crédit de la commande
#    If [F:SOH]SOHNUM<>[M:SDH0]SOHNUM
#        Read [SOH] SOH0=[M:SDH0]SOHNUM
#        If fstat Raz [F:SOH] : Endif
#    Endif
#
#    Call SDCDTSTA ("",[M:SDH0]BPCORD,[M:SDH0]CHGTYP,0,"",[M:SDH1]SHIDAT,[F:SOH]UNL,1,CDTSTA,GBIDD1,GBIDD1)
#&        From TRTVENCDT
#    Case CDTSTA
#     When 3 : # Dépassement d'en cours
#              GMESSAGE = mess(29,192,1)
#              # Si déblocage crédit non autorisé on bloque
#              If GCDTUNL=1
#                 GERR=1 : Return
#              Else
#                 Call AVERTIR(GMESSAGE,OK) From GESECRAN
#                 Raz GMESSAGE
#                 If OK=1 OK=0 : GERR=1 : Return : Endif
#              Endif
#     When Default
#    Endcase
Endif

Return

# 40127 : Return status management
# No more used
##########################################################################
## Dans SETBOUT Vérif s'il y a quelque chose à facturer                  #
## Si rien à facturer, on grize le bouton facture                        #
##########################################################################
#$VERI_FAC
#Local Integer WLIG : Raz WLIG
#For I=0 To [M:SDH1]NBLIG-1
##   If (GDLVRTNCNO=1 & [M:SDH1]QTY(I)>[M:SDH1]RTNQTY(I)) | GDLVRTNCNO=2
##      WLIG += 1
##   Endif
#   # Dde 71811 : Si livraisons pour sous-traitance, on facture ce qui n'est pas retourné (Lors d'une proforma)
#   # Dde 71811 : Si livraisons inter-site, on facture ce qui n'est pas retourné (Lors d'une proforma)
#   # Bug 46937
#   # Si livraisons de prêt, on facture ce qui n'est pas retourné
#   # Si livraisons normales et pas de facturation qté retournée (GDLVRTNCNO=1), on ne facture que ce qui n'est pas retourné
#   # Si livraisons normales et facturation qté retournée (GDLVRTNCNO=2), on facture tout
#   If (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2 & [M:SDH1]QTY(I)>[M:SDH1]RTNQTY(I)) |
#&     ([M]BETFCY=2 & [M]BETCPY<=1 & [M:SDH1]QTY(I)>[M:SDH1]RTNQTY(I)) |
#&     ([M:SDH1]QTY(I)>[M:SDH1]RTNQTY(I) & ([M]LND=2 | GDLVRTNCNO=1))  |
#&     ([M]LND=1 & GDLVRTNCNO=2 & (dim([M:SDH0]SCO)<0 | [M:SDH0]SCO=1) & ([M]BETFCY=1 | [M]BETCPY=2))
#      WLIG += 1
#   Endif
#Next I
#Return
# 40127

#########################################################################
# Dans AVANTBOUT, il y a forcement quelque chose à facturer             #
# Si liv de prêt : on demande confirmation                              #
#########################################################################
$AVTBOUT_FAC
Local Integer OK : OK=1

#--- Issue X3-138438
Gosub REFRESH_SDELIVERY
#--- End issue X3-138438

# V6.2 : Certification
# Si ctrl date documents : La livraison doit avoir une date <= datesyst (La facture est générée avec datesyst)
#If GINVTYP<>5 & GCTLDATORI=2 & [F:SDH]DLVDAT>datesyst : # Dde 73382
If GINVTYP<>5 & GCTLDATORI=2 & [F:SDH]SHIDAT>datesyst  : # Dde 73382
  #GMESSAGE=mess(3,413,1)-[F:SDH]SDHNUM-format$(GFMD,[F:SDH]DLVDAT)-":\"-mess(347,192,1)-":"-format$(GFMD,datesyst) : # Dde 73382
  GMESSAGE=mess(3,413,1)-[F:SDH]SDHNUM-format$(GFMDAT,[F:SDH]SHIDAT)-":\"-mess(347,192,1)-":"-format$(GFMDAT,datesyst)  : # Dde 73382 :#--CPO 83985 GFMDAT au lieu de GFMD
  GERR=1 : Return
Endif
# Bug 69179 : Ctrl reporté dans GEN_FAC (nécessite [M]GTE)
## V6.2 : Certification
## Contrôle date pour certification NF
#Call CTLDAT_CNF(5,[M]SALFCY,[0/0/0],datesyst,"","") From CONTX3
#If mkstat  GERR=1 : GMESSAGE-=":"-format$(GFMD,datesyst) : Return Endif
# Bug 69179

# Bug 68147
# Si 1 facture/commande soldée vérifier que la cde est bien soldée et qu'il n'y a qu'une seule liv
If [M:SDH0]IME=2
    If [M:SDH0]SOHNUM<>""
        Read [SOH] SOH0=[M:SDH0]SOHNUM
        If fstat Raz [F:SOH] : Endif
        If [F:SOH]ORDSTA=1
            # Cde non soldée
            GMESSAGE=mess(98,197,1)-":"-[F:SOH]SOHNUM-":"-mess(186,192,1)+"\"+mess(188,192,1)
            OK=1 : Call AVERTIR(GMESSAGE, OK) From GESECRAN
            Raz GMESSAGE
            If OK=1 OK=0 : GERR=1 : Return : Endif
        Else
            Filter [SDD1] Where SOHNUM=[F:SOH]SOHNUM & SDHNUM<>[M:SDH0]SDHNUM
            Read [SDD1]SDD1 First
            If !fstat
                # Il y a d'autres livraisons
                GMESSAGE=mess(98,197,1)-":"-[F:SOH]SOHNUM-":"-mess(105,191,1)+"\"+mess(104,191,1)
                OK=1 : Call AVERTIR(GMESSAGE, OK) From GESECRAN
                Raz GMESSAGE
                If OK=1 OK=0 : GERR=1 : Filter [SDD1] : Return : Endif
            Endif
            Filter [SDD1]
        Endif
    Endif
Endif
# Bug 68147

#X3-121987 - we don't care if this order is on hold. Something was delivered so
#            we need to invoice it
# order holds
#For I=0 To [M:SDH1]NBLIG-1
#  Read [SOH]SOH0=[M:SDH1]XSOHNUM(I)
#  If !fstat & func MANHLDLIB.BLK_ALLOC([F:SOH]HLDSTA,[F:SOH]HLDCOD)
#   If BOUT="2": GMESSAGE = mess(16,492,1)-[M:SDH1]VCRNUMORI(I)
#    Else       : GMESSAGE = mess(17,492,1)-[M:SDH1]VCRNUMORI(I)
#   Endif
#    GERR=1 : OK = 0 : Break
#  Endif
#Next
#X3-121987

If GINVTYP<>5 & [M:SDH0]LND=2     : # Dde 71811
   GMESSAGE=mess(39,191,1)        : # Liv de prêt, voulez vous la facturer ?
   Call AVERTIR(GMESSAGE, OK) From GESECRAN
   Raz GMESSAGE
   If OK=1 OK=0 : GERR=1 : Return : Endif
Endif
Return

#########################################################################
# Bouton "Colisage"
#########################################################################
$PCK_SDH
Local Char VALBOUT(250) , PARBOUT(250)(1..20)

PARBOUT(1) = "4"
PARBOUT(2) = WSLTPKTNUM
FLGEXE     = 1
If !clalev([F:ACT1]) : Local File ACTION [ACT1] : Endif                                   # hcb 72959

# 1=Colisage déclaratif / 2=Post-Colisage
Case WSLTPKGTYP
 When 1 : GACTION = "SAIPKD"
          Read [F:ACT1]ACTION=GACTION                                                      # hcb 72959
          If fstat
             Raz [F:ACT1]
          Endif
          Call SAISIE_CHAR(VALBOUT,PARBOUT,"FPKD","FUNPKD",[F:ACT1]SPETRT) From GSAISIE    # hcb 72959
 When 2 : GACTION = "SAIPKP"
          Read [F:ACT1]ACTION=GACTION                                                      # hcb 72959
          If fstat
             Raz [F:ACT1]
          Endif
          Call SAISIE_CHAR(VALBOUT,PARBOUT,"FPKP","FUNPKP",[F:ACT1]SPETRT) From GSAISIE    # hcb 72959
Endcase

Return

#--- Issue X3-138438
$REFRESH_SDELIVERY
Local File SDELIVERY [SDHT]
Read [SDHT]SDH0=[M:SDH0]SDHNUM
If [F:SDHT]updTick <> [F:SDH]updTick
  Gosub RELIT From GOBJSUB
Endif
Close Local File [SDHT]
Return
#--- End issue X3-138438

#########################################################################
# Après éxécution des boutons                                           #
#########################################################################
$EXEBOUT

Case REP
 When "1" :                                  # Validation
            If GOK = 1 Then
              # FGR 06/12/2012 : X3SUIVI84457 : l'action DIVVALLIV peut être en erreur.
              #                                 Dans ce cas, il ne faut pas exécuter EXEBOUT ici
              If GMODU(12)=2
                Call PRINTFLYER(2,[M:SDH0]SDHNUM,[M:SDH0]SDHNUM,RETOUR) From TRTMACRULE
              Endif
              # Issue X3-38617 - 2017-05-15 by CPO : [122488] Lock management
              #--handling the lock here is very tricky
              #--Issue 122488 occurs after the fix for 117940; but concerns a newly created delivery and validation in the same process
              #--it happens when creating shipment from a sales order throught "Delivery" button and because of VERROU=0, exiting the delivery leaves the lock on
              #--but, fixing the 122488 requires also to handle the 117940 issue (user having 2 sessions and posting the delivery with a definitve counter => can be invoiced twice)
              #--whereas the 117940 concerns validation of a delivery with a final counter and 2 user sessions
              #--etc.
              #VERROU  = 0 ##--LCC Bug 117940: Delivery invoice duplication.
              #            ## The delivery stayed as unlocked and it was possible to invoice it from a second session.
              If ( GSDHENDNBR = 2 or func PORLEGLIB.DIGSIGN("", GSOCIETE)=1) and VERROU=1 and SYMBOLE<>"" and
&              (right$(SYMBOLE,len(left$(SYMBOLE,3))+1)<>[M:SDH0]SDHNUM or CLECUR1<>[M:SDH0]SDHNUM) and
&               right$(SYMBOLE,len(left$(SYMBOLE,3))+1) =CLECUR1
                #--first, we unlock the former Symbole set on the delivery number before validation
                Gosub DEVERROU From GOBJET
                #--second, we lock the actual delivery definitive number (given by the validation process and according to the delivery type set up)
                #--the new lock will be set by the gosub RELIT from GOBJSUB here below
              Endif
              # End issue X3-38617
              CLECUR1 = [M:SDH0]SDHNUM      : # 84457
              Gosub RELIT From GOBJSUB
            Else
              # FGR 19/03/2014 : X3SUIVI86629 : il faut relire si c'est en erreur parce que les classes [M] ne sont peut-être plus bonnes
              Gosub RELIT From GOBJSUB
            Endif
 When "2" : GFONC1 = WFONC1                : # Facturation
            If clalev ([F:TSD])=0 Local File TABSDHTYP [TSD] Endif :#--CPO 75115 - 203 Nouveau champ SDHTYP
            Gosub RELIT From GOBJSUB
 When "3" : GFONC1 = WFONC1                : # Proforma
            If clalev ([F:TSD])=0 Local File TABSDHTYP [TSD] Endif :#--CPO 75115 - 203 Nouveau champ SDHTYP
            Gosub RELIT From GOBJSUB
 When "4" : Gosub RELIT From GOBJSUB       : # Colisage
 When Default
Endcase
Return

##########################################################################
# Après éxécution des menus
##########################################################################
$STATUT
Local Integer WSOHCAT  : # Origine sélection     (1=cdes, 4=cdes ouv)
#fq6051-gbn
GCONSULT=SAV_GCONSULT
GCONSDIA=SAV_GCONSDIA

Case BOUT
 When "E" : If mkstat=4 & GREP=""                    : # Texte entete BP
#                GREP="M" : REP="M"
#                Gosub SETBOUT From GOBJSUB
                 Gosub ENTRE_MODIF From GOBJSUB
            Endif
            If [M]PRPTEX1 <> "" & !GIMPORT
               Call SET_IMAGE (4) From GESECRAN
            Elsif !GIMPORT
               Call RESET_IMAGE (4) From GESECRAN
            Endif
 When "F" : If mkstat=4 & GREP=""                    : # Texte pied BP
#                GREP="M" : REP="M"
#                Gosub SETBOUT From GOBJSUB
                 Gosub ENTRE_MODIF From GOBJSUB
            Endif
            If [M]PRPTEX2 <> "" & !GIMPORT
               Call SET_IMAGE (4) From GESECRAN
            Elsif !GIMPORT
               Call RESET_IMAGE (4) From GESECRAN
            Endif
 When "H" : If mkstat=4 & GREP=""                    : # Texte entete BL
#                GREP="M" : REP="M"
#                Gosub SETBOUT From GOBJSUB
                 Gosub ENTRE_MODIF From GOBJSUB
            Endif
            If [M]SDHTEX1 <> "" & !GIMPORT
               Call SET_IMAGE (4) From GESECRAN
            Elsif !GIMPORT
               Call RESET_IMAGE (4) From GESECRAN
            Endif
 When "J" : If mkstat=4 & GREP=""                    : # Texte pied BL
#                GREP="M" : REP="M"
#                Gosub SETBOUT From GOBJSUB
                 Gosub ENTRE_MODIF From GOBJSUB
            Endif
            If [M]SDHTEX2 <> "" & !GIMPORT
               Call SET_IMAGE (4) From GESECRAN
            Elsif !GIMPORT
               Call RESET_IMAGE (4) From GESECRAN
            Endif
 When "K" : If [M:ADB2]ADBFLG = 2 | [M]CNTNAM <> [M:ADB2]CNTNAM
               # Dde 77155 : Dégriser le bouton enregistrer si utilisation système de taxes américaines
               #If GREP <> "C" & GREP <> "M" & GREP <> "D"
               # 79705 : V7 : SAT in SPRICLINK
               # Dégriser le bouton enregistrer si la recherche tarif a été executée
               #If GLOCUSATAX
               # If GLOCUSATAX | (!find(GREP,"C","M","D") & sum([M]UPDFLG)<>0)   # 106867.o
               If (func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2) | (!find(GREP,"C","M","D") & sum([M]UPDFLG)<>0)   # 106867.n
                  Gosub ENTRE_MODIF From GOBJSUB
               Elsif GREP <> "C" & GREP <> "M" & GREP <> "D"
                  Gosub MAJADRESSE From SUBSDHB      : # Adresse client livré
               Endif
               If [M:ADB2]BPRNAM(0) <> ""
                  [M:SDH0]BPDNAM = [M:ADB2]BPRNAM(0)
                  Affzo [M:SDH0]BPDNAM
               Endif
            Endif
 When "L" : If [M:ADB3]ADBFLG = 2 | [M]CNTNAM <> [M:ADB3]CNTNAM
#&              (dim([M:ADB3]EECNUM)>0 & [M]EECNUM <> [M:ADB3]EECNUM)
               # Dde 77155 : Dégriser le bouton enregistrer si utilisation système de taxes américaines
               #If GREP <> "C" & GREP <> "M" & GREP <> "D"
               # If GLOCUSATAX   # 106867.o
               If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
                  Gosub ENTRE_MODIF From GOBJSUB
               Elsif GREP <> "C" & GREP <> "M" & GREP <> "D"
                  Gosub MAJADRESSE From SUBSDHB      : # Adresse client facture
               Endif
               If [M:ADB3]BPRNAM(0) <> ""
                  [M:SDH0]BPINAM = [M:ADB3]BPRNAM(0)
                  Affzo [M:SDH0]BPINAM
               Endif
            Endif
 When "M" :                                          : # Informations CEE
#            If mkstat=4 & GREP="" GREP="M" : REP="M" Endif : # Pour forcer le bouton 'enregistrer'
            If mkstat=4 & GREP="" Gosub ENTRE_MODIF From GOBJSUB Endif : # Pour forcer le bouton 'enregistrer'
 When "U"
   # BRBAN 25-07-2014 SAM 93745 US2 - Update ATDTCOD
   If func AFNC.ACTIV('KPO')>0 & func PORLEGLIB.DIGSIGN([F:SDH]STOFCY, '')=1
     Read [F:PTDKD]DKD0='SAFT-PT';[F:SDH]SDHTYP;[F:SDH]SDHNUM
     If !fstat & [F:PTDKD]ATDTCOD <> ''
      [M:SDH3]ATDTCOD = [F:PTDKD]ATDTCOD
      Affzo [M:SDH3]ATDTCOD
      Diszo [M:SDH3]ARVDAT,DPEDAT,ETD,ETA,LICPLATE,TRLLICPLATE
      Diszo [M:SDH3]GLBDOCDAT,GLBDOCNUM,GLBDOCTYP,ATDTCOD,MANDOC,GLBDOC
     Endif
   Endif

  # Issue X3-64479 - 2019-04-04 by MUARN : picking criteria
 When "O"  : Gosub APRESBOUT_CRIT From SUBSDHC

Endcase
Return
###########################################################################################
# 79705 : V7 : SAT in SPRICLINK
#######################################################################
# Après exécution d'une action et avant l'exécution de l'action suite #
#######################################################################
$AVANT_SUITE
Case BOUT
  When "K","L" :  # After execution Adresse and before execution recalculate prices
    # Not trigger recalculate prices if globale not informed
    If (dim(GADDACTMOD)<0 | GADDACTMOD<>"1") OK=0 Endif
Endcase
Return
# 79705 : V7 : SAT in SPRICLINK
###########################################################################################

#########################################################################
$AFFMASK

Local Integer I, J, OK, WRETOUR

# Pas de saisie no livraison si on vient des commandes ou des préparations
If find(GFONC1,"GESSOH","GESPRH") Diszo [SDH0]SDHNUM Endif

If GCREPARBOU = 1
   If GFONC1="GESSOH"
      #GFCY = [M:SOH0]SALFCY : Supprimé içi car fait dans GEN_LIV
      # Récupération des paramètres vente du site / de la société
      #Call GLOBVAR(GFCY) From WWGLOBVEN
      # Alimentation site fin.(GFINRSP), soc.(GSOCIETE), dev.soc.(GLOCALDEV)
      # Chargement globales référenciels, comptes et sections de la société
      #Gosub CHARG_PARAM

      Gosub GEN_LIV From SUBSDHB

      Raz GCREPARBOU
      CLE1 = [F:SDH]SDHNUM

   Elsif GFONC1="GESPRH"
      #GFCY = [M:PRH0]STOFCY : Supprimé içi car fait dans GEN_LIV_PRH
      # Récupération des paramètres vente du site / de la société
      #Call GLOBVAR(GFCY) From WWGLOBVEN
      # Alimentation site fin.(GFINRSP), soc.(GSOCIETE), dev.soc.(GLOCALDEV)
      # Chargement globales référenciels, comptes et sections de la société
      #Gosub CHARG_PARAM
      Gosub GEN_LIV_PRH From SUBSDHB
      Raz GCREPARBOU
      CLE1 = [F:SDH]SDHNUM
   Endif

   # Affichage des observations clients
   If GOK > 0
      # ACA - 51717
      #If [F:BPC]BPCNUM<>[F:SDH]BPCORD
      #   Read [BPC]BPC0=[F:SDH]BPCORD
      #Endif
      #If len(vireblc([F:BPC]BPCREM,2)) GMESSAGE=[F:BPC]BPCREM : GERR=2 Endif
   Else
      # Suppression des sorties stockées dans écran de travail STOSORW
      Call DELSTOSORW(-1,0,"SDH1",[M:SDH0]STOFCY,WRETOUR) From STKSOR
      Raz GOK
   Endif

Endif
Return

#########################################################################
$APRES_MODIF

# On vient de modifier une ligne de livraison validé
If GRELITSDH = 1
   Raz GRELITSDH
   Gosub RELIT From GOBJSUB
   Return
Endif

# Issue X3-64479 - 2019-04-17 by MUARN : ajout PJT
If find(COUZON,"STOFCY","BPCORD","BPCLOC","BPAADD","BPCINV","SALFCY",
&       "LND","CUR","PRITYP","PTE","VACBPR","DEP","SCO","SDHTYP","PJT") :#--CPO 75115 - 203 Nouveau champ SDHTYP
   If COUZON="BPAADD" [M:SDH0]BPAADD=CZ Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   ##VPO 05/05/09 51742 pb listes gauches et CZ (modif FILGAUCHE et APRES_MODIF)
   If COUZON="STOFCY" [M:SDH0]STOFCY=CZ   Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="SCO"    [M:SDH0]SCO=val(CZ) Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="LND"    [M:SDH0]LND=val(CZ) Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="BPCLOC" [M]BPCLOC=CZ        Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="BPCORD" [M:SDH0]BPCORD=CZ   Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="BPCINV" [M:SDH0]BPCINV=CZ   Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="SALFCY" [M:SDH0]SALFCY=CZ   Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="PTE"    [M]PTE=CZ           Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="CUR"    [M]CUR=CZ           Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="PRITYP" [M]PRITYP=val(CZ)   Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="VACBPR" [M]VACBPR=CZ        Endif : # Particularité sur ce chps pour que FILGAUCHE fonctionne
   If COUZON="SDHTYP" [M:SDH0]SDHTYP=CZ   Endif :#--CPO 75115 - 203 Nouveau champ SDHTYP
   If COUZON="PJT"    [M:SDH2]PJT=CZ      Endif
   Gosub TIROIR From SUBSDHC
Endif

Return

#########################################################################
$RAZCRE
#--- Bug 69231
WCOLFLG=0

# Remise à zéro de l'écran de travail STOSORW
Call RAZSTOSORW From STKSOR

#VPO 02/06/09 50951
Raz [M:SDH0]PTHNUM

#MAE, LIV_BP, raz cde origine
Raz WORINUM

#------------------------------------------------------------------------#
# Chargement site stock par défaut                                       #
# Chargement globales référenciels, comptes et sections de la société    #
# Chargement site vente par défaut                                       #
# Récupération des paramètres vente du site / de la société              #
# Réalimentation du cours devise dossier/devise cde                      #
# -----------------------------------------------------------------------#
GFCY=GFCYDEF(7)
# Ctrl site par défaut par rapport au critère, si aucun site par défaut, charge le 1er site correspondant au critere
Call GETFCYDEF(GFCY,"[F:FCY]WRHFLG=2") From TRTX3
[M]STOFCY = GFCY
Gosub CHARG_PARAM  : If GERR=1 OK=0 : Return Endif
GFCY=GFCYDEF(5)
# Ctrl site par défaut par rapport au critère, si aucun site par défaut, charge le 1er site correspondant au critere
Call GETFCYDEF(GFCY,"[F:FCY]SALFLG=2 & [F:FCY]LEGCPY=GSOCIETE") From TRTX3
Call GLOBVAR(GFCY,"VEN") From TRTX3
[M]SALFCY = GFCY
# Init.devise pr init.format saisie colonnes remise pr pouvoir ensuite afficher le tableau des lignes
[M:SDH1]CUR=GLOCALDEV
# Récupération des paramètres stock(livraison) du site / de la société
Call GLOBSTOFCY([M]STOFCY) From TRTVENGLOB
#----------------------------------------------------#
# Chargement libellés et formats colonnes tarif      #
#----------------------------------------------------#
#If GACTMUL=2
# Alimentation concernant les colonnes frais/remises en fonction de la structure tarif de la société
Call ALICOLREM (1,4,GFLAG,"SDH1",[M:SDH1]CUR,1,[M:SDH0]PLISTC) From TRTPRICE
#Else
#    # Alimentation du format des colonnes frais/remise
#    Call ALIFORREM (4, GFLAG, "SDH1", 0, [M:SDH1]CUR) From TRTPRICE
#Endif
# -----------------------------------------------------------------------#
# Affichage entêtes colonnes variables (comptes et sections analytiques) #
# -----------------------------------------------------------------------#
Gosub AFF_TITCOL

If [M]SALFCY<>""
   Read [FCY]FCY0=[M]SALFCY
   If [F:FCY]LEGCPY <> GSOCIETE Raz [M]SALFCY Endif
Endif

[M:SDH0]LND = 1

# 40127 : Return status management
Raz [M:SDH1]RTNSTA
# 40127

If dim ([M:SDH0]SCO) > 0 [M:SDH0]SCO = 1 Endif
If GMODU(7)=2 GLOCSEL = "[F:STC]LOCCAT<>3&[F:STC]LOCCAT<>4" Endif

If GDLVTYP = 2 [M:SDH0]LND = 2 Endif

# Compteur : livraison prêt ou livraison
If [M:SDH0]LND = 2
   [M:SDH0]TRSTYP=17
Else
   [M:SDH0]TRSTYP=4
Endif

#--CPO 75115 - 203 Nouveau champ SDHTYP
## Alimentation du type de livraison avec le premier existant
Local Char WSDHTYP(GLONTSD)
Local Integer WSDHCAT,WLND,WSCO : Raz WSDHCAT,WLND,WSCO

Gosub SDHTYP From TRTVENLIV
If WSDHTYP<>""
  [M:SDH0]SDHTYP=WSDHTYP : [M:SDH0]SDHCAT=WSDHCAT
  If dim([M:SDH0]SCO)>0  : [M:SDH0]SCO   =WSCO    : Endif
  [M:SDH0]LND   =WLND
Endif

# Issue X3-218177 - 2021-03-16 by MUARN : check parameters GSDHTYPXXX
Local Char WPARAM(GLONADP)
If find(GDLVTYP,1,4)
  Call PARAML([M]STOFCY,"SDHTYPNOR",WPARAM) From ADOVAL
Elsif GDLVTYP = 2
  Call PARAML([M]STOFCY,"SDHTYPLND",WPARAM) From ADOVAL
Elsif GDLVTYP=3
  Call PARAML([M]STOFCY,"SDHTYPNINV",WPARAM) From ADOVAL
Elsif GDLVTYP=5
  Call PARAML([M]STOFCY,"SDHTYPSCO",WPARAM) From ADOVAL
Endif
If WPARAM <> ""
  Call CONTTSD(WPARAM,GCURLEG,"SDH0","SDHTYP",[M:SDH0]STOFCY,"",GDLVTYP,GSOCIETE) From SUBTSD
  If !mkstat
    [M:SDH0]SDHTYP=WPARAM
  Else
    Raz GMESSAGE, mkstat
  Endif
Endif
If [M:SDH0]SDHTYP <> ""
  [M:SDH0]SDHCAT=[F:TSD]SDHCAT
  Case [F:TSD]SDHCAT
    When 1       : WSCO=1 : WLND=1 :# Livraison normale
    When 2       : WSCO=1 : WLND=2 :# Livraison de prêt
    When 3       : WSCO=2 : WLND=1 :# Livraison pour sous-traitance
    When Default : WSCO=1 : WLND=1 :# Au cas où..
  Endcase
  If dim([M:SDH0]SCO)>0  : [M:SDH0]SCO = WSCO    : Endif
  [M:SDH0]LND = WLND
Endif
# End issue X3-218177

GMANCOU = 1
#--/CPO
#--CPO 75115 remplacement SDHCAT par SCO
#--Recherche du compteur livraison
Gosub REC_CPT_LIV From SUBSDHB : If GERR=1 Return Endif

#If dim([M:SDH0]EECNAT)>0
#   [M:SDH0]EECNAT = "011"
#   If GDEBGBR=1 [M:SDH0]EECNAT="10" Endif
#   [M:SDH0]EECSCH = "21"
#Endif

[M:SDH1]SHIDAT = date$
[M]PACFLG=1 : [M]PRNNDE=1 : [M]CFMFLG=1 : [M]INVFLG=1
# Issue X3-69499 - 2018-02-14 by TS
[M:SDH1]CFMPAR=1

# Alimentation code mouvement, pièce auto, section par défaut stock
[M:SDH0]TRSCOD = WSLTTRSCOD
[M:SDH0]ENTCOD = GSLTENTCOD
#[M:SDH0]CCEDEF = GSLTCCEDEF
# Alimentation famille mouvement
[M:SDH3]TRSFAM = WSLTTRSFAM

# -- gestion des textes
Call RAZ_CLOB From ACLOB
GCONSDIA=0

Raz [M:SDH0]PRPTEX1, [M:SDH0]PRPTEX2
Raz [M:SDH0]SDHTEX1, [M:SDH0]SDHTEX2

If !GIMPORT Call RESET_IMAGE (4) From GESECRAN Endif

#-- X3Suivi 75115 Libellé Catégorie --#
[M:SDH0]WSDHCAT = mess(8,105,1) - ':' - mess([M:SDH0]SDHCAT,490,1)

Affzo [M:SDH0]1-99
Affzo [M:SDH1]1-99
Affzo [M:SDH2]1-99
Affzo [M:SDH3]TRSFAM

If dim([M:SDH1]WRHE)>0
   Call WRHINIT([M:SDH1]WRHE,[M:SDH0]STOFCY,6) From STKWRH
Endif
# Gestion de l'état des zones
Gosub ETAT_ZONE

# Effacement des masques adresses
Raz [M:ADB2], [M:ADB3]

Raz YSOHNUM

# Remplissage des boites de picking
Gosub REMPBOX From SUBSDHC

#------------------------------------------------------------#
# Renseignement des unités de répartition                    #
#------------------------------------------------------------#
[M:SDH0]DSPWEU = GSALDSPWEU
[M:SDH0]DSPVOU = GSALDSPVOU

# Actzo ou Grizo des dépôts selon le site
Gosub WRH_ETAT

# -- ACA - Ouverture du tableau de stockage des éléments facture
Local Char SFIT_OBJ : SFIT_OBJ="SDH"
Gosub INIT_SFIT From SUBSFIT
Call NEW_SFIT ("M","SDH2","","","",[0/0/0]) From SUBSFIT

Gosub SHOW_HIDE_ENTCOD From TRTADRLIB #LTA.n

# X3-64479 : Be able to create non invoiceable deliveries from project tasks / X3-135305 (LD 07/23/19)
Raz [M:SCRW]
# X3-64479 : Be able to create non invoiceable deliveries from project tasks / X3-135305 (LD 07/23/19)

Return

#########################################################################
$RAZDUP
Gosub RAZDUP From SUBSDHA1
#Gbn-89409-091213-Déplacement dans SUBSDHA1 car SUBSDHA trop gros.
#Local Integer NOL
#
## Remise à zéro de l'écran de travail STOSORW
#Call RAZSTOSORW From STKSOR
#
##VPO 02/06/09 50951
#Raz [M:SDH0]PTHNUM
#
##MAE, LIV_BP, raz cde origine
#Raz WORINUM
#
#Call RAZ_CLOB From ACLOB
#GCONSDIA=0
#
#If left$([M:SDH0]PRPTEX1,3)="SDH"
#   Call DUP_CLOB("SDH",[M:SDH0]PRPTEX1,WRET) From TRTX3TEX
#   If WRET<1 Raz [M:SDH0]PRPTEX1 Endif
#Endif
#If left$([M:SDH0]PRPTEX2,3)="SDH"
#   Call DUP_CLOB("SDH",[M:SDH0]PRPTEX2,WRET) From TRTX3TEX
#   If WRET<1 Raz [M:SDH0]PRPTEX2 Endif
#Endif
#If left$([M:SDH0]SDHTEX1,3)="SDH"
#   Call DUP_CLOB("SDH",[M:SDH0]SDHTEX1,WRET) From TRTX3TEX
#   If WRET<1 Raz [M:SDH0]SDHTEX1 Endif
#Endif
#If left$([M:SDH0]SDHTEX2,3)="SDH"
#   Call DUP_CLOB("SDH",[M:SDH0]SDHTEX2,WRET) From TRTX3TEX
#   If WRET<1 Raz [M:SDH0]SDHTEX2 Endif
#Endif
#
#If [M:SDH0]LND = 2                                 : # Livraison de prêt
#   [M:SDH0]TRSTYP=17
#Elsif (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)         : # Livraison sous-traitance
#   [M:SDH0]TRSTYP=20
#Elsif [M]BETFCY=2 & [M]BETCPY=1                    : # Livraison intra-société
#   [M:SDH0]TRSTYP=4
#Else
#   [M:SDH0]TRSTYP=4                                : # Livraison normale
#Endif
#
## Recherche du compteur livraison
##--CPO 75115 remplacement SDHCAT par SCO
##Local Integer WLND    : WLND=[M:SDH0]LND
###Local Integer WSDHCAT : WSDHCAT=1 :
##Local Integer WSCO    : WSCO=1
##If dim([M:SDH0]SCO)>0  WSCO=[M:SDH0]SCO Endif
#Gosub REC_CPT_LIV From SUBSDHB : If GERR=1 Return Endif
#
#Raz [M]SDHNUM, [M:SDH0]SOHNUM, [M]PACNBR, [M]PRFNUM, [M]SIHNUM
## ACA (2009-11-23) Bug 59974 : Inter-site : effacer le flag Réceptionné
#Raz [M:SDH1]RCPFLG
#
## Alimentation code mouvement, pièce auto, section par défaut stock
#[M:SDH0]TRSCOD = WSLTTRSCOD
#[M:SDH0]ENTCOD = GSLTENTCOD
##[M:SDH0]CCEDEF = GSLTCCEDEF
## Alimentation famille mouvement
#[M:SDH3]TRSFAM = WSLTTRSFAM
#
#[M]SHIDAT=date$
#Call CALC_DLVDAT([M:SDH1]SHIDAT,[M:SDH1]DAYLTI,[M:SDH0]BPAADD,[M:SDH0]BPCORD,
#&                0,0,[M:SDH1]DLVDAT) From TRTVENDAT
#
#[M]PACFLG=1 : [M]PRNNDE=1 : [M]CFMFLG=1 : [M]INVFLG=1
#For NOL=0 To [M]NBLIG-1
#   Raz [M:SDH1]UPDFLG(NOL)
#   Raz [M:SDH1]CREFLG(NOL)
#   Raz [M:SDH1]RTNQTY(NOL)
#   Raz [M:SDH1]XSOHNUM(NOL)
#   Raz [M:SDH1]SOPLIN(NOL)
#   Raz [M:SDH1]SOQSEQ(NOL)
#   Raz [M:SDH1]YDLVQTY(NOL)
##   Raz [M:SDH1]YALLQTY(NOL)
#
#   If left$([M:SDH1]PRPTEX(NOL),3)="SDD"
#       Call DUP_CLOB("SDD",[M:SDH1]PRPTEX(NOL),WRET) From TRTX3TEX
#       If WRET<1 Raz [M:SDH1]PRPTEX(NOL) Endif
#   Endif
#   If left$([M:SDH1]SDDTEX(NOL),3)="SDD"
#       Call DUP_CLOB("SDD",[M:SDH1]SDDTEX(NOL),WRET) From TRTX3TEX
#       If WRET<1 Raz [M:SDH1]SDDTEX(NOL) Endif
#   Endif
#
#   If dim([M:SDH1]LOT)>0     Raz [M:SDH1]LOT(NOL)     Endif
#   If dim([M:SDH1]SLO)>0     Raz [M:SDH1]SLO(NOL)     Endif
#   If dim([M:SDH1]LOC)>0     Raz [M:SDH1]LOC(NOL)     Endif
#   If dim([M:SDH1]SERNUM)>0  Raz [M:SDH1]SERNUM(NOL)  Endif
#   If dim([M:SDH1]SERNUMF)>0 Raz [M:SDH1]SERNUMF(NOL) Endif
#   If dim([M:SDH1]PALNUM)>0  Raz [M:SDH1]PALNUM(NOL)  Endif
#   If dim([M:SDH1]CTRNUM)>0  Raz [M:SDH1]CTRNUM(NOL)  Endif
#   Raz [M:SDH1]PRHNUM(NOL)
#   Raz [M:SDH1]PRELIN(NOL)
#   Raz [M:SDH1]STA(NOL)
#   Raz [M:SDH1]MVTDES(NOL)
#
#   Raz GOUVSOR
#   Call LECFICSOR([M:SDH1]ITMREF(NOL),[M:SDH0]STOFCY,[M:SDH0]TRSTYP,
#&                 [M:SDH0]TRSCOD,0) From STKECR
#   # La ligne de livraison est-elle complète du point de vue stock
#   If [M]STOMGTCOD(NOL)<>1
#      # Si stock à sortir non encore déterminé, init emplacement par défaut
#      If dim([M:SDH1]LOC)>0 & [M:SDH1]WSTOSEQ(NOL)=0
#         Call STKINIEMPS([M:SDH1]LOC(NOL)) From STKLOC
#      Endif
#      # Alimentation de [M:ALP]
#      Gosub ALI_ALP From SUBSDH
#      # Détermination du stock à sortir (automatisme, saisie)
#      Call OUVSOR("SDH1",NOL,[M:SDH1]NBLIG,[M:SDH1]WSTOSEQ(NOL),GSLTSTKFLG,WRET)
#&                 From STKSOR
#      If WRET=1 Endif
#   Endif
#Next NOL
#
#Affzo [M:SDH0]1-99
#Affzo [M:SDH1]1-99
#Affzo [M:SDH2]1-99
#Affzo [M:SDH3]1-99
#
## Gestion de l'état des zones
#Gosub ETAT_ZONE
#
## Actzo ou Grizo des dépôts selon le site
#Gosub WRH_ETAT
#
#Raz YSOHNUM
#
##------------------------------------------------------------#
## Renseignement des unités de répartition                    #
##------------------------------------------------------------#
#[M:SDH0]DSPWEU = GSALDSPWEU
#[M:SDH0]DSPVOU = GSALDSPVOU
#
#Raz GSDHSUPPLIGDSP :#--CPO 79343
#
#Call NTSDUP([M:SDH0]BPCORD,"BPCNUM") From TRTNTSCTL   # customer notes

Return

#########################################################################
$VERIF_CRE
Local Char    SVMESSAGE(250)

If OK=0 Return Endif : # Bug 49634 : Si positionné par le spécifique, inutile de continuer
Gosub VERIF

If OK=0 Return Endif

#--- Bug 69786
# Contrôle que le Bon Préparation entier est importé
If GIMPORT
   Local Char    WPRHNUM(GLONVCR)(10)
   Local Integer K, OK, WNBPRE
   Local Decimal WQTYSTU
   OK=1
   K=0
   For I=0 To [M:SDH1]NBLIG-1
      If [M:SDH1]PRHNUM(I)<>"" & !find([M:SDH1]PRHNUM(I),WPRHNUM(0..9))
         WPRHNUM(K)=[M:SDH1]PRHNUM(I)
         K+=1
         If K>9 Break Endif
      Endif
   Next I
   # Vérification que les BP stockés dans WPRHNUM(K) sont bien
   # paramétrés en totalité dans l'import
   For K=0 To 9
      If WPRHNUM(K)="" Break Endif
      Raz WQTYSTU, WNBPRE
      For [PRE] Where PRHNUM=WPRHNUM(K)
         WQTYSTU += [F:PRE]QTYSTU
         WNBPRE  += 1
      Next
# Issue 110491
#      If WQTYSTU<>sigma(I=0,[M:SDH1]NBLIG-1,[M:SDH1]QTYSTU(I)*([M:SDH1]PRHNUM(I)=WPRHNUM(K)))
#&      | WNBPRE<>sigma(I=0,[M:SDH1]NBLIG-1,1*([M:SDH1]PRHNUM(I)=WPRHNUM(K)))
#         OK=0 : Break
#      Endif
      If WNBPRE<>sigma(I=0,[M:SDH1]NBLIG-1,1*([M:SDH1]PRHNUM(I)=WPRHNUM(K)))
         # Toutes les lignes du bon de préparation doivent être importées
         OK=0 : GMESSAGE=mess(1,181,1)-mess(662,197,1)-WPRHNUM(K)-":"-mess(861,197,1) : Break
      Endif
      If WQTYSTU<>sigma(I=0,[M:SDH1]NBLIG-1,[M:SDH1]QTYSTU(I)*([M:SDH1]PRHNUM(I)=WPRHNUM(K)))
         # Les quantités livrées doivent être égales aux quantités préparées
         OK=0 : GMESSAGE=mess(1,181,1)-mess(662,197,1)-WPRHNUM(K)-":"-mess(862,197,1) : Break
      Endif
# End issue 110491
   Next K
   If OK=0 Return Endif
Endif

# Recherche tarif transporteur
If GFRENUM <> 0
   Gosub RECH_TARIF_TRSP
Endif
Return

#########################################################################
$INICRE
Local Integer I, SPSTAT
Local Decimal COURS

If dim([F:SDH]CPY)>0 : [F:SDH]CPY=GSOCIETE : Endif

# 40127 : Return status management
#[F:SDH]RTNSTA=1
# 40127

Local Char GCPT_SAUV (GLONANM) : GCPT_SAUV=GCPT

# --- Si loc. italienne et import liv. validee --> compteur livraison definitive
If GSDHENDNBR=2 & GIMPORT & [F:SDH]CFMFLG=2
   GCPT=GCPT14
Endif

# Raz des variables utilisées pour la maj des mvts clients et de l'encde client
Raz WCDEHT, WCDETTC, WLIVTTC

  If !GIMPORT Then   # FGR 09/03/2015 : X3SUIVI106842 : Ne pas faire en import. C'est fait dans IMPSDHS dans Gosub REC_CPT_LIV From TRTVENLIV. Sinon on perd un numéro à chaque fois
    If GMANCOU<>2 | (GMANCOU=2 & vireblc([M:SDH0]SDHNUM,2)="")
      If GLOCARGNUM
        # ----------------------------------------------------------- #
        #                 Localisation argentine                      #
        # Numérotation spécifique pour l'argentine                    #
        # Appel du sous-prog NUMEROARG From SUBANMARG à la place      #
        #       du sous-prog NUMERO From SUBANM standard              #
        # Recherche du numéro                                         #
        # Récupération du numéro CAI et de la date de validité CAI    #
        # ----------------------------------------------------------- #
        Local Char    WA_CAI
        Local Date    WA_DATVLYCAI
        Call NUMEROARG(GCPT,[F]STOFCY,GARGDLVTYP,2,[F]SHIDAT,[F]VACBPR,GNUM,WA_CAI,WA_DATVLYCAI,STAT) From SUBANMARG
        GCPT=GCPT_SAUV
        If GOK<0 Return Endif
        If STAT=0
          [F]CAI=WA_CAI : [F]DATVLYCAI=WA_DATVLYCAI
        Else
          Local Char MESSA(80)
          GMESSAGE=mess(104,117,1)-"("+GCPT+") : "
          Gosub MESSAGE From SUBANMARG
          GMESSAGE-=MESSA : GERR=1 : GOK=0 : Return
        Endif
      Else
        Call NUMERO(GCPT,[F]STOFCY,[F]SHIDAT,"",GNUM,STAT) From SUBANM
        GCPT=GCPT_SAUV
        If GOK<0 Return Endif
      Endif
      If STAT=0
        [F:SDH]SDHNUM=GNUM
        [M:SDH0]SDHNUM=GNUM
        Affzo [M:SDH0]SDHNUM
      Else
        GERR=1 : GMESSAGE=mess(60,199,1): GOK=0 : Return
      Endif
    Endif
  Endif

# Alimentation dépôt entête si mono-dépôt
If dim([M:SDH1]WRHE)>0 & GWRHOBY=2
  [F:SDH]WRHE = [M:SDH1]WRHE
Else
  [F:SDH]WRHE = ""
Endif
# Raz du no commande de l'entête livraison s'il y en a plusieurs
If [F:SDH]SOHNUM <> ""
   For I=0 To [M:SDH1]NBLIG-1
      If [M:SDH1]XSOHNUM(I) <> "" & [M:SDH1]XSOHNUM(I) <> [F:SDH]SOHNUM
         Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
         Break
      Endif
   Next I
   #VPO 21/04/09 50583
   #If sum([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1)) = ""
   #CPO 68235
   #If max([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1)) = ""
   If ([M:SDH1]NBLIG-1 >= 0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) = "")
      Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
   Endif
# Maj du no commande dans l'entête livraison s'il n'y en a qu'une
Else
   For I=0 To [M:SDH1]NBLIG-1
      If [M:SDH1]XSOHNUM(I) <> ""
         If [F:SDH]SOHNUM = ""
            [F:SDH]SOHNUM = [M:SDH1]XSOHNUM(I)
            [M:SDH0]SOHNUM= [M:SDH1]XSOHNUM(I)
         Elsif [F:SDH]SOHNUM <> [M:SDH1]XSOHNUM(I)
            Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
            Break
         Endif
      Endif
   Next I
Endif

# Initialisation de la date de retour de prêt
If dim([M:SDH1]LNDRTNDAT) > 0
   If [M:SDH0]LND = 2 & [M:SDH1]LNDRTNDAT = [0/0/0]
      [M:SDH1]LNDRTNDAT = addmonth([M:SDH1]DLVDAT,1)
      [F:SDH]LNDRTNDAT  = [M:SDH1]LNDRTNDAT
   Endif
Endif

[F:SDH]LINNBR = [M]NBLIG
# Alimentation des types de frais/remises et des no éléments de facturation associés
For I = 1 To dim([F:SDH]DISCRGTYP)
   [F:SDH]DISCRGTYP(I-1) = GDISCRGTYP(I-1)
   [F:SDH]INVDTALIN(I-1) = GINVDTALIN(I-1)
Next I

# Alimentation cours en devise société
Call COURSITE([M]CUR,[M]SALFCY,[M]CHGTYP,[M]DLVDAT,COURS,SPSTAT) From TRTDEV
[F:SDH]CHGRAT=COURS

# Chargement adresses libres
Gosub CHARGEADR From SUBSDHB

If [F:SDH]SCO <> 2 & dim([M:SDH0]XBPCLOC)>0 [F:SDH]BPCLOC = [M:SDH0]XBPCLOC Endif

# Chargement des textes
Gosub INITXC

# Initialisation Nature et Régime CEE  (test du "" si import)
#  supprimer le contenu sauf si import
If !GIMPORT : Raz [F:SDH]EECNAT : Raz [F:SDH]EECSCH : Endif   :
#If dim([F:SDH]EECNAT)>0 : # Bug 73295
If GACTDEB=2             : # Bug 73295
   If sum([F:SDH]EECNAT,[F:SDH]EECSCH)=""
      Call INICRE_EEC("SDH",GBIDI2,[F:SDH]EECNAT,[F:SDH]EECSCH,GBIDI3,GBIDC2,GBIDC3) From FUNDEBA
   Endif
Endif

#--- TS_Import_début
Raz GIMPLIVVAL
If [F:SDH]CFMFLG=2
   [F:SDH]CFMFLG=1
   GIMPLIVVAL=1
Endif
#--- TS_Import_fin

Gosub CHARGENTETE

# 101380 - need to reset SFISSTCOD when creating from an order
# Do before the VALTTC call
If GCREPARBOU=1
  Call RELOAD_SFISST From SUBSDHA1
Endif

# 106867.sn
If func AFNC.ACTIV("LTA") & GSOCIETE<>[F:CPY]CPY
  Gosub GET_CPY_SSTTAXACT From TRTTAXSST
Endif
# 106867.en
# Tax by document - before VALTTC call
# If func AFNC.ACTIV("LTA") & GLOCUSATAX   # 106867.o
If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
  GTAXBYDOC = 1
Endif

# --- Valorisation TTC (idem calcul facture)
# 101874 : V9 : Taxe code control
Gosub INIVALTTC
If GOK=0 : Return Endif
# 101874

# ACA (2009-09-22) Lot S03
# 81878 : Ajout borne pour ne pas trier le tableau complet
#Sorta [M:SFIT]NBTRF Order By [M:SFIT]DAC([S]indice)
Sorta [M:SFIT]NBTRF [M:SFIT]NBTRF Order By [M:SFIT]DAC([S]indice)
# 81878
Call CHARG_CCE_MULTI(20,"[M:SFIT]VCRENT","[M:SFIT]DTA","[M:SIHV]XFNUM","[M:SIHV]SFICCE","[M:SIHV]DSP") From TRTX3CPT

Return

# 101874 : V9 : Taxe code control
#  Valorisation TTC (idem calcul facture)
####################################################################
$INIVALTTC

Global Integer G_CLCDSPLIN : G_CLCDSPLIN=1

# Valuation is always done in this case
GVALTTC=2
#---- Paramètres complementaires appel valorisation
# PARAM_T(0) : Flag contrôle des taxes             (1=Non/2=Oui)
# PARAM_T(1) : Lecture de la trace par le sous-pro (1=Non/2=Oui)
# PARAM_T(2) : Flag retour                         (1=KO/2=OK)
Local    Char     PARAM_T (25) (0..10)
PARAM_T(0)=num$(2)      : # Contrôle des taxes lors de la creation
If GIMPORT
    PARAM_T(1)=num$(1)  : # Import     : Pas de lecture de la trace
Else
    PARAM_T(1)=num$(2)  : # Interactif : Lecture de la trace
Endif
PARAM_T(2)=num$(0)
# ACA - GESSDHF = GESSDH avec classe F deja remplie
Call VALTTC ("GESSDHF", PARAM_T) From TRTVENFACR
If PARAM_T(2)="1" GERR=1 : GOK=0 : Return Endif
#Call VALTTC ("GESSDHF") From TRTVENFACR
Return
# 101874
#########################################################################
$CHARGENTETE

# Alimentation des montants en devise société
Call COURMNT([F:SDH]CUR,GLOCALDEV,GLOCALDEV,[F:SDH]CHGTYP,[F:SDH]DLVDAT,1,
&            [F:SDH]DLVNOT,[F:SDH]DLVNOTL,[F:SDH]CHGRAT,WRET) From TRTDEV
Call COURMNT([F:SDH]CUR,GLOCALDEV,GLOCALDEV,[F:SDH]CHGTYP,[F:SDH]DLVDAT,1,
&            [F:SDH]DLVATI,[F:SDH]DLVATIL,[F:SDH]CHGRAT,WRET) From TRTDEV
Return
#########################################################################
$INITXC

If [M:SDH0]PRPTEX1<>""
   If left$([M:SDH0]PRPTEX1,3)="SDH"
      Call CRE_CLOB([M:SDH0]PRPTEX1,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Elsif left$([M:SDH0]PRPTEX1,3)<>"BPD"
      Call DUP_CLOB("SDH",[M:SDH0]PRPTEX1,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Endif
   [F:SDH]PRPTEX1 = [M:SDH0]PRPTEX1
Endif
If [M:SDH0]PRPTEX2<>""
   If left$([M:SDH0]PRPTEX2,3)="SDH"
      Call CRE_CLOB([M:SDH0]PRPTEX2,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Elsif left$([M:SDH0]PRPTEX2,3)<>"BPD"
      Call DUP_CLOB("SDH",[M:SDH0]PRPTEX2,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Endif
   [F:SDH]PRPTEX2 = [M:SDH0]PRPTEX2
Endif
If [M:SDH0]SDHTEX1<>""
   If left$([M:SDH0]SDHTEX1,3)="SDH"
      Call CRE_CLOB([M:SDH0]SDHTEX1,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Elsif left$([M:SDH0]SDHTEX1,3)<>"BPD"
      Call DUP_CLOB("SDH",[M:SDH0]SDHTEX1,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Endif
   [F:SDH]SDHTEX1 = [M:SDH0]SDHTEX1
Endif
If [M:SDH0]SDHTEX2<>""
   If left$([M:SDH0]SDHTEX2,3)="SDH"
      Call CRE_CLOB([M:SDH0]SDHTEX2,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Elsif left$([M:SDH0]SDHTEX2,3)<>"BPD"
      Call DUP_CLOB("SDH",[M:SDH0]SDHTEX2,GOK) From TRTX3TEX
      If GOK<1 Return Endif
   Endif
   [F:SDH]SDHTEX2 = [M:SDH0]SDHTEX2
Endif

Return

#########################################################################
$INICRE_LIG
Local Shortint NOL
NOL=nolign-1

# Alimentation des zones de la ligne de livraison
[F:SDD]SDHNUM = [M:SDH0]SDHNUM
Gosub CHARGESDD From SUBSDHB

# Réajustement de la qté allouée sur la cde si qté livrée < qté allouée cde
If [F:SDD]OALQTYSTU <> 0 & [F:SDD]QTYSTU < [F:SDD]OALQTYSTU
   [F:SDD]OALQTYSTU = [F:SDD]QTYSTU
Endif

[F:SDD]DSPWEU = [M:SDH0]DSPWEU
[F:SDD]DSPVOU = [M:SDH0]DSPVOU
# Alimentation dépôt ligne si renseigné
If dim([M:SDH1]WRH)>0 & [M:SDH1]WRH(NOL)<>""
  [F:SDD]WRH = [M:SDH1]WRH(NOL)
Else
  [F:SDD]WRH = ""
Endif

Raz [F:SDD]PACQTYSTU   # hcb 63367

# 85826 : Liv de BP issus de DL
# Relecture BP pour récupérer le nvx n° séquence de la DL
# dans le cas où la DL a été livrée partiellement sur la livraison en cours
If [M:SDH1]SOHCAT(nolign-1)=4 & [M:SDH1]PRHNUM(nolign-1) <> ""
  Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
  If fstat=0
      [M:SDH1]SOQSEQ(nolign-1)=[F:PRE]ORISEQ
      [F:SDD]SOQSEQ =[F:PRE]ORISEQ
  Endif
Endif

Return

#########################################################################
$CREATION

#----------------------------------------------------------------#
# Création des enregistrements sans SVCRVAT et SVCRFOOT          #
#----------------------------------------------------------------#
Call UPD_VALORISATION ("C","SDH") From TRTVENFACC
# Issue X3-211941 - 2020-09-22 by SR
#If GOK<1 Return Endif
If GOK<1  Goto ERR_CREATION : Endif

# Pour maj entête bon de préparation
Raz WPRHNUM

# Bug 70830
If (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2) & find(36, [M:SDH1]VCRTYPORI(0..[M:SDH1]NBLIG-1))
    If !clalev([F:SCO])  Local File SCOHEAD     [SCO]   Endif
Endif
# Bug 70830

# 78411 Sage Exchange
If func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([M:SDH2]PTE) & !GIMPORT
  # If this order is created new here and the have SE terms, do not allow creation.
  If [M:SDH0]SOHNUM = ""  #SOHNUM on the header will be blank if no SOHNUM or multiple SOHNUM
    Call MESSAGE(mess(39,2092,1)) From GESECRAN
    Raz GOK
# Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
#  Else
#    Call TRANSFER(2,[F:SDH]SOHNUM,4,[F:SDH]SDHNUM,WRET) From SEPPLIB
#    If WRET : Raz GOK : Return : Endif
  Endif
Endif

Gosub CREATION From TABLEAUX : # Ecriture des lignes
# Issue X3-211941 - 2020-09-22 by SR
#If GOK<1 : Return : Endif    : # Propagation erreur
If GOK<1  Goto ERR_CREATION : Endif

#----------------------------------------------------------------#
# ACA - Creation des enr. analytiques des elts de facturation    #
#----------------------------------------------------------------#
[M:SIHV]VCRTYP=2 : [M:SIHV]NUM=[F:SDH]SDHNUM
Gosub CREMOD_DIE_FOOT From SUBSIHV
# Issue X3-211941 - 2020-09-22 by SR
#If GOK < 1 : Return : Endif
If GOK<1  Goto ERR_CREATION : Endif

# Issue 117773 - 2016-07-27 by ERMIL : Check for valid invoice elements for SST prior to commit and making calls
If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2
  Call VALIDATE_INV_ELEM From TRTTAXUSA
  # Issue X3-211941 - 2020-09-22 by SR
  #If GERR=1 : GOK = 0 : Return : Endif
  If GERR = 1 : GOK = 0 : Goto ERR_CREATION : Endif
Endif

# Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
# Detail local tax data
# If func AFNC.ACTIV("LTA") & GLOCUSATAX   # 106867.o
#If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
#  Gosub CREMOD_LTV From TRTTAXSST   # 106867.n
## Gosub CREMOD_LTV From TRTTAXUSA   # 106867.o
#  If GOK < 1 : Return : Endif
#Endif

# Maj sf si livraison intra-société
# Maj sf si livraison pour sous-traitance (Bug 52920)

# X3-1152 : Non invoiceable deliveries
#If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) & !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) & !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
&   & [M:SDH0]SDHCAT<>4
# X3-1152 : Non invoiceable deliveries

    # Maj mouvement client (en-cours livraison)
    Local Char WTYPMVC(1)
    WTYPMVC = "O"
    If [F:SDH]CFMFLG=2 WTYPMVC="D" Endif
    If val(func AFNC.PARAM("ZVPCONCRED","")) = 1 or GZPRHSOH = 0 Then     # 06.317.883.new
      Call MAJMVC ([F:SDH]BPCORD, [F:SDH]CUR, [F:SDH]CHGTYP, 0, [F:SDH]SHIDAT, [F:SDH]SDHNUM, [F:SDH]SALFCY,
&                 0, WLIVTTC, "+", WTYPMVC, "",[F:SDH]LND) From TRTBPMVT
    Endif                                                                 # 06.317.883.new
    # Issue X3-211941 - 2020-09-22 by SR
    #If GOK<1 Return Endif
    If GOK<1  Goto ERR_CREATION : Endif
Endif
If GFONC1="GESSDH" Gosub DEVERROU_SOH Endif

If dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2
   Gosub DEVERROU_REO
   Gosub DEVERROU_STA
Endif
#MAE, LIV_BP
If [M:SDH1]PRHNUM <> ""
  Gosub DEVERROU_PRH
Endif

  # -------------------------------------------------
  # Issue X3-31898 - 2017-11-17 by FGR : BEGIN
  Gosub PJM_TECALLITM
  # Issue X3-211941 - 2020-09-22 by SR
  #If GOK < 1 : Return : Endif
  If GOK<1  Goto ERR_CREATION : Endif
  # Issue X3-31898 - 2017-11-17 by FGR : END
  # -------------------------------------------------

# Issue X3-64479/161959 - 2019-10-16 by MUARN : delock task
Gosub DEVERROU_JTT

# 85785
##--CPO for RMA Issue 75115 Digital signature of shipments and customer returns
## ----------------------------------------------------------- #
## Digital signature of shipments and customer returns         #
## ----------------------------------------------------------- #
#If func AFNC.ACTIV("DKS") & func AFNC.PARAM("PORDKS",[F:SDH]CPY)="2"
#  Gosub DIGSIGN
#Endif
## ----------------------------------------------------------- #

Return

# Issue X3-211941 - 2020-09-22 by SR : Erase SOHNUM
$ERR_CREATION
Raz [M:SDH0]SDHNUM
Return
# End issue X3-211941

#########################################################################
$APRES_CRE
Local Char TBPAR(10)(1..50),TBVAL(30)(1..50)

#                                             # hcb 105412 deb
      # Si bon de préparation colisé
If GFONC1 = "GESPRH" & [F:PRH]PACNBR > 0
   WRET=0
   # Transfert du colisage de la préparation vers la livraison
   Call TRF_COLISAGE([F:PRH]PRHNUM,0,[F:SDH]SDHNUM,0,"PRH",WRET) From STKPREPA
   If WRET=1 : GOK=0 : Return : Endif
Endif
#                                             # hcb 105412 end



#--- Bug 68231
# Maj des cumuls colisage dans la livraison
If WCOLFLG=1
   WRET=0
   Call TRF_COLISAGE("",0,[F:SDH]SDHNUM,0,"SDH",WRET) From STKPREPA
   If WRET=1 : GOK=0 : Return : Endif
Endif

# Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
Gosub RECALC_SST

# 78411 Sage Exchange
If func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([F:SDH]PTE)
  Gosub SEPP_SDH_CRE From SEPPLIB2  #122614 - JOBRO - Rework of transaction mgmt
#122614 - JOBRO - Rework of transaction mgmt
#  # Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
#  Call TRANSFER(2,[F:SDH]SOHNUM,4,[F:SDH]SDHNUM,WRET) From SEPPLIB
#  Call AUTH_CHK(4,[F:SDH]SDHNUM,GERR,GMESSAGE) From SEPPLIB
#  If GERR
#    Call ERREUR(GMESSAGE) From GESECRAN
#    Raz GMESSAGE : Raz GERR
#    WRET = 1    # TODAN-118776: Error so we need to set WRET to 1 so it can call the CREDITCARD_ERROR to delete the shipment.
#  Endif
#
#  # If there was an error during Auth, now we need to delete the shipment
#  If WRET : Goto CREDITCARD_ERROR : Endif
#122614 - JOBRO - Rework of transaction mgmt
Endif

#--- TS_Import_début
If GIMPORT & GIMPLIVVAL=1
   Call VALIDATION([F:SDH]SDHNUM) From TRTVENLIVV
   Unlock = "SDH"+[F:SDH]SDHNUM
Endif
#--- TS_Import_fin

If ([F:SDH]NPRFLG = 2 & WSLTNPRFLG = 2) | ([F:SDH]NDEFLG = 2 & WSLTDOCFLG = 2)
   Gosub SET_CLE From GOBJSUB
   CLECUR = 1
Endif

If !GIMPORT & !GWEBSERV
   If GCREPARBOU=1 & (([F:SDH]NPRFLG=2 & WSLTNPRFLG=2) | ([F:SDH]NDEFLG=2 & WSLTDOCFLG=2))
      Call TEMPOFF From GESECRAN
   Endif
   #-----impression bon de prepa livraison -----#
   If [F:SDH]NPRFLG = 2 & WSLTNPRFLG = 2
      Call ETAT(WSLTNPRNAM,"GESSDH",TBPAR,TBVAL) From ETAT
   Endif
   Raz TBPAR, TBVAL
   #-----impression bon de livraison -----#
   If [F:SDH]NDEFLG = 2 & WSLTDOCFLG = 2
      # Issue X3-242198 - 2021-05-11 by SR : Save the previous value of REPORT1
      Local Char  WREPORT1(GLONARP) : WREPORT1 = [L]REPORT1
      If [M:SDH0]DOCNAM<>""
         [L]REPORT1=[M:SDH0]DOCNAM
      Elsif WSLTDOCNAM<>""
         [L]REPORT1=WSLTDOCNAM
      Endif
      Call ETAT([L]REPORT1,"GESSDH",TBPAR,TBVAL) From ETAT
      # Issue X3-242198 - 2021-05-11 by SR : Restore the previous value of REPORT1
      [L]REPORT1 = WREPORT1
   Endif
Endif

  If GCREPARBOU<>1
    # On fait toujours un gosub RELIT, sauf si création par bouton
    If !GIMPORT Then              # FGR 03/12/2012 : X3SUIVI86360 à ne pas faire si on est en import
      Gosub RELIT From GOBJSUB
    Else
      # If faut repasser dans liens même en import pour recalculer l'état de la livraison
      Gosub LIENS From TABLEAUX
    Endif
  Endif
[M:SDH0]SDHNUM = [F:SDH]SDHNUM

Return

####################################################################
$AB_CRE_MOD

# 78411 Sage Exchange
If func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([F:SDH]PTE)
  Call POST_AUTH(2,[F:SDH]SOHNUM,GERR,GMESSAGE) From SEPPLIB
Endif

Gosub DEVERROU_SOH
Gosub DEVERROU_PRH    #MAE, LIV_BP
If dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2
   Gosub DEVERROU_REO
   Gosub DEVERROU_STA
Endif

# Issue X3-64479/161959 - 2019-10-16 by MUARN : delock task
Gosub DEVERROU_JTT
Gosub PJM_TECALLITM_FREEGROUP

Return

#########################################################################
$LIENS

Local Integer I, TYPLIV, NBPOSTE, CDTSTA
Local Char    WSVGGREP(1)

# Remise à zéro de l'écran de travail STOSORW
Call RAZSTOSORW From STKSOR
#------------------------------------------------------------------------#
# Récupération des paramètres vente du site / de la société              #
# Chargement globales référenciels, comptes et sections de la société    #
# Réalimentation du cours devise dossier/devise cde                      #
# -----------------------------------------------------------------------#
GFCY = [F:SDH]SALFCY
Call GLOBVAR(GFCY,"VEN") From TRTX3
#Call GETDEV(GFCY)  From DEVSUB
Gosub CHARG_PARAM
Call GLOBSTOFCY([F:SDH]STOFCY) From TRTVENGLOB
#----------------------------------------------------#
# Chargement libellés et formats colonnes tarif      #
#----------------------------------------------------#
#If GACTMUL=2
# Alimentation concernant les colonnes frais/remises en fonction de la structure tarif de la société
Call ALICOLREM (1,4,GFLAG,"SDH1",[M:SDH1]CUR,0,[M:SDH0]PLISTC) From TRTPRICE
#Else
#    # Alimentation du format des colonnes frais/remise
#    Call ALIFORREM (4, GFLAG, "SDH1", 0, [M:SDH1]CUR) From TRTPRICE
#Endif
# -----------------------------------------------------------------------#
# Chargement des sections analytiques entête du document                 #
# Affichage entêtes colonnes variables (comptes et sections analytiques) #
# -----------------------------------------------------------------------#
Call CHARG_CCEH("SDH3","NBAXE","SDH") From TRTX3CPT
Gosub AFF_TITCOL

Raz SVGSOHNUM

# Livraison ou liv prêt ou liv sous-traitance
If [M:SDH0]LND = 2
   [M:SDH0]TRSTYP=17
Elsif dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2
   [M:SDH0]TRSTYP=20
Else
   [M:SDH0]TRSTYP=4
Endif

# Issue X3-69499 - 2018-02-14 by TS
[M:SDH1]CFMPAR=1

#--------------------------------------------------#
# Init. nbre de postes des elements de facturation #
# Init. du tableau     des elements de facturation #
#--------------------------------------------------#
Read [BPR]BPR0=[M:SDH0]BPCINV
If fstat Call RSTA ("BPR",[M:SDH0]BPCINV) From GLOCK Endif

Read [BPC]BPC0 = [F:SDH]BPCINV
If fstat
   Raz [F:BPC]
   Call RSTA("BPC",[F:SDH]BPCINV) From GLOCK
   [F:BPC]CUR = GLOCALDEV
Endif
NBPOSTE=dim([M:SDH2]INVDTA)
Call STRUFOOT (4,"SDH2",NBPOSTE,[F:SDH]CHGTYP,[F:BPC]CUR,[F:SDH]CUR,"NON") From SUBSFIT
[M:SDH2]NBFAC = NBPOSTE

If [F:SDH]BPINAM(0) <> ""
     [M:SDH0]BPINAM = [F:SDH]BPINAM(0)
Else [M:SDH0]BPINAM = [F:BPC]BPCNAM
Endif
# Alimentation l'en-cours
Call SDCDTSTA("",[M:SDH0]BPCORD,[M:SDH0]CHGTYP,0,[M:SDH1]CUR,[M:SDH1]SHIDAT,0, 1,CDTSTA,
&             [M:SDH0]OST,[M:SDH0]OSTAUZ) From TRTVENCDT
#-------------------------------------------------------#
# Lecture Client commande                               #
#-------------------------------------------------------#
Read [BPC]BPC0 = [F:SDH]BPCORD
If fstat
   Raz [F:BPC]
   Call RSTA("BPC",[F:SDH]BPCORD) From GLOCK
Endif

#--- Bug 72332
GBPCNUM     = [F:SDH]BPCORD
[M:SDH0]ODL = [F:BPC]ODL

# Alimentation à partir du modèle d'édition
Call ALI_PRTMOD("SDH0",4) From TRTX3
If [M:SDH0]COPNBR=0 [M:SDH0]COPNBR=1 Endif

#-------------------------------------------------------#
# Lecture Client livré   : Alimentation du nom client   #
#-------------------------------------------------------#
If [F:BPD]BPCNUM <> [F:SDH]BPCORD | [F:BPD]BPAADD <> [F:SDH]BPAADD
   Read [BPD]BPD0 = [F:SDH]BPCORD;[F:SDH]BPAADD
   If fstat : Raz [F:BPD]:Call RSTA("BPD",[F:SDH]BPCORD) From GLOCK : Endif
Endif
#----------------------------#
# Lecture représentants      #
#----------------------------#
If dim([M:SDH2]REP) > 0
   If [M:SDH2]REP(0) <> ""
      Read [F:REP]REP0 = [M:SDH2]REP(0)
      If fstat=0 & [F:BPC]COMCAT<>0
         [M:SDH0]XREPRAT(0) = [F:REP]COMRAT1([F:BPC]COMCAT-1)
      Endif
   Endif
Endif
If dim([M:SDH2]REP) > 1
   If [M:SDH2]REP(1) <> ""
      Read [F:REP]REP0 = [M:SDH2]REP(1)
      If fstat=0 & [F:BPC]COMCAT<>0
         [M:SDH0]XREPRAT(1) = [F:REP]COMRAT2([F:BPC]COMCAT-1)
      Endif
   Endif
Endif
If [F:SDH]BPDNAM(0) <> ""
     [M:SDH0]BPDNAM = [F:SDH]BPDNAM(0)
Else [M:SDH0]BPDNAM = [F:BPD]BPDNAM
Endif
[M:SDH2]YCUR    = [F:SDH]CUR
[M:SDH2]XGROWEI = [F:SDH]GROWEI
[M:SDH2]XVOL    = [F:SDH]VOL
[M:SDH2]XBPTNUM = [F:SDH]BPTNUM
[M:SDH1]XDLVNOT = [F:SDH]DLVNOT
If [F:SDH]SCO <> 2
    If dim([M:SDH0]XBPCLOC)>0 [M:SDH0]XBPCLOC = [F:SDH]BPCLOC : Endif
    If dim([M:SDH3]BPCLOC)> 0  Raz [M:SDH3]BPCLOC : Endif
Endif
#---------------------------#
# Alimentation des adresses #
#---------------------------#
[M:ADB2]ADBBPR       = [F:SDH]BPCORD
[M:ADB2]BPAADD       = [F:SDH]BPAADD
[M:ADB2]BPRNAM(0)    = [F:SDH]BPDNAM(0)
[M:ADB2]BPRNAM(1)    = [F:SDH]BPDNAM(1)
[M:ADB2]BPAADDLIG(0) = [F:SDH]BPDADDLIG(0)
[M:ADB2]BPAADDLIG(1) = [F:SDH]BPDADDLIG(1)
[M:ADB2]BPAADDLIG(2) = [F:SDH]BPDADDLIG(2)
[M:ADB2]POSCOD       = [F:SDH]BPDPOSCOD
[M:ADB2]CTY          = [F:SDH]BPDCTY
[M:ADB2]SAT          = [F:SDH]BPDSAT
[M:ADB2]CRY          = [F:SDH]BPDCRY
[M:ADB2]CRYNAM       = [F:SDH]BPDCRYNAM
[M:ADB2]CNTNAM       = [F:SDH]CNDNAM
#If [F:SDH]BPCORD=[F:SDH]BPCINV & dim([M:ADB2]EECNUM)>0
#   [M:ADB2]EECNUM    = [F:SDH]BPIEECNUM
#Endif


If [M:ADB2]BPRNAM <> "" | [M:ADB2]BPAADDLIG <> "" |
&  [M:ADB2]POSCOD <> "" | [M:ADB2]CTY <> "" |
&  [M:ADB2]SAT    <> "" |
&  [M:ADB2]CRY    <> "" | [M:ADB2]CRYNAM <> ""
    [M:ADB2]ADBFLG = 3
Else
    [M:ADB2]ADBFLG = 0
Endif


#LTA.sn
If dim([M:ADB2]ADRVAL) > 0 and dim([F:SDH]ADRVAL) > 0
    [M:ADB2]ADRVAL = [F:SDH]ADRVAL
Endif

Gosub SHOW_HIDE_ENTCOD From TRTADRLIB
#LTA.en

[M:ADB3]ADBBPR       = [F:SDH]BPCINV
[M:ADB3]BPAADD       = [F:SDH]BPAINV
[M:ADB3]BPRNAM(0)    = [F:SDH]BPINAM(0)
[M:ADB3]BPRNAM(1)    = [F:SDH]BPINAM(1)
[M:ADB3]BPAADDLIG(0) = [F:SDH]BPIADDLIG(0)
[M:ADB3]BPAADDLIG(1) = [F:SDH]BPIADDLIG(1)
[M:ADB3]BPAADDLIG(2) = [F:SDH]BPIADDLIG(2)
[M:ADB3]POSCOD       = [F:SDH]BPIPOSCOD
[M:ADB3]CTY          = [F:SDH]BPICTY
[M:ADB3]SAT          = [F:SDH]BPISAT
[M:ADB3]CRY          = [F:SDH]BPICRY
[M:ADB3]CRYNAM       = [F:SDH]BPICRYNAM
[M:ADB3]CNTNAM       = [F:SDH]CNINAM
#If dim([M:ADB3]EECNUM)>0 [M:ADB3]EECNUM=[F:SDH]BPIEECNUM Endif

If [M:ADB3]BPRNAM <> "" | [M:ADB3]BPAADDLIG <> "" |
&  [M:ADB3]POSCOD <> "" | [M:ADB3]CTY <> "" |
&  [M:ADB3]SAT    <> "" |
&  [M:ADB3]CRY    <> "" | [M:ADB3]CRYNAM <> ""
    [M:ADB3]ADBFLG = 3
Else
    [M:ADB3]ADBFLG = 0
Endif
If [M:ADB3]ADBFLG=0
#    Aucune adresse chargée pour le client facture
#    --> Essai de récup. du code adresse dans la fiche client commande
    If [M:SDH0]BPCINV=[F:BPC]BPCINV [M:ADB3]BPAADD=[F:BPC]BPAINV : Endif
Endif
# Alimentation pays client livré pour affichage et ctrl n°identification CEE
If [M:ADB2]CRY<>""
    [M:SDH0]EECNUMCRY=[M:ADB2]CRY
Else
    If !clalev ([F:BPA]) : Local File BPADDRESS [BPA] : Endif
    If [F:BPA]BPATYP<>1| [F:BPA]BPANUM<>[F:SDH]BPCORD | [F:BPA]BPAADD<>[F:SDH]BPAADD
        Read [BPA]BPA0=1;[F:SDH]BPCORD;[F:SDH]BPAADD
        If fstat Raz [F:BPA] Endif
    Endif
    [M:SDH0]EECNUMCRY=[F:BPA]CRY
Endif

# X3-101236 (LCC-23/07/18) Control "EU VAT no"
# The country can be the country of the ship to customer or the country of the bill to customer
Local Char WDUMMY(20)
Call INIEECNUM ([M:SDH0]BPCORD,[M:SDH0]BPAADD,[M:SDH0]BPCINV,WDUMMY,[M:SDH0]EECNUMCRY) From TRTVENDIV
# end X3-101236 (LCC-23/07/18) Control "EU VAT no"

# Le client facturé a t'il un no d'identification CEE
GETATCEE=2
Read [BPR]BPR0=[F:SDH]BPCINV
If fstat | [F:BPR]EECNUM="" GETATCEE=1 Endif

If GMODU(7)=2
    If dim([M:SDH0]SCO) > 0 & [M:SDH0]SCO = 2
#        GLOCSEL = "[F:STC]LOCCAT=3|[F:STC]LOCCAT=4"
        GLOCSEL = "[F:STC]LOCCAT=4"
    Else
#        GLOCSEL = "[F:STC]LOCCAT<>3&[F:STC]LOCCAT<>4"
        GLOCSEL = "[F:STC]LOCCAT<>4"
    Endif
Endif
If GFONC1="GESSDH" Call RAZ_CLOB From ACLOB Endif
# Pour visu des textes si livraison validée
If [F:SDH]CFMFLG=2
   GCONSDIA=2
Else
   GCONSDIA=0
Endif

# Issue X3-53890
# We have to know if there is a package for this delivery
# [M:SDH0]SPDFLG<2 : No package
# [M:SDH0]SPDFLG=2 : At least one package
Raz [M:SDH0]SPDFLG
If [F:SDH]PACFLG<2
    # [F:SDH]PACFLG = 0,1 : No Packed or Partially Packed
    Filter [SPD] Where VCRTYP=4 & VCRNUM=[F:SDH]SDHNUM
    Read [SPD] First
    If !fstat [M:SDH0]SPDFLG=2 Endif
    Filter [SPD]
Else
    # [F:SDH]PACFLG = 2   : Completely Packed
    [M:SDH0]SPDFLG=2
Endif
# End issue X3-53890

# ACA On ne Raz que si le masque de travail SFITRF est en ligne (Pour inter-site)
If dim([M:SFIT]LIGQTYPRO)>0
  Raz [M:SFIT]LIGQTYPRO
  Raz [M:SFIT]LIGAMTPRO
  Raz [M:SFIT]LIGWEIPRO
  Raz [M:SFIT]LIGVOLPRO
Endif

Raz YSOHNUM  # FGR 21/08/2014 : X3SUIVI89449
Gosub LIENS From TABLEAUX : # Chargement des lignes
#------------------------#
# affichage icone texte  #
#------------------------#
If !GIMPORT
    If [M:SDH0]SDHTEX1 <> "" | [M:SDH0]SDHTEX2 <> "" | [M:SDH0]PRPTEX1 <> "" | [M:SDH0]PRPTEX2 <> ""
        Call SET_IMAGE (4) From GESECRAN
    Else
        Call RESET_IMAGE (4) From GESECRAN
    Endif
Endif

# Gestion de l'état des zones
WSVGGREP = GREP : Raz GREP
Gosub ETAT_ZONE
GREP = WSVGGREP

# FGR 21/08/2014 : X3SUIVI89449 (début) déplacé à la fin de $LIENS_LIG
  #If [M:SDH1]NBLIG <> 0
  #   For I=0 To [M:SDH1]NBLIG-1
  #      If [M:SDH1]XSOHNUM(I) <> ""
  #         YSOHNUM = [M:SDH1]XSOHNUM(I)
  #         Break
  #      Endif
  #   Next I
  #Endif
  If YSOHNUM <> "" Then
    Read [F:SOH]SOH0=YSOHNUM
    If fstat Then
      Raz [F:SOH]
    Endif
    If [F:SOH]SOHNUM <> ""
      [M:SDH0]ODL = [F:SOH]ODL
    Endif
  Endif
# FGR 21/08/2014 : X3SUIVI89449 (fin)

#VPO 02/06/09 50951
# on alimente PTHNUM
If GMODU(6)=2 & [M:SDH1]NBLIG <> 0
    If [M:SDH1]BETFCY=2 & max([M:SDH1]RCPFLG(0..[M:SDH1]NBLIG-1))=2 & [M:SDH0]PTHNUM=""
        Read [PTH]PTH1=[M:SDH0]SDHNUM
        If fstat=0
            [M:SDH0]PTHNUM=[F:PTH]PTHNUM
        Endif
    Endif
Endif

# Remplissage des boites de picking
Gosub REMPBOX From SUBSDHC

# Actzo ou Grizo des dépôts selon le site
GWRHOBY = GSVGWRHOBY
Gosub WRH_ETAT

Raz GSDHSUPPLIGDSP :#--CPO 79343

#-- X3Suivi 75115 Libellé Catégorie --#
[M:SDH0]WSDHCAT = mess(8,105,1) - ':' - mess([M:SDH0]SDHCAT,490,1)

# BRBAN 24/07/2014 SAM #93745 US2
If func AFNC.ACTIV('KPO')>0
  If func PORLEGLIB.DIGSIGN("", [F:SDH]CPY)=1
    Actzo [M:SDH3]GLBDOCDAT,GLBDOCNUM,GLBDOCTYP,MANDOC
    Actzo [M:SDH3]ARVDAT,DPEDAT,ETD,ETA,LICPLATE,TRLLICPLATE
    Diszo [M:SDH3]ATDTCOD
    If func PORLEGLIB.DOCCTR(2,[F:SDH]BPCORD ,[F:SDH]SDHTYP,[F:SDH]STOFCY)=1
      If [F:SDH]CFMFLG<>2
        Actzo [M:SDH3]ATDTCOD
      Else
        Read [F:PTDKD]DKD0 = "SAFT-PT";[F:SDH]SDHTYP;[F:SDH]SDHNUM
        If !fstat & [F:PTDKD]ATDTCOD<>''
          Diszo [M:SDH3]ARVDAT,DPEDAT,ETD,ETA,LICPLATE,TRLLICPLATE
          Diszo [M:SDH3]GLBDOCDAT,GLBDOCNUM,GLBDOCTYP,ATDTCOD,MANDOC,GLBDOC
          [M:SDH3]ATDTCOD= [F:PTDKD]ATDTCOD
          Affzo [M:SDH3]ATDTCOD
        Endif
      Endif
    Endif
    If [M:SDH3]GLBDOC = 2
      Diszo [M:SDH3]GLBDOCDAT,GLBDOCNUM,GLBDOCTYP
    Endif
    Call DIS_MANDOC(GFONCTION) From TRNDOC
  Else
    Diszo [M:SDH3]GLBDOCDAT,GLBDOCNUM,GLBDOCTYP,MANDOC,ATDTCOD,GLBDOC
  Endif
Endif
#-

# - 101090 - Bill of lading
Call SETUP_BOL From SUBSDHB

# 101380 - Sage Sales Tax override
Call SETUP_SSTFIELDS From SUBSDHA1

#X3-1152 : Nonbillable deliveries
If [F:TSD]SDHCAT=4
  Chgfmt [M:SDH1]SIHNUM         With "-K:"+num$(GLONVCR)+"X"
  Chgfmt [M:SDH1]INVFLG         With "-K:X"
Else
  Chgfmt [M:SDH1]SIHNUM         With "K:"+num$(GLONVCR)+"X"
  Chgfmt [M:SDH1]INVFLG         With "K:X"
Endif
#End X3-1152 : Nonbillable deliveries

# X3-64479 : Be able to create non invoiceable deliveries from project tasks / X3-135305 (LD 07/23/19)
Raz [M:SCRW]
# X3-64479 : Be able to create non invoiceable deliveries from project tasks / X3-135305 (LD 07/23/19)

Return

#########################################################################
$LIENS_LIG
Local Integer  WTRT
Local Shortint NOL
NOL=nolign-1

# Issue X3-69499 - 2018-02-14 by TS
# Si la livraison n'est pas validée et au moins une ligne est validée,
# alors la livraison est validée partiellement
If [F:SDH]CFMFLG<>2 & [F:SDD]LINCFMFLG=2
  [M:SDH1]CFMPAR=2
Endif
# End issue X3-69499

#---------------------------------------------------------#
# Lecture article pour chargement gestion no séries       #
#---------------------------------------------------------#
# FGR 27/07/2015 : X3SUIVI108078 : Optimisation (début)
#Read [ITM]ITM0=[F:SDD]ITMREF : #Call LECTURE ("ITM",[F:SDD]ITMREF,"") From CONTOBJ
#If fstat  Call RSTA ("ITM",[F:SDD]ITMREF) From GLOCK
#Else [M:SDH1]XSERMGTCOD(NOL) = [F:ITM]SERMGTCOD
#Endif
[M:SDH1]XSERMGTCOD(NOL) = [F:ITM]SERMGTCOD
# FGR 27/07/2015 : X3SUIVI108078 : Optimisation (fin)
#---------------------------------------------------------#
# Lecture article-vente                                   #
#---------------------------------------------------------#
# FGR 27/07/2015 : X3SUIVI108078 : Optimisation (début)
#Read [ITS]ITS0=[F:SDD]ITMREF : #Call LECTURE ("ITS",[F:SDD]ITMREF,"") From CONTOBJ
#If fstat  Call RSTA ("ITS",[F:SDD]ITMREF) From GLOCK Endif
# FGR 27/07/2015 : X3SUIVI108078 : Optimisation (fin)
# FGR 10/11/2015 : X3SUIVI108078 (début) TEST [ITS]
If [F:ITS]ITMREF <> [F:SDD]ITMREF Then
  Call MESSAGE(func AFNC.MES1(mess(435,192,1), [F:SDD]ITMREF)) From GESECRAN
Endif
# FGR 10/11/2015 : X3SUIVI108078 (fin) TEST [ITS]
#---------------------------------------------------------#
# Lecture détail commande pour alim. qté restant à livrer #
#                                 et qté allouée          #
#---------------------------------------------------------#
[M]YDLVQTY(NOL) = 0

#[M]YALLQTY(NOL) = 0
If [F:SDD]SOHNUM <> ""
   If [F:SOQ]SOHNUM <> [F:SDD]SOHNUM | [F:SOQ]SOPLIN <> [F:SDD]SOPLIN
&   | [F:SOQ]SOQSEQ <> [F:SDD]SOQSEQ
      Read [SOQ]SOQ0 = [F:SDD]SOHNUM;[F:SDD]SOPLIN;[F:SDD]SOQSEQ
      If fstat Raz [F:SOQ] Endif
   Endif
   [M]YDLVQTY(NOL) = [F:SOQ]QTY-[F:SOQ]ODLQTY-[F:SOQ]DLVQTY
&                   -[F:SOQ]LPRQTY-[F:SOQ]OPRQTY-[F:SOQ]PREQTY+[F:SDD]QTY
#   [M]YALLQTY(NOL) = [F:SOQ]ALLQTY+[F:SDD]QTY
Endif

#------------------------------------------------#
# Alimentation de l'écran à partir de SDELIVERYD #
#------------------------------------------------#
[M:SDH1]XSOHNUM(NOL) = [F:SDD]SOHNUM
[M:SDH1]XWEU(NOL)    = [F:SDD]WEU

[M:SDH1]VACITM1(NOL) = [F:SDD]VACITM(0)
[M:SDH1]VACITM2(NOL) = [F:SDD]VACITM(1)
[M:SDH1]VACITM3(NOL) = [F:SDD]VACITM(2)
[M:SDH1]VAT1(NOL)    = [F:SDD]VAT(0)
[M:SDH1]VAT2(NOL)    = [F:SDD]VAT(1)
[M:SDH1]VAT3(NOL)    = [F:SDD]VAT(2)
[M:SDH1]LOTFIL(NOL)  = [F:SDD]LOT
[M:SDH1]STAFIL(NOL)  = [F:SDD]STA
[M:SDH1]LOCFIL(NOL)  = [F:SDD]LOC

#--- Bug 72332
If NOL=0 : WORINUM=[F:SDD]PRHNUM : Endif

If dim([M:SDH1]SSTCOD(NOL)) >0: [M:SDH1]SSTCOD(NOL) =[F:SDD]SSTCOD   : Endif #101380.n
If dim([M:SDH1]TSICOD1(NOL))>0: [M:SDH1]TSICOD1(NOL)=[F:SDD]TSICOD(0): Endif
If dim([M:SDH1]TSICOD2(NOL))>0: [M:SDH1]TSICOD2(NOL)=[F:SDD]TSICOD(1): Endif
If dim([M:SDH1]TSICOD3(NOL))>0: [M:SDH1]TSICOD3(NOL)=[F:SDD]TSICOD(2): Endif
If dim([M:SDH1]TSICOD4(NOL))>0: [M:SDH1]TSICOD4(NOL)=[F:SDD]TSICOD(3): Endif
If dim([M:SDH1]TSICOD5(NOL))>0: [M:SDH1]TSICOD5(NOL)=[F:SDD]TSICOD(4): Endif
#----- Chargement sections analytiques -----#
Call CHARG_CCE("SDH1",NOL,"SDD",0,[F:SDD]SDHNUM,[F:SDD]SDDLIN,0,"") From TRTX3CPT
# Chargement des zones servant de tests en VALLIG
[M]YQTY(NOL)    = [M]QTY(NOL)
[M]YQTYSTU(NOL) = [M]QTYSTU(NOL)
# Chargement de la quantité pour calcul de qté en nomenclature
[M]CQTY(NOL)    = [M]QTY(NOL)

# Alimentation des montants ligne
Gosub CALC_DLV From SUBSDHB

# Alimentation des zones stock de la ligne document
Raz WRET

# Issue X3-69499 - 2018-02-14 by TS
#If [M:SDH1]CFMFLG=2
# Issue X3-131227
#If [M:SDH1]LINCFMFLG(NOL)=2
If [M:SDH1]CFMFLG=2 | [M:SDH1]LINCFMFLG(NOL)=2
# End issue X3-131227
# End issue X3-69499
   WTRT=1
Else
   WTRT=2
Endif

# Alimentation des zones stock de la ligne livraison
# à partir de STOJOU ou STOALL
If [M]STOMGTCOD(NOL)>1
    Call RECSTOSOR (WTRT, "SDH1",NOL,[M:SDH0]STOFCY,[M:SDH1]ITMREF(NOL),4,
&                   [M:SDH0]SDHNUM,[M:SDH1]SDDLIN(NOL),"",WRET) From STKECR
Endif

#--CPO 71065 Code affaire en-tête / lignes
[M:SDH1]DPJT(NOL)=[F:SDD]PJT
#--/CPO

# Issue X3-64479/70281 - 2019-09-13 by MUARN : Project task
If [M:SDH1]VCRTYPORI(NOL)=40
  Local Integer IRET
  Local Char SPROJECT(GLONPIM)
  Local Char SBUDGET(GLONPBU)
  Local Char STASK(GLONTAC)
  IRET = func PIMPL_CSTD_PROGS.PJM_KEY_SPLIT(GACTX, [M:SDH1]DPJT(NOL), SPROJECT, SBUDGET, STASK)
  Read [JTT]JTT0=SPROJECT;STASK;[M:SDH1]VCRLINORI(NOL)
  If [F:JTT]STOMGTCOD > 1
    # Issue X3-64479/164829 - 2019-10-15 by MUARN : only ALLQTY
    #[M]YDLVQTY(NOL) = [F:JTT]ALLQTY - ([F:JTT]SOQQTY+[F:JTT]ODLQTY+[F:JTT]DLVQTY)
    [M]YDLVQTY(NOL) = [F:JTT]ALLQTY + [F:SDD]QTY
  Else
    [M]YDLVQTY(NOL) = [F:JTT]ITTQTY - ([F:JTT]SOQQTY+[F:JTT]ODLQTY+[F:JTT]DLVQTY) + [F:SDD]QTY
  Endif
Endif

  # FGR 21/08/2014 : X3SUIVI89449 (début)
  If YSOHNUM = "" and [M:SDH1]XSOHNUM(NOL) <> "" Then
    YSOHNUM = [M:SDH1]XSOHNUM(NOL)
  Endif
  # FGR 21/08/2014 : X3SUIVI89449 (début)
Return

#########################################################################
$AVANT_MOD

  # Modification impossible si livraison validée
  If [M]CFMFLG=2
    If GRELITSDH2=1
      GRELITSDH2=0
      OK=0
    # Issue X3-51179 - 2017-08-01 by CPO : On posted delivery we can update analytic section
    #Elsif COUZON<>"LICPLATE" or COUZON<>"TRALICPLT" or COUZON<>"DEPDAT" or COUZON<>"ETD" or COUZON<>"ARRDAT" or COUZON<>"ETA" Then
    Elsif COUZON="LICPLATE" or COUZON="TRLLICPLATE" or COUZON="DPEDAT" or COUZON="ETD" or COUZON="ARVDAT" or COUZON="ETA" Then
      # FGR 04/07/2014 : X3SUIVI91606 : ces zones sont toujours modifiables
    # End issue X3-51179
    Elsif [M]LND<>2 | COUZON<>"LNDRTNDAT"
      GERR=1:GMESSAGE=mess(41,192,1)
      OK=0
    Endif
  Endif
  [M:SDH0]OST -= [F:SDH]DLVATI
  # FGR 05/08/2014 : X3SUIVI97031 (début)
  If [M:SDH1]CFMFLG = 1 Then
    [M:SDH1]PRNNDE = 1
  Endif
  # FGR 05/08/2014 : X3SUIVI97031 (fin)
Return

#########################################################################
$AVANT_MODFIC
Local Integer SPSTAT
Local Decimal COURS

# Bug 68017 : Pour éviter les pbs d'arrondi, on enleve le mnt total de la livraison
# Maj sf si livraison intra-société
# Maj sf si livraison pour sous-traitance (Bug 52920)

# X3-1152 : Non invoiceable deliveries
#If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) & !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
  If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) & !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
&   & !([M:SDH0]SDHCAT=4) # X3-88913 (LCC 18/05/18) Customer credit limit is doubling the amount
# X3-1152 : Non invoiceable deliveries

    # Maj mouvement client (déduction en-cours livraison)
    Local Char WTYPMVC(1)
    WTYPMVC = "O"
    If [F:SDH]CFMFLG=2 WTYPMVC="D" Endif
    If val(func AFNC.PARAM("ZVPCONCRED","")) = 1 or GZPRHSOH = 0 Then     # 06.317.883.new
      Call MAJMVC ([F:SDH]BPCORD, [F:SDH]CUR, [F:SDH]CHGTYP, 0, [F:SDH]SHIDAT, [F:SDH]SDHNUM, [F:SDH]SALFCY,
&                 0, [F:SDH]DLVATI, "-", WTYPMVC, "",[F:SDH]LND) From TRTBPMVT
    Endif                                                                 # 06.317.883.new
    If GOK<1 Return Endif
Endif
# Bug 68017

# Maj des statistiques
#Call VALSTA("SDH",-1) From SUBPS2
#If GOK < 1 : Return : Endif

# Alimentation cours en devise société
If [F:SDH]CUR<>[M]CUR | [F:SDH]SALFCY<>[M]SALFCY | [F:SDH]DLVDAT<>[M]DLVDAT
   Call COURSITE([M]CUR,[M]SALFCY,[M]CHGTYP,[M]DLVDAT,COURS,SPSTAT) From TRTDEV
   [F:SDH]CHGRAT=COURS
Endif
YSHIDAT = [F:SDH]SHIDAT : # 15380
#YPACNBR = [F:SDH]PACNBR
#If YPACNBR> 0
#    Local Integer WTABPACSEQ (YPACNBR) : Local Decimal WTABNETWEI (YPACNBR)
#Endif

# Cas particulier où on modifie le texte en le supprimant
If [M:SDH0]SDHTEX1="" & left$([F:SDH]SDHTEX1,3)="SDH"
    Call SUP_CLOB([F:SDH]SDHTEX1,WRET) From TRTX3TEX
Endif
If [M:SDH0]SDHTEX2="" & left$([F:SDH]SDHTEX2,3)="SDH"
    Call SUP_CLOB([F:SDH]SDHTEX2,WRET) From TRTX3TEX
Endif
If [M:SDH0]PRPTEX1="" & left$([F:SDH]PRPTEX1,3)="SDH"
    Call SUP_CLOB([F:SDH]PRPTEX1,WRET) From TRTX3TEX
Endif
If [M:SDH0]PRPTEX2="" & left$([F:SDH]PRPTEX2,3)="SDH"
    Call SUP_CLOB([F:SDH]PRPTEX2,WRET) From TRTX3TEX
Endif
# Réalimenter [M]WRHE avec [F]WRHE pour ne pas écraser le mono-dépôt
If dim([M:SDH1]WRHE)>0
   [M:SDH1]WRHE = [F:SDH]WRHE
Endif

Return

#########################################################################
$VERIF_MOD



If OK=0 Return Endif : # Bug 49634 : Si positionné par le spécifique, inutile de continuer
Local Char    SVMESSAGE(250)
Gosub VERIF
If OK=0 Return Endif
# Recherche tarif transporteur
If GFRENUM <> 0 & [M:SDH2]BPTNUM<>"" : # Bug 47789
   If [M:SDH2]GROWEI <> [M:SDH2]XGROWEI | [M:SDH2]VOL <> [M:SDH2]XVOL
&     | [M:SDH2]BPTNUM <> [M:SDH2]XBPTNUM | [M:ADB2]POSCOD <> [F:SDH]BPDPOSCOD
&     | [M:ADB2]CTY <> [F:SDH]BPDCTY | [M:ADB2]CRY <> [F:SDH]BPDCRY
&     | [M:SDH1]DLVNOT <> [M:SDH1]XDLVNOT
      OK = 2
      If !GIMPORT
          SVMESSAGE=GMESSAGE
          Call OUINON(mess(161,196,1),OK) From GESECRAN
          GMESSAGE=SVMESSAGE
      Endif
      If OK = 2
         Gosub RECH_TARIF_TRSP
      Endif
      OK = 1
   Endif
Endif

Return

#########################################################################
$INIMOD
# Raz des variables utilisées pour la maj des mvts clients et de l'encde client
Raz WCDEHT, WCDETTC, WLIVTTC

Raz WSALSTOSTU : # Gestion des signatures

  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée.
  If [M]CFMFLG = 1 Then
    # Raz du no commande de l'entête livraison s'il y en a plusieurs
    If [F:SDH]SOHNUM <> ""
       For I=0 To [M:SDH1]NBLIG-1
          If [M:SDH1]XSOHNUM(I) <> "" & [M:SDH1]XSOHNUM(I) <> [F:SDH]SOHNUM
             Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
             Break
          Endif
       Next I
       #VPO 21/04/09 50583
       #If sum([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1)) = ""
       #CPO 68235
       #If max([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1)) = ""
       If ([M:SDH1]NBLIG-1 >= 0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) = "")
          Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
       Endif
    # Maj du no commande dans l'entête livraison s'il n'y en a qu'une
    Else
       For I=0 To [M:SDH1]NBLIG-1
          If [M:SDH1]XSOHNUM(I) <> ""
             If [F:SDH]SOHNUM = ""
                [F:SDH]SOHNUM = [M:SDH1]XSOHNUM(I)
                [M:SDH0]SOHNUM= [M:SDH1]XSOHNUM(I)
             Elsif [F:SDH]SOHNUM <> [M:SDH1]XSOHNUM(I)
                Raz [F:SDH]SOHNUM, [M:SDH0]SOHNUM
                Break
             Endif
          Endif
       Next I
    Endif
  Endif

  #[F:SDH]WEU   = [M]XWEU
  [F:SDH]LINNBR = [M]NBLIG

  # Chargement adresses libres
  Gosub CHARGEADR From SUBSDHB

  If [F:SDH]SCO <> 2 & dim([M:SDH0]XBPCLOC)>0 [F:SDH]BPCLOC = [M:SDH0]XBPCLOC Endif

  # Chargement des textes
  Gosub INITXC

  Gosub CHARGENTETE

  # Tax by document - before VALTTC call
  # If func AFNC.ACTIV("LTA") & GLOCUSATAX   # 106867.o
  If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
    GTAXBYDOC = 1
  Endif

  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée. Sinon les allocations ne sont pas à remettre en cause.
  If [M]CFMFLG = 1 Then
    # --- Valorisation TTC (idem calcul facture)
    # 101874 : V9 : Taxe code control
    Gosub INIVALTTC
    If GOK=0 : Return Endif
    # 101874
  Endif
Return

#########################################################################
$INIMOD_LIG
Local Shortint NOL

NOL = nolign-1
# Alimentation des zones de la ligne de livraison
Gosub CHARGESDD From SUBSDHB
Return

#########################################################################
$MODIF

#--- Bug 74039
#--- On regarde s'il y a des enregistrements colisage pour ne pas
#--- recalculer le nombre de colis s'il n'y en a pas
Local Integer WSPD


  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée.
  If [M]CFMFLG = 1 Then
    WSPD=0
    Filter [SPD] Where VCRTYP=4 & VCRNUM=[F:SDH]SDHNUM
    Read [SPD] First
    If !fstat WSPD=1 Endif
    Filter [SPD]
    #---
    #----------------------------------------------------------------#
    # Modification des enregistrements sans SVCRVAT et SVCRFOOT      #
    #----------------------------------------------------------------#
    Call UPD_VALORISATION ("M","SDH") From TRTVENFACC
    If GOK<1 Return Endif

    # Bug 70830
    If (dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2) & find(36, [M:SDH1]VCRTYPORI(0..[M:SDH1]NBLIG-1))
      If !clalev([F:SCO])  Local File SCOHEAD     [SCO]   Endif
    Endif
    # Bug 70830
    Gosub MODIF From TABLEAUX    : # Enregistrement des lignes
    If GOK<1 : Return : Endif    : # Propagation erreur

    #--- Bug 71298
    #--- Bug 74039
    #If [F:SDH]PACNBR>0
    If [F:SDH]PACNBR>0 & WSPD>0
    #---
      Local Integer  LPACNBR, LPACFLG, LRET
      Local Decimal  LNETWEI, LGROWEI, LVOL
      Local Char     LWEU, LVOU

      Raz GPE                         # hcb 76848
      GPOINT = "MAJ_COLISAGE"         # hcb 76848
      Gosub  ENTREE From EXEFNC       # hcb 76848
      If GPE =  0                     # hcb 76848
        Call COLISAGE_ORIGINE([F:SDH]STOFCY,4,[F:SDH]SDHNUM,LPACNBR,LPACFLG,LNETWEI,LGROWEI,LWEU,LVOL,LVOU,0,LRET) From FUNPKD
        If GOK = 0 | LRET <> 0
          GMESSAGE=mess(1,137,1) : Return
        Endif
        # réécriture entete livraison
        [F:SDH]PACFLG = LPACFLG
        [F:SDH]PACNBR = LPACNBR
        [F:SDH]NETWEI = LNETWEI
        [F:SDH]GROWEI = LGROWEI
        [F:SDH]VOL    = LVOL
        If [F:SDH]VOU = ""
          [F:SDH]VOU = LVOU
        Endif
        Rewrite [SDH]
      Endif                           # hcb 76848
    Endif
    #---

    #----------------------------------------------------------------#
    # ACA - Modification des enr. analytiques des elts de facturation#
    #----------------------------------------------------------------#
    [M:SIHV]VCRTYP=2 : [M:SIHV]NUM=[F:SDH]SDHNUM
    Gosub CREMOD_DIE_FOOT From SUBSIHV
    If GOK < 1 : Return : Endif

    # Issue 117773 - 2016-07-27 by ERMIL : Check for valid invoice elements for SST prior to commit and making calls
    If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2
      Call VALIDATE_INV_ELEM From TRTTAXUSA
      If GERR=1 : GOK = 0 : Return : Endif
    Endif

    # Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
    # Detail local tax data
    # If func AFNC.ACTIV("LTA") & GLOCUSATAX   # 106867.o
    #If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
    #  Gosub CREMOD_LTV From TRTTAXSST   # 106867.n
    #  # Gosub CREMOD_LTV From TRTTAXUSA   # 106867.o
    #  If GOK < 1 : Return : Endif
    #Endif

    # La livraison est-elle issue de bons de préparation ?
    For [PRH]PRH1 Where STOFCY=[F:SDH]STOFCY & DLVFLG=3 & SDHNUM=[F:SDH]SDHNUM
      Raz I
      For [PRE]PRE0 Where PRHNUM=[F:PRH]PRHNUM & FLGANN=0
        # Il y a au moins une ligne non annulée sur le BP
        I+=1 : Break
      Next
      Readlock [PRH] Curr
      If fstat = 1
        GOK=-1 : GLOCK="$STOPREH"-[F:PRH]PRHNUM : Break
      Elsif fstat
        GOK=0  : Call RSTA ("PRH",[F:PRH]PRHNUM) From GLOCK : Break
      Endif
      # S'il n'y a pas de ligne non annulée
      # Le BP devient annulé, suppression du no de livraison
      If I=0
        [F:PRH]DLVFLG = 4
        [F:PRH]SDHNUM = ""
        Rewrite [PRH]
        If fstat GOK=0 : Call FSTA("PRH") From GLOCK : Break : Endif
      Endif
    Next
    If GOK<1 Return Endif
  Endif

  # Maj sf si livraison intra-société
  # Maj sf si livraison pour sous-traitance (Bug 52920)

  # X3-1152 : Non invoiceable deliveries
#  If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) &  !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
  If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) &  !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
&   & !([M:SDH0]SDHCAT=4) # X3-88913 (LCC 18/05/18) Customer credit limit is doubling the amount
  # X3-1152 : Non invoiceable deliveries

    # Maj mouvement client (en-cours livraison)
    Local  Char  WSENS
    WSENS = "+"
    # Bug 68017 : Pour éviter les pbs d'arrondi, on ajoute le mnt total de la livraison
    WLIVTTC=[F:SDH]DLVATI
    #    If WLIVTTC < 0
    #       WLIVTTC = (-1)*WLIVTTC
    #       WSENS   = "-"
    #    Endif
    # Bug 68017
    If val(func AFNC.PARAM("ZVPCONCRED","")) = 1 or GZPRHSOH = 0 Then     # 06.317.883.new
      Call MAJMVC ([F:SDH]BPCORD, [F:SDH]CUR, [F:SDH]CHGTYP, 0, [F:SDH]SHIDAT, [F:SDH]SDHNUM, [F:SDH]SALFCY,
&                 0, WLIVTTC, WSENS, "O", "", [F:SDH]LND) From TRTBPMVT
    Endif                                                                 # 06.317.883.new
    If GOK<1 Return Endif
  Endif

  #If dim(WTABPACSEQ) > 0 & WTABPACSEQ(0) <> 0
  #    Gosub VERIF_COLIS : If GOK<1 Return Endif
  #    Local Integer WPACFLG
  #    If [M:SDH2]PACNBR=0 WPACFLG=1 Else WPACFLG=2 Endif
  #    If YPACNBR<>[M:SDH2]PACNBR
  #        Update [SDH] Where SDHNUM=[M:SDH0]SDHNUM With PACNBR=[M:SDH2]PACNBR, PACFLG=WPACFLG, GROWEI=[M:SDH2]GROWEI, VOL=[M:SDH2]VOL
  #        If fstat GOK=0 : Call FSTA("SDH") From GLOCK : Return : Endif
  #    Endif
  #    Raz WTABPACSEQ, WTABNETWEI
  #Endif

  # Maj des statistiques
  #Call VALSTA("SDH",1) From SUBPS2
  #If GOK < 1 : Return : Endif

  Gosub DEVERROU_SOH
  Gosub DEVERROU_PRH  #MAE, LIV_BP
  If dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2
    Gosub DEVERROU_REO
    Gosub DEVERROU_STA
  Endif
  # Issue X3-64479/161959 - 2019-10-16 by MUARN : delock task
  Gosub DEVERROU_JTT

  # 85785
  ##--CPO for RMA Issue 75115 Digital signature of shipments and customer returns
  ## ----------------------------------------------------------- #
  ## Digital signature of shipments and customer returns         #
  ## ----------------------------------------------------------- #
  #If func AFNC.ACTIV("DKS") & func AFNC.PARAM("PORDKS",[F:SDH]CPY)="2"
  #  Gosub DIGSIGN
  #Endif
  ## ----------------------------------------------------------- #

  # -------------------------------------------------
  # Issue X3-31898 - 2017-11-17 by FGR : BEGIN
  Gosub PJM_TECALLITM
  If GOK < 1 : Return : Endif
  # Issue X3-31898 - 2017-11-17 by FGR : END
  # -------------------------------------------------

  #--CPO 79343
  If GSDHSUPPLIGDSP>0
    Call MESSAGE(mess(251,191,1)) From GESECRAN
    Raz GSDHSUPPLIGDSP
  Endif
  #--/CPO
Return

# ---------------------------------------------------------------- #
# Des lignes de colis ont été supprimées                           #
# --> Il faut supprimer ttes les entêtes colis sans ligne          #
# --> Il faut renuméroter les colis si des colis ont été supprimés #
# ---------------------------------------------------------------- #
# A supprimer en 150
# -------------------
$VERIF_COLIS
Local Integer WI, WPACSEQ, J
Local Decimal WPCKWEI, WVOL

Raz WPACSEQ
For WI=0 To YPACNBR-1
    # -------------------------- #
    # Vérification d'un colis    #
    # -------------------------- #
    # Lecture de l'entête colis à traiter
    Readlock [SPH] SPH0=4;[F:SDD]SDHNUM;WTABPACSEQ(WI)
    If fstat = 1
        GOK=-1 : GLOCK="$SPACK"-[F:SDD]SDHNUM-num$(WTABPACSEQ(WI)) : Break
    Elsif fstat
        GOK=0  : Call RSTA ("SPH",[F:SDD]SDHNUM-num$(WTABPACSEQ(WI))) From GLOCK : Break
    Endif
    # On regarde s'il reste des détails pour le colis
    Filter [SPD] Where VCRTYP=4 & VCRNUM=[F:SDH]SDHNUM & PACSEQ=WTABPACSEQ(WI)
    Read [SPD]SPD0 First
    If fstat
        # Il n'y a plus de détails colis : Suppression du colis
        WPCKWEI=[F:SPH]PCKWEI : WVOL=[F:SPH]VOL
        Gosub MAJ_SDHCOLIS : If GOK<1 Break Endif
        Delete [SPH]
        If fstat GOK=0 : Call FSTA("SPH") From GLOCK : Break : Endif
    Else
        # Il reste des détails colis : Modification du poids et renumérotation si nécessaire
        WPACSEQ+=1
        If WTABNETWEI(WI)<>0 [F:SPH]NETWEI-= WTABNETWEI(WI) Endif
        If WPACSEQ < [F:SPH]PACSEQ
            # Un colis a été supprimé : Il faut renuméroter le colis et ses lignes
            J=instr(1,[F:SPH]PACNUM, format$("N0:4",[F:SPH]PACSEQ))
            If J>1
                [F:SPH]PACNUM= left$([F:SPH]PACNUM, J-1)+format$("N0:4",WPACSEQ)
            Else
                [F:SPH]PACNUM= format$("N0:4",WPACSEQ)
            Endif
            # Recherche de tous les détails colis rattachés à la ligne de livraison
            Filter [SPD] Where VCRTYP=4 & VCRNUM=[F:SPH]VCRNUM & PACSEQ=[F:SPH]PACSEQ Order By Key SPD0
            For [SPD]
                Readlock [SPD] Curr
                If fstat = 1
                    GOK=-1 : GLOCK="$SPACKD"-[F:SPD]VCRNUM-num$([F:SPD]PACSEQ)-num$([F:SPD]VCRLIN) : Break
                Elsif fstat
                    GOK=0  : Call RSTA ("SPD",[F:SPD]VCRNUM-num$([F:SPD]PACSEQ)-num$([F:SPD]VCRLIN)) From GLOCK : Break
                Endif
                [F:SPD]PACNUM = [F:SPH]PACNUM
                [F:SPD]PACSEQ = WPACSEQ
                Rewrite [SPD]
                If fstat GOK=0 : Call FSTA("SPD") From GLOCK : Break : Endif
            Next
            If GOK<1 Break Endif

            [F:SPH]PACSEQ = WPACSEQ
        Endif
        Rewrite [SPH]
        If fstat GOK=0 : Call FSTA("SPH") From GLOCK : Break : Endif
    Endif
Next
Filter [SPD]
Return
# ------------------------------------------------------ #
# Maj des données de la livraison concernant le colisage #
# ------------------------------------------------------ #
# A supprimer en 150
# -------------------
$MAJ_SDHCOLIS

[M:SDH2]PACNBR-=1
# Décrémentation poids net de la livraison
If [F:SPH]WEU <> "" & [F:SDH]WEU <> ""
    If [F:SPH]WEU <> [F:SDH]WEU
        Call SCONV_TCO([F:SPH]WEU,[F:SDH]WEU,WPCKWEI) From TRTVENQTE
    Endif
    [M:SDH2]GROWEI-=WPCKWEI
Endif
# Décrémentation volume de la livraison
If [F:SPH]VOU <> ""
    If [F:SDH]VOU="" [F:SDH]VOU=[F:SPH]VOU Endif
    If [F:SPH]VOU <> [F:SDH]VOU
        Call SCONV_TCO([F:SPH]VOU,[F:SDH]VOU,WVOL) From TRTVENQTE
    Endif
    [M:SDH2]VOL-=WVOL
Endif

Return

#########################################################################
$APRES_MOD
Local Char TBPAR(10)(1..50),TBVAL(30)(1..50)

# Issue X3-69499 - 2018-04-19 by TS
# Si suite à des supressions de lignes, la livraison devient validée,
# il faut appeler le traitement de validation de la livraison
If [F:SDH]CFMFLG=1 & sum([M:SDH1]LINCFMFLG)=[M:SDH1]NBLIG*2
  Local Char PADMIN
  Call OUVRE_TRACE(mess(34,191,1)) From LECFIC
  # Récupération paramètre administrateur stock
  Call PARAMUTIL("STOADMIN",PADMIN,"","") From SUBAUS
  GSTOADMIN = val(PADMIN)
  Call TEMPON("V") From GESECRAN
  Call VALIDATION([M:SDH0]SDHNUM) From TRTVENLIVV
  Call TEMPOFF From GESECRAN
  Call GLOBVAR([M:SDH0]SALFCY,"VEN") From TRTX3
  Call FERME_TRACE From LECFIC
  #RICAR 15/12/2015 SAM #113194 - Begin
  If [F:SDH]CFMFLG <> 2 | GOK = 0
  #RICAR 15/12/2015 SAM #113194 - End
    Call LEC_TRACE From LECFIC
  Else
    #BRBAN 08/07/2014 SAM #93745
    GTRACE = ""
  Endif
Endif
# End issue X3-69499

  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée.
  If [M]CFMFLG = 1 Then
    If ([F:SDH]NPRFLG=2 & WSLTNPRFLG=2) | ([F:SDH]NDEFLG=2 & WSLTDOCFLG=2)
       Gosub SET_CLE From GOBJSUB
       CLECUR = 1
    Endif
    If !GIMPORT & !GWEBSERV
       #-----impression bon de prepa livraison -----#
       If [F:SDH]NPRFLG=2 & WSLTNPRFLG=2 & [F:SDH]PRNNPR<>2
          Call ETAT(WSLTNPRNAM,"GESSDH",TBPAR,TBVAL) From ETAT
       Endif
       Raz TBPAR, TBVAL
       #-----impression bon de livraison -----#
       If [F:SDH]NDEFLG=2 & WSLTDOCFLG=2 & [F:SDH]PRNNDE<>2
          # Issue X3-242198 - 2021-05-11 by SR : Save the previous value of REPORT1
          Local Char  WREPORT1(GLONARP) : WREPORT1 = [L]REPORT1
          If [M:SDH0]DOCNAM<>""
             [L]REPORT1=[M:SDH0]DOCNAM
          Elsif WSLTDOCNAM<>""
             [L]REPORT1=WSLTDOCNAM
          Endif
          Call ETAT([L]REPORT1,"GESSDH",TBPAR,TBVAL) From ETAT
          # Issue X3-242198 - 2021-05-11 by SR : Restore the previous value of REPORT1
          [L]REPORT1 = WREPORT1
       Endif
    Endif
  Endif
  # Maintenant, on fait toujours un gosub RELIT
  Gosub RELIT From GOBJSUB
  [M:SDH0]SDHNUM = [F:SDH]SDHNUM

  #If ([F:SDH]NPRFLG=2 & WSLTNPRFLG=2) | ([F:SDH]NDEFLG=2 & WSLTDOCFLG=2)
  #   Gosub RELIT From GOBJSUB
  #   [M:SDH0]SDHNUM = [F:SDH]SDHNUM
  #Else
  #   Gosub LIENS From TABLEAUX
  #   Affzo [M:SDH1]1-99
  #   Affzo [M:SDH2]20
  #   # Remplissage des boites de picking
  #   Gosub REMPBOX From SUBSDHC
  #Endif

  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée.
  If [M]CFMFLG = 1 Then
    # Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
    Gosub RECALC_SST
    # 78411 Sage Exchange
    If func AFNC.ACTIV("SEPP")
      Gosub SEPP_SDH_MOD From SEPPLIB2 #122614 - JOBRO - rework of transaction mgmt
#122614 - JOBRO - rework of SE transaction management
#      If func SEPPLIB.SEPP_DOC([M:SDH2]PTE)
#        Call AUTH_CHK(4,[M:SDH0]SDHNUM,GERR,GMESSAGE) From SEPPLIB
#        If GERR : GOK=0 : Return : Endif
#        If !func SEPPCDT.SEPP_OK(4,[M:SDH0]SDHNUM,1)
#          Call CALL_SEAUTH(4,[M:SDH0]SDHNUM) From TRTSEAUTH
#        Endif
#      Elsif func SEPPCDT.SEPP_OK(4,[M:SDH0]SDHNUM,1)
#        Local Integer SERR
#        Local Char    SEMESSAGE(150)
#        Call VOID_ALL(4,[M:SDH0]SDHNUM,SERR,SEMESSAGE) From SEPPLIB
#        If SERR : Call ERREUR (SEMESSAGE) From GESECRAN : Endif
#      Endif
#122614 - JOBRO - rework of SE transaction management
    Endif
  Endif

Return

#########################################################################
$VERF_ANU
# Dde de réallocation des commandes
GALLORD=GRSTALLORD
If GRSTALLORD = 3 & sum([M:SDH1]OALQTYSTU) <> 0
    GALLORD=1 : Call OUINON(mess(132,191,1), GALLORD) From GESECRAN
Endif

# Suppression impossible si livraison validée
If [M:SDH1]CFMFLG=2
   GERR=1 : GMESSAGE=mess(41,192,1) : OK=0
# Issue X3-69499 - 2018-05-15 by TS
Elsif [M:SDH1]CFMPAR=2
   GERR=1 : GMESSAGE=mess(559,192,1) : OK=0
# End issue X3-69499
Endif
# --> ce document est associé à une proforma
If [F:SDH]PRFNUM <> ""
   GERR=2 : GMESSAGE=mess(106,191,1)-[F:SDH]PRFNUM
Endif

# 101090 - Can't delete shipment if BOL exists
If dim([M:SDH2]BOLNUM)>0 & [M:SDH2]BOLNUM<>""
  GERR=1 : GMESSAGE=func AFNC.MES1(mess(8,2086,1),[M:SDH2]BOLNUM) : OK=0
Endif

# ACA (2009-06-02) Bug 54880 : Warning perte d'élément "1ere"
# Issue X3-194241 - 20200902 by LD
# Error message when deleting a delivery having more than 250 lines
#Local Char SOHNUMS(GLONVCR)(255) : # Tableau contenant les SOHNUM de cette livraison
Local Char SOHNUMS(GLONVCR)(dim([M:SDH1]XSOHNUM)) : # Tableau contenant les SOHNUM de cette livraison
# End issue X3-194241 - 20200902 by LD
Local Integer ISDD, ISOH,ISOH2 : ISOH=0
#For ISDD = 0 To [M:SDH1]NBLIG  : # SAM 120871
For ISDD = 0 To [M:SDH1]NBLIG-1 : # SAM 120871
    # Issue X3-194241 - 20200902 by LD
    # Error message when deleting a delivery having more than 250 lines
    #If find([M:SDH1]XSOHNUM(ISDD), [L]SOHNUMS )
    If find([M:SDH1]XSOHNUM(ISDD), [L]SOHNUMS (0..[M:SDH1]NBLIG-1)) = 0
    # End issue X3-194241 - 20200902 by LD
        SOHNUMS(ISOH) = [M:SDH1]XSOHNUM(ISDD)
        ISOH = ISOH+1
    Endif
Next ISDD
For ISOH2=0 To ISOH-1
    If func SUBSFIT.FCTRL1STLIV(SOHNUMS(ISOH2)) = 0
        GERR=1: OK=0
        Break
    Endif
Next ISOH2

Return
#########################################################################
$ANNULE
Local  Decimal  WCDEHT         : # En commande HT
Local  Decimal  WCDETTC        : # En commande TTC
Local  Decimal  WLIVTTC        : # En livraison TTC
Local  Char     SVGSOHNUM(GLONVCR)
Local  Integer  WRET
Local  Decimal  WSALSTOSTU     : # Gestion des signatures : Qté Encde client
Raz WSALSTOSTU

#----------------------------------------------------------------#
# Suppression des enregistrements sans SVCRVAT et SVCRFOOT       #
#----------------------------------------------------------------#
Call UPD_VALORISATION ("A","SDH") From TRTVENFACC
If GOK<1 Return Endif
# Suppression du colisage
If [F:SDH]PACNBR>0
   WRET=0
   Call SUP_COLISAGE(4,[F:SDH]SDHNUM,0,"A",WRET) From STKPREPA
   If WRET<>0 GOK=0 Endif
Endif

#----------------------------------------------------------------#
# ACA - Suppression des enr. analytiques des elts de facturation #
#----------------------------------------------------------------#
[M:SIHV]VCRTYP=2 : [M:SIHV]NUM=[F:SDH]SDHNUM
Gosub ANU_DIE_FOOT From SUBSIHV
If GOK < 1 : Return : Endif

# Detail local tax data
# If func AFNC.ACTIV("LTA") & GLOCUSATAX   # 106867.o
If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
  Gosub CREMOD_LTV From TRTTAXSST   # 106867.n
  # Gosub CREMOD_LTV From TRTTAXUSA   # 106867.o
  If GOK < 1 : Return : Endif
Endif

# 78411 Sage Exchange
If func AFNC.ACTIV("SEPP") & func SEPPLIB.SEPP_DOC([F:SDH]PTE)
  Call TRANSFER(4,[F:SDH]SDHNUM,2,[F:SDH]SOHNUM,WRET) From SEPPLIB
  If WRET: Raz GOK : Return : Endif
Endif

#------------------------------------#
# supression des textes associées    #
#------------------------------------#
If left$([F:SDH]PRPTEX1,3)="SDH"
   Call SUP_CLOB([F:SDH]PRPTEX1,WRET) From TRTX3TEX
Endif
If left$([F:SDH]PRPTEX2,3)="SDH"
   Call SUP_CLOB([F:SDH]PRPTEX2,WRET) From TRTX3TEX
Endif

If left$([F:SDH]SDHTEX1,3)="SDH"
   Call SUP_CLOB([F:SDH]SDHTEX1,WRET) From TRTX3TEX
Endif
If left$([F:SDH]SDHTEX2,3)="SDH"
   Call SUP_CLOB([F:SDH]SDHTEX2,WRET) From TRTX3TEX
Endif

# Raz des variables utilisées pour la maj des mvts clients et de l'encde client
Raz WCDEHT, WCDETTC, WLIVTTC

#--- Issue 110571
# La livraison est-elle issue de bons de préparation ?
For [PRH]PRH1 Where STOFCY=[F:SDH]STOFCY & DLVFLG=3 & SDHNUM=[F:SDH]SDHNUM
   For [PRE]PRE0 Where PRHNUM=[F:PRH]PRHNUM & FLGANN=1
      # Il y a au moins une ligne annulée sur le BP
      Readlock [PRH] Curr
      If fstat = 1
         GOK=-1 : GLOCK="$STOPREH"-[F:PRH]PRHNUM : Break
      Elsif fstat
         GOK=0  : Call RSTA ("PRH",[F:PRH]PRHNUM) From GLOCK : Break
      Endif
      # Le BP devient annulé
      [F:PRH]DLVFLG = 4
      Rewrite [PRH]
      If fstat GOK=0 : Call FSTA("PRH") From GLOCK : Break : Endif
      Break
   Next
Next
If GOK<1 Return Endif
#---

#--- Bug 89931
# L'action VALLIG sera appelée pour chaque ligne avec SIGN=-1
Gosub ANNULE From TABLEAUX : # Effacement des lignes
If GOK<1 : Return : Endif
#---

# La livraison est-elle issue de bons de préparation ?
For [PRH]PRH1 Where STOFCY=[F:SDH]STOFCY & DLVFLG=3 & SDHNUM=[F:SDH]SDHNUM
   Raz I
   For [PRE]PRE0 Where PRHNUM=[F:PRH]PRHNUM & FLGANN=1
      # Il y a au moins une ligne annulée sur le BP
      I+=1 : Break
   Next
   Readlock [PRH] Curr
   If fstat = 1
      GOK=-1 : GLOCK="$STOPREH"-[F:PRH]PRHNUM : Break
   Elsif fstat
      GOK=0  : Call RSTA ("PRH",[F:PRH]PRHNUM) From GLOCK : Break
   Endif
   # S'il n'y a pas de ligne annulée --> BP redevient livrable
   # Sinon                           --> BP devient   annulé
   If I=0
      [F:PRH]DLVFLG = 2
   Else
      [F:PRH]DLVFLG = 4
   Endif
   [F:PRH]SDHNUM = ""
   [F:PRH]PACFLG = 1
   [F:PRH]PACNBR = 0
   Rewrite [PRH]
   If fstat GOK=0 : Call FSTA("PRH") From GLOCK : Break : Endif
Next
If GOK<1 Return Endif

#--- Bug 89931
# L'action VALLIG sera appelée pour chaque ligne avec SIGN=-1
#Gosub ANNULE From TABLEAUX : # Effacement des lignes
#If GOK<1 : Return : Endif
#---

# Maj sf si livraison intra-société
# Maj sf si livraison pour sous-traitance (Bug 52920)

# X3-1152 : Non invoiceable deliveries
#If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) &  !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
If !([F:SDH]BETFCY=2 & [F:SDH]BETCPY=1) &  !(dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2)
&   & !([M:SDH0]SDHCAT=4) # X3-88913 (LCC 18/05/18) Customer credit limit is doubling the amount
# X3-1152 : Non invoiceable deliveries
    # Maj mouvement client (en-cours livraison)
    WLIVTTC = (-1)*WLIVTTC
    If val(func AFNC.PARAM("ZVPCONCRED","")) = 1 or GZPRHSOH = 0 Then     # 06.317.883.new
      Call MAJMVC ([F:SDH]BPCORD, [F:SDH]CUR, [F:SDH]CHGTYP, 0, [F:SDH]SHIDAT, [F:SDH]SDHNUM, [F:SDH]SALFCY,
&                 0, WLIVTTC, "-", "O", "",[F:SDH]LND) From TRTBPMVT
    Endif                                                                 # 06.317.883.new
    If GOK<1 Return Endif
Endif

  # ------------------------------------------
# Issue X3-216149 - 2020-09-29 by FGR : BEGIN done in VALLIG. Not needed here
#  # Issue X3-31898 - 2017-11-17 by FGR : BEGIN
#  #If func ASYRFNC.ACTIV("PJM") Then         # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
#  If func ASYRFNC.ACTIV("PJM") and 0=1 Then  # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
#    Local Integer IPJMRET
#    Local Integer ZF
#
#    If dim(ZTECALLITM) < 0 Then
#      Local Instance ZTECALLITM Using C_TECALLITM
#    Endif
#    If ZTECALLITM = null Then
#      ZTECALLITM = NewInstance C_TECALLITM AllocGroup null
#    Endif
#    For ZF = 0 To [M:SDH1]NBLIG-1
#    # COMMENTS TO EXPLAIN
##    IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([F:SDD]PJT, [F:SDD]ITMREF, [F:SDD]STU,
##&                                          ([F:SDD]QTYSTU * SIGN),   # Delivered qty when delivery NOT validated
##&                                          ([F:SDD]QTYSTU * SIGN))   # Delivered qty when delivery validated
##&                                          ([F:SDD]OALQTYSTU * SIGN) # Order qty alloc. STU
##&                                         )
#      Local Decimal NODLQTY
#      Local Decimal DLVQTY
#
#      NODLQTY = 0
#      DLVQTY = 0
#      # Issue X3-69499 - 2018-02-14 by TS
#      #If [M:SDH1]CFMFLG = [V]CST_AYES Then
#      If [M:SDH1]CFMFLG=[V]CST_AYES | [M:SDH1]LINCFMFLG(ZF)=[V]CST_AYES Then
#      # End issue X3-69499
#        # Delivery validated
#        NODLQTY = [M:SDH1]QTYSTU(ZF) * -1
#        DLVQTY = 0
#      Else
#        # Delivery NOT validated
#        NODLQTY = [M:SDH1]QTYSTU(ZF)
#        DLVQTY = 0
#      Endif
#      # Issue X3-64479/164829 - 2019-10-15 by MUARN : use QTYSTU instead of OALQTYSTU
#      # Issue X3-216149 - 2020-09-29 by FGR : BEGIN
##      IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([M:SDH1]DPJT(ZF), [M:SDH1]ITMREF(ZF), [M:SDH1]STU(ZF),
##&                                            (NODLQTY * -1),
##&                                            (DLVQTY * -1),
##&                                            ([M:SDH1]QTYSTU(ZF) * -1)
##&                                           )
#      If [M:SDH0]SDHCAT <> 4 Then
#        IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([M:SDH1]DPJT(ZF), [M:SDH1]ITMREF(ZF), [M:SDH1]STU(ZF),
#&                                              (NODLQTY * -1),
#&                                              (DLVQTY * -1),
#&                                              0
#&                                             )
#      Else
#        IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([M:SDH1]DPJT(ZF), [M:SDH1]ITMREF(ZF), [M:SDH1]STU(ZF),
#&                                              (NODLQTY * -1),
#&                                              (DLVQTY * -1),
#&                                              ([M:SDH1]QTYSTU(ZF) * -1)
#&                                             )
#      Endif
#      # Issue X3-216149 - 2020-09-29 by FGR : END
#      If IPJMRET >= [V]CST_AERROR Then
#        # TODO FLORENT ICI prevoir gestion erreur
#        Break
#      Endif
#    Next ZF
#  Endif
#  # Issue X3-31898 - 2017-11-17 by FGR : END
#  # ------------------------------------------
# Issue X3-216149 - 2020-09-29 by FGR : END

  # Issue X3-64479/73574 - 2019-11-19 by MUARN : modification allocation of tasck
  Gosub PJM_TECALLITM
  If GOK < 1 : Return : Endif

# Maj des statistiques
#Call VALSTA("SDH",-1) From SUBPS2
#If GOK < 1 : Return : Endif

Return

#########################################################################
$AP_ANNULE

Return

#########################################################################
$VALLIG
#----------------------------------------------------------------#
# En création     : TRTLIG = "C" et SIGN = +1 (après le write)   #
# En modification : TRTLIG = "M" et SIGN = -1 (avant le rewrite) #
#                                   SIGN = +1 (après le rewrite) #
# En annulation   : TRTLIG = "A" et SIGN = -1 (avant le delete)  #
#----------------------------------------------------------------#
Local Date    WDAT, WDTE
Local Char    WMAJ, WNUM, WFCY(GLONFCY)
Local Integer WOPT, WWIN, WTYP
Local Decimal WQTE, WQTY, WSHT, WLIN, WSEQ
Local Integer NOL
# Gestion des signatures cdes
Local Integer WGALLORD : # FLAG réallocation des commandes
WGALLORD=GALLORD

NOL  = nolign-1
WMAJ = "C"        : # Création allocation
WWIN = 0          : # Inutilisé
WRET = 0          : # Code retour

If TRTLIG = "C"   Gosub VALLIGCRE Endif
If TRTLIG = "M"   Gosub VALLIGMOD Endif
If TRTLIG = "A"   Gosub VALLIGANN Endif
If GOK < 1 : Return : Endif

Local Integer WRETOUR
Local Char WNUMTEX (12)

If TRTLIG = "A"
    If left$([F:SDD]PRPTEX,3)="SDD"
        Call SUP_CLOB([F:SDD]PRPTEX,WRET) From TRTX3TEX
    Endif
    If left$([F:SDD]SDDTEX,3)="SDD"
        Call SUP_CLOB([F:SDD]SDDTEX,WRET) From TRTX3TEX
    Endif
    #----- Suppression comptes et sections de la ligne de commande -----#
    Call ENREG_ACCCCE(0,"","","","SDD",0,[F:SDD]SDHNUM,[F:SDD]SDDLIN,0,"","A") From TRTX3CPT
    If GOK<1  Return : Endif
    #-----
Elsif TRTLIG="M" & SIGN=-1
    # Cas particulier où on modifie le texte en le supprimant
    If [M:SDH1]SDDTEX(NOL)="" & left$([F:SDD]SDDTEX,3)="SDD"
        Call SUP_CLOB([F:SDD]SDDTEX,WRET) From TRTX3TEX
    Endif
    If [M:SDH1]PRPTEX(NOL)="" & left$([F:SDD]PRPTEX,3)="SDD"
        Call SUP_CLOB([F:SDD]PRPTEX,WRET) From TRTX3TEX
    Endif
Elsif (TRTLIG="C" | TRTLIG="M") & SIGN=+1
    #----- Ecriture des sections de la ligne de devis -----#
    Call ENREG_ACCCCE(nolign-1,"","","[M:SDH1]CCE","SDD",
&                     0,[F:SDD]SDHNUM,[F:SDD]SDDLIN,0,"",TRTLIG) From TRTX3CPT
    If GOK<1  Return : Endif
Endif

  # ------------------------------------------
  # Issue X3-31898 - 2017-11-17 by FGR : BEGIN
  #If func ASYRFNC.ACTIV("PJM") Then        # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
  #If func ASYRFNC.ACTIV("PJM") and 0=1 Then # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
  # Issue X3-64479/73568 - 2019-09-16 by MUARN : allocation transfer
  If func ASYRFNC.ACTIV("PJM") Then
    Local Integer IPJMRET
    If dim(ZTECALLITM) < 0 Then
      Local Instance ZTECALLITM Using C_TECALLITM
    Endif
    If ZTECALLITM = null Then
      ZTECALLITM = NewInstance C_TECALLITM AllocGroup null
    Endif
    # COMMENTS TO EXPLAIN
#    IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([F:SDD]PJT, [F:SDD]ITMREF, [F:SDD]STU,
#&                                          ([F:SDD]QTYSTU * SIGN),   # Delivered qty when delivery NOT validated
#&                                          ([F:SDD]QTYSTU * SIGN))   # Delivered qty when delivery validated
#&                                          ([F:SDD]OALQTYSTU * SIGN) # Order qty alloc. STU
#&                                         )
    Local Decimal NODLQTY
    Local Decimal DLVQTY

    NODLQTY = 0
    DLVQTY = 0
    # Issue X3-69499 - 2018-02-14 by TS
    #If [M:SDH1]CFMFLG = [V]CST_AYES Then
    # Issue X3-178684 - 2020-01-23 by MUARN : use [F] instead of [M] for LINCFMFLG
    If [M:SDH1]CFMFLG=[V]CST_AYES | [F:SDD]LINCFMFLG=[V]CST_AYES Then
    # End issue X3-69499
      # Delivery validated
      NODLQTY = [F:SDD]QTYSTU * -1
      DLVQTY = [F:SDD]QTYSTU
    Else
      # Delivery NOT validated
      NODLQTY = [F:SDD]QTYSTU
      DLVQTY = 0
    Endif
    # Issue X3-64479/164829 - 2019-10-15 by MUARN : use QTYSTU instead of OALQTYSTU
    # Issue X3-216149 - 2020-09-29 by FGR : BEGIN
#    IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([F:SDD]PJT, [F:SDD]ITMREF, [F:SDD]STU,
#&                                          (NODLQTY * SIGN),
#&                                          (DLVQTY * SIGN),
#&                                          ([F:SDD]QTYSTU * SIGN)
#&                                         )
    If [M:SDH0]SDHCAT <> 4 Then
      IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([F:SDD]PJT, [F:SDD]ITMREF, [F:SDD]STU,
&                                            (NODLQTY * SIGN),
&                                            (DLVQTY * SIGN),
&                                            0
&                                           )
    Else
      IPJMRET = fmet ZTECALLITM.SAL_ADD_LINE([F:SDD]PJT, [F:SDD]ITMREF, [F:SDD]STU,
&                                            (NODLQTY * SIGN),
&                                            (DLVQTY * SIGN),
&                                            ([F:SDD]QTYSTU * SIGN)
&                                           )
    Endif
    # Issue X3-216149 - 2020-09-29 by FGR : END
    If IPJMRET >= [V]CST_AERROR Then
      # TODO FLORENT ICI prevoir gestion erreur
    Endif
  Endif
  # Issue X3-31898 - 2017-11-17 by FGR : END
  # ------------------------------------------

# Maj des statistiques
#Call VALSTA("SDD",SIGN) From SUBPS2
#If GOK < 1 : Return : Endif
Return

#########################################################################
$AV_IMPRIME

# Positionnement sur le document du modèle d'édition
[L]AREPORT=[M:SDH0]DOCNAM

Return

#########################################################################
$AP_IMPRIME

Gosub RELIT From GOBJSUB

Return

####################################################################
$ABANDON
Local Integer WRETOUR : Raz WRETOUR
Local Char    WNUMTEX (12)

Gosub DEVERROU_SOH
Gosub DEVERROU_PRH    #MAE, LIV_BP
If dim([M:SDH0]SCO)>0 & [M:SDH0]SCO=2
   Gosub DEVERROU_REO
   Gosub DEVERROU_STA
Endif
# Issue X3-64479/161959 - 2019-10-16 by MUARN : delock task
Gosub DEVERROU_JTT

# Issue X3-64479 - 2019-04-05 by MUARN : Picking criteria
Raz [M:SCRW]

# Suppression des sorties stockées dans écran de travail STOSORW
Call DELSTOSORW(-1,0,"SDH1",[M:SDH0]STOFCY,WRETOUR) From STKSOR

Local Integer I

If GREP="D"
   If left$([M:SDH0]PRPTEX1,3)="SDH"
      Call SUP_CLOB([M:SDH0]PRPTEX1,WRET) From TRTX3TEX
   Endif
   If left$([M:SDH0]PRPTEX2,3)="SDH"
      Call SUP_CLOB([M:SDH0]PRPTEX2,WRET) From TRTX3TEX
   Endif
   If left$([M:SDH0]SDHTEX1,3)="SDH"
      Call SUP_CLOB([M:SDH0]SDHTEX1,WRET) From TRTX3TEX
   Endif
   If left$([M:SDH0]SDHTEX2,3)="SDH"
      Call SUP_CLOB([M:SDH0]SDHTEX2,WRET) From TRTX3TEX
   Endif
Endif
#VPO 21/04/09 50583
#If GREP="D" | sum([M:SDH1]XSOHNUM)<>""
#CPO 68235
#If GREP="D" | max([M:SDH1]XSOHNUM(0..[M:SDH1]NBLIG-1))<>""
If GREP="D" | ([M:SDH1]NBLIG-1>=0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) <> "")
   For I=0 To [M]NBLIG-1
      If GREP="D" | ([M:SDH1]XSOHNUM(I)<>"" & [M:SDH1]CREFLG(I)=0)
          If left$([M:SDH1]PRPTEX(I),3)="SDD"
             Call SUP_CLOB([M:SDH1]PRPTEX(I),WRET) From TRTX3TEX
          Endif
          If left$([M:SDH1]SDDTEX(I),3)="SDD"
             Call SUP_CLOB([M:SDH1]SDDTEX(I),WRET) From TRTX3TEX
          Endif
      Endif
   Next I
Endif

Call RAZ_CLOB From ACLOB

Actzo [M:SDH0]SDHNUM
#Gosub ETAT_ZONE

If GREP="C"
   Raz GREP
   Gosub REMPBOX From SUBSDHC
Endif

  Gosub PJM_TECALLITM_FREEGROUP  # Issue X3-31898 - 2017-11-17 by FGR
Return

#########################################################################
$FERME
#------------------------------------#
# Restitution des variables globales #
#------------------------------------#
GCONSDIA   = 0

# Bug 70949
# --- Restitution des écrans d'adresse à cause de la navigation -----#
If clalev([M:ADBT]) & clalev([M:ADB2])
  [M:ADB2]=[M:ADBT] : Close Local Mask [ADB2]
Endif
If clalev([M:ADBU]) & clalev([M:ADB3])
  [M:ADB3]=[M:ADBU] : Close Local Mask [ADB3]
Endif
# Bug 70949

GORITITCOL = 0
#-----
Gosub REST_GLOB From TRTX3GLOB
#-----
If GFONC1 ="GESSDH" : Raz GCREPARBOU : Endif

# SR 09.11 Demande 75817
If dim(GSTEP3)>0          Kill GSTEP3  : Endif

#--- Si on vient par tunnel des commandes
#    positionner mkstat qui permettra de forcer un réaffichage au retour du tunnel
If GFONC1 = "GESSOH" mkstat=GSTALIT : Endif
#-- effacement icone texte
If !GIMPORT : Call RESET_IMAGE (4) From GESECRAN : Endif

If dim(GSDHSUPPLIGDSP)>0 Kill  GSDHSUPPLIGDSP  Endif : #--CPO 79343 Afin d'afficher un message si suppr ligne et doc ori avec elts fact
If dim(G_PREV_DSPLIN)>0  Kill  G_PREV_DSPLIN : Endif : #--CPO 102340

#-- Appel l'état "PRTSCR"
If !GIMPORT & ! GWEBSERV : Call IMPSCR From ATRTX3 : Endif

# 101090 - Clean up the global variable
If dim(GBOLERR)>0 : Kill GBOLERR : Endif

  Gosub PJM_TECALLITM_FREEGROUP  # Issue X3-31898 - 2017-11-17 by FGR
Return

####################################################################
#    ETIQUETTES DE TRAITEMENTS                                     #
####################################################################

$VERIF

Local Shortint RES

  OK = 1
  # Issue X3-160406 - 2019-10-11 by SR : In all cases, all Customers must be active
  Raz RES
  Call CTLBPCSTA([M:SDH0]BPCORD,1,RES) From TRTVENCTL
  If RES = 1 : GERR=1 : OK=0 : Return : Endif
  Call CTLBPCSTA([M:SDH0]BPCINV,2,RES) From TRTVENCTL
  If RES = 1 : GERR=1 : OK=0 : Return : Endif
  # Issue X3-160406 - 2019-10-11 by SR : comment
  If GREP="D"
  # --> Ctrl particulier en dupli. pour l'euro : vérifier que ce n'est pas une devise "in"
      Call CONTDEV([M:SDH1]CUR,[M:SDH1]DLVDAT) From TRTDEV
      If mkstat GERR=1 : GMESSAGE : OK=0 : Return : Endif
  # Issue X3-160406 - 2019-10-11 by SR : already done above
  # --> Ctrl particulier en dupli. : Ctrl client commande inactif
  #     Car le client commande est non modifiable en dupli. : Pas de passage en action ctrl bpcord
  #    If [F:BPC]BPCNUM <> [M:SDH0]BPCORD
  #       Read [BPC]BPC0 = [M:SDH0]BPCORD
  #       If fstat Raz [F:BPC] : Endif
  #   Endif
  #    If [F:BPC]BPCSTA <> 2
  #        GERR=1 : GMESSAGE = mess(194,192,1)
  #        OK=0 : Return
  #    Endif
  # End issue X3-160406
      If [F:BPC]BPCNUM <> [F:BPC]BPCRSK
         Read [BPC]BPC0 = [F:BPC]BPCRSK
         If fstat Raz [F:BPC] : Endif
      Endif
      If [F:BPC]OSTCTL = 3
          GERR=1 : GMESSAGE = mess(195,192,1)
          OK=0 : Return
      Endif

      # Vérification que les articles sont actifs
      For I=0 To [M:SDH1]NBLIG-1
         Read [ITM]ITM0=[M:SDH1]ITMREF(I)
         If [F:ITM]ITMSTA = 6
            GERR=1 : GMESSAGE = [M:SDH1]ITMREF(I)-":"-mess(3,196,1)+" ("+mess([F:ITM]ITMSTA,246,1)+")"
            OK=0 : Break
         Endif
         # 89275 : Duplication cde et ctrl des prix
         If GDACLOK=1
             GNETMAR=1
             Call CTLNETPRI([M]BPCORD,[M]CHGTYP,[M]SHIDAT,[M]CUR,I) From TRTVENPRI
             If mkstat=2 OK=0 : Break Endif
             Call CTLPFM([M]CUR,[M]CPRPRI(I), I) From TRTVENPRI
             If mkstat=2 OK=0 : Break Endif
         Endif
         # 89275

      Next I
      GNETMAR=0 : # 89275
      If OK=0 Return Endif
  Endif

  # VPO 07/12/10 68435 verifier valeur Condition de paiement, Code escompte, Regime de taxe
  # VPO 01/03/11 71999 ameliorer message d'erreur
  If [M:SDH2]PTE<>""
      #Call CONTROLE("TPT","",[M:SDH2]PTE,"",RES) From CONTOBJ
      #If RES : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~PTE")+'"\'+GMESSAGE : Return : Endif
      #-- X3Suivi 71937 : Données par législation pour le Conditions de paiement
      #--CPO 71937 01/08/2013 Suite dev review
      Call CONTTPT([M:SDH2]PTE,GCURLEG,'','',[M:SDH0]SALFCY,'','') From SUBTPT
      If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~PTE")+'"\'+GMESSAGE : Return : Endif
      # FGR 22/07/2013 : X3SUIVI87923 (début)
      Call CTRL_PTE_SEPA_SDD([M:SDH2]PTE, GSOCIETE, [M:SDH2]BPCPYR) From TRTVENSDD
      If mkstat Then
        GERR = 1
        OK = 0
        GMESSAGE = mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~PTE")+'"\'+GMESSAGE
        Return
      Endif
      # FGR 22/07/2013 : X3SUIVI87923 (fin)
  Endif
  If [M:SDH2]DEP<>""
  #--71937 TABDEPAGIO
  mkstat = 0
      #Call CONTROLE("TDA","!",[M:SDH2]DEP,"",RES) From CONTOBJ
      #If RES : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~DEP")+'"\'+GMESSAGE : Return : Endif
      Call CONTTDA([M:SDH2]DEP,GCURLEG,"SDH2","DEP",[M:SDH0]SALFCY,"","") From SUBTDA
      If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~DEP")+'"\'+GMESSAGE : Return : Endif
      #--/CPO
  Endif
  If [M:SDH2]VACBPR<>""
      mkstat=0
      # 71937 : Multilégislation
      #Call CONTADI([M:SDH2]VACBPR,"1","") From SUBADI
      #If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~VACBPR")+'"\'+GMESSAGE : Return : Endif
      #Call CONTROLE("ADI","",[M:SDH2]VACBPR,"1",RES) From CONTOBJ
      #If RES : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~VACBPR")+'"\'+GMESSAGE : Return : Endif
      Call CONTTVB([M:SDH2]VACBPR,GCURLEG,"SDH2","VACBPR",[M:SDH0]SALFCY,"","") From SUBTVB
      If mkstat : GERR=1 : OK=0 : GMESSAGE=mess(32,126,1)-'"'+func AFNC.INTCLE("AMZ","SDH2~VACBPR")+'"\'+GMESSAGE : Return : Endif
      # 71937 : Multilégislation
  Endif

  # Contrôle de cohérence entre les quantités des lignes de livraison et
  # les quantités à sortir stockées dans STOSORW
  # Bug 59587 : Import livraison validée facturée : Pas de maj des stocks (Import à des fins statistiques)
  If [M:SDH1]CFMFLG=1 | (GIMPORT & [M:SDH1]INVFLG=1)
      Call CTLSTOSOR ("SDH1","QTYSTU",[M:SDH1]NBLIG,WRET) From STKECR
      If WRET<>0
         OK=0 : Return
      Endif
  Endif
  # Vérification des commandes en livraison commande complète
  Gosub VERIF_CDE_LIV
  If OK=0 Return Endif

  #--> Vérification que tous les axes entête ont bien été saisis (s'ils sont saisissables)
  If GHEADIE = 1 : # Axes entêtes saisissables (Initialisé par GETCPY)
     If dim([M]NBAXE)>0
        For nolign = 1 To GNBDIE
            If [M]CCE(nolign-1)="" & GOBLDIE(nolign)=2
               GERR=1 : GMESSAGE = mess(177,199,1) : OK = 0 : Break
            Endif
        Next nolign
     Endif
     If OK = 0 Return Endif
  Endif
  # X3-1152 : Non invoiceable deliveries
  If [M:SDH0]SDHCAT<>4
  # X3-1152 : Non invoiceable deliveries
    If !([M:SDH1]BETFCY = 2 & [M:SDH1]BETCPY <> 2) or GCTLBETFCY = 2 Then        # FGR 10/03/2015 : X3SUIVI23273
      #-- X3Suivi 81855 : Dépassement encours en validation de livraison --#
      # --> Contrôle En-cours autorisé atteint
      #-- Si encours calculé sans les commandes ou calculé avec les commandes et l'on traite une livraison directe --#
      If GOSTORD = 1 or (GOSTORD = 2 & [M:SDH0]SOHNUM="" and ([M:SDH1]NBLIG-1 >= 0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) = ""))
        If [F:BPC]OSTCTL =1 : #-- Encours Controlé
          Local Char  WMESS1 (250)
          Local Decimal WOST1
          # Issue X3-150122 - 20191017 by LD
          # A Subcontract delivery is a location change, it is not taken into account in credit calcul
          #WOST1 = [M]OST + [M]DLVATI
          WOST1 = [M]OST
          If [M:SDH0]SDHCAT<>3 WOST1 += [M]DLVATI Endif
          # Issue X3-150122 - 20191017 by LD
          If !GIMPORT & WOST1 > [M]OSTAUZ
            WMESS1 = mess(29,192,1)
            Call AVERTIR (WMESS1 , OK) From GESECRAN
            If OK=1 : OK=0 : Return : Endif
          Endif
        Endif
      Endif
    Endif
  # X3-1152 : Non invoiceable deliveries
  Endif
  # X3-1152 : Non invoiceable deliveries
  # verif faite que si livraison directe
  #VPO 21/04/09 50583
  #If [M:SDH0]SOHNUM="" and ([M:SDH1]NBLIG-1>=0 and sigma(0,[M:SDH1]NBLIG-1,[M:SDH1]XSOHNUM(indcum)) = "")
  #    If !GIMPORT & [M]OST + [M]DLVATI > [M]OSTAUZ
  #       Call AVERTIR (sum(mess(29,192,1),format$("N:9.2[ ]",num$([M]OSTAUZ)),[M]CUR), OK) From GESECRAN
  #       If OK=1 OK=0 : Return : Endif
  #    Endif
  #Endif

  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée. Sinon les allocations ne sont pas à remettre en cause.
  # Issue X3-69499 - 2018-02-14 by TS
  #If [M]CFMFLG = 1 Then
  If [M]CFMFLG<>2 & [M]CFMPAR<>2 Then
  # End issue X3-69499
    # Vérification s'il y a des commandes à réallouer
    GALLORD=GRSTALLORD
    If GREP="M" & GRSTALLORD = 3 Gosub VERIF_ORDALL : Endif
  Endif

  # Traitement des groupés si liv directe et au moins une ligne a été modifiée
  If [M]NBLIG<>0 & sum([M:SDH1]SOQSEQ)=0 & (sum([M:SDH1]UPDFLG)<>0 | [M:SDH1]NBLIG<>[F:SDH]LINNBR)
     OK=1
     If GGRPPRI = 3 & !GIMPORT
         SVMESSAGE=GMESSAGE
         Call OUINON(mess(61,196,1),OK) From GESECRAN
         GMESSAGE=SVMESSAGE
     Endif
     If GGRPPRI = 2 | OK = 2
        Call RECH_GROUPE("SDH") From TRTVENTAR
        Gosub RECALC_GROUPE From SUBSDHB
        Affzo [M:SDH1]1-99
     Endif
  Endif
  #--------------------------------------------------------#
  # Vérification qu'il y a au moins une ligne de livraison #
  #--------------------------------------------------------#
  If [M]NBLIG = 0
    GERR=1 : GMESSAGE=mess(61,199,1) :  OK=0   : Return
  Endif

  # FGR 02/12/2011 : X3SUIVI71065 (début)
  Call PJT_CONTROLE_HEAD_DETAIL("[M:SDH2]PJT", "[M:SDH1]DPJT") From TRTPJT
  If GERR <> 0 Then
    OK = 0
    Return
  Endif
  # FGR 02/12/2011 : X3SUIVI71065 (fin)

  #85785 * RMA * document amount cannot be negative
  If func PORLEGLIB.DIGSIGN([M:SDH0]STOFCY, "") & [M:SDH1]DLVINVATI<0
    GERR = 1: GMESSAGE = mess(00216,00191,1) : OK = 0 : Return
  Endif

  #   ------------------------------------------------------------- #
  #   Spécificité USA : Branchement du sous-pro de calcul des taxes #
  #   ------------------------------------------------------------- #
  # FGR 04/07/2014 : X3SUIVI91606 : Seulement si livraison non validée.
  If [M]CFMFLG = 1 Then
    #Call LECKUACT("KUA",WRET) From TRTX3
    # If GLOCUSATAX   # 106867.o
    If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2   # 106867.n
      If !GIMPORT & !GWEBSERV
        Call OUVRE_TRACE(mess(322,197,1)) From LECFIC
      Endif
      Call CLCTAXEUSA("SDH1", "2") From TRTTAXSST   # 106867.n
      # Call CLCTAXEUSA("SDH1", "2") From TRTTAXUSA   # 106867.o
      If !GIMPORT & !GWEBSERV
        Call FERME_TRACE From LECFIC
      Endif
      If GMESSAGE<>"" & !GIMPORT & !GWEBSERV
        Call OUINON(mess(322,197,1)-"\"-GMESSAGE+"\"+mess(88,191,1), WRET) From GESECRAN
        If WRET=2 Call LEC_TRACE From LECFIC : Endif
        Raz GMESSAGE
      Endif
      Affzo [M:SDH1]1-99
    Endif
    #LTA.sn
    # If func AFNC.ACTIV("LTA") and GLOCUSATAX and func TRTADRLIB.CHKADR_MANDATORY()   # 106867.o
    #If func AFNC.ACTIV("LTA") and [F:CPY]SSTTAXACT = 2 and func TRTADRLIB.CHKADR_MANDATORY() # 106867.n # 109198.o
    If func AFNC.ACTIV("LTA") and [F:CPY]SSTTAXACT = 2 # 109198.sn MJH 08/19/15


      If [F:BPA]ADRVAL <> 0
        [M:ADB2]ADRVAL = [F:BPA]ADRVAL
        #[M:ADB2]ADBFLG = 0
      Endif

      If func TRTADRLIB.CHKADR_MANDATORY()   # 109198.en MJH 08/19/15
      Gosub CHKADR_DELIVERY From TRTADRLIB
        If GERR <> 0 Then
          OK = 0
          Return
        Endif
      Endif

    Endif
    #LTA.en
  Endif

  If func AFNC.ACTIV("KPO")>0
    If func PORLEGLIB.CTLDOCTYP([M:SDH0]SDHTYP,"SDH",GMESSAGE) = 1   :  OK = 0 : GERR = 1 : Return  : Endif
    If GCURLEG ="POR" & !func PORLEGLIB.CONT_DATETIME(GREP,GFONCTION) : OK = 0  : GERR = 1 : Return  : Endif
  Endif

  # Issue X3-44998 - 2017-07-27 by CPO : Duplicated sale documents: analytical dimension not controlled (idem X3SUIVI93839)
  #--This control has to be done also during Creation/Update of a document
  Gosub VERIF_CTL_ALLCCE From SUBSDHA1
  If OK=0 : Return : Endif
  # End issue X3-44998

  OK=1
Return

#########################################################################
#------------------------------------------------------------------------------ #
# Vérification à faire pour chaque commande livrée dans cette livraison         #
# --> Si la commande est en livraison ligne/commande complète  et               #
#        la commande est non encore livrée (c'est la 1ère livraison)            #
#        --> Vérif. que les lignes de la commande sont entièrement livrées      #
#------------------------------------------------------------------------------ #
#$VERIF_CDE_LIV
#Local Integer WI, WJ, WK
#Local Decimal WQTY
#
#For WI=0 To [M]NBLIG
#   If [M]XSOHNUM(WI) <> ""
#      If find([M]XSOHNUM(WI),[M]XSOHNUM(0.. WI)) = WI+1 : # Ne faire la vérif. qu'une seule fois pr cette cde
#         # Traitement d'une commande
#         If [F:SOH]SOHNUM <> [M]XSOHNUM(WI)
#            Read [SOH] SOH0=[M]XSOHNUM(WI)
#            If fstat Raz [F:SOH] : Endif
#         Endif
#         If func MANHLDLIB.BLK_ALLOC([F:SOH]HLDSTA,[F:SOH]HLDCOD)  # order holds
#          GERR=1 : GMESSAGE = mess(15,492,1)-[M:SDH1]VCRNUMORI(I) : OK = 0 : Break
#         Endif
#         If find([F:SOH]DME,2,3) & [F:SOH]DLVSTA = 1
#            # Commande livraison ligne/commande complète et non encore livrée
#            # Recherche pour chaque ligne si tout est livré
#            #Filter [SOQ] Where SOHNUM = [F:SOH]SOHNUM                          : # Bug 71008
#            Filter [SOQ] Where SOHNUM = [F:SOH]SOHNUM & [F:SOQ]SOQSTA<>3        : # Bug 71008
#            For [SOQ]
#               # Traitement d'une ligne de la commande
#               WJ=0:WQTY=0
#               While WQTY<[F:SOQ]QTY & WJ<[M]NBLIG
#                  WK=WJ
#                  WJ=find([F:SOQ]SOPLIN,[M]SOPLIN(WK..[M]NBLIG-1))
#                  If WJ=0 Break Endif
#                  WJ+=WK
#                  If [M]XSOHNUM(WJ-1)=[M]XSOHNUM(WI) WQTY+=[M]QTY(WJ-1) Endif
#               Wend
#               #If WQTY=0                                                       : # Bug 71008
#               If WQTY=0 & sum([F:SOQ]ODLQTY,[F:SOQ]DLVQTY)=0                   : # Bug 71008
#                  # Une des lignes de la commande que l'on vérifie n'est pas du tout livrée
#                  If [F:SOH]DME=3
#                      OK=1
#                      Call OUINON ([F:SOH]SOHNUM-":"-mess(129,197,1)-mess(167,191,1)-"\"-
#&                                  [F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMDAT,[F:SOQ]SHIDAT)-
#&                                  ":"-mess(165,191,1)-"\"-mess(205,100,1),OK)
#&                          From GESECRAN :#--CPO 83985 GFMDAT au lieu de GFMD
#                      If OK<>2 OK=0 : Filter [SOQ] : Break 2 : Endif
#                  Endif
#               #Elsif WQTY<[F:SOQ]QTY                                           : # Bug 71008
#               Elsif WQTY+sum([F:SOQ]ODLQTY,[F:SOQ]DLVQTY)<[F:SOQ]QTY           : # Bug 71008
#                  # Une des lignes de la commande est partiellement livrée
#                  OK=1
#                  Call OUINON ([F:SOH]SOHNUM-":"-mess(168,191,1)-"\"-
#&                              [F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMDAT,[F:SOQ]SHIDAT)-
#&                              ":"-mess(166,191,1)-"\"-mess(205,100,1),OK)
#&                      From GESECRAN :#--CPO 83985 GFMDAT au lieu de GFMD
#                  If OK<>2 OK=0 : Filter [SOQ] : Break 2 : Endif
#               Endif
#            Next
#            Filter [SOQ]
#         Endif
#      Endif
#   Endif
#Next
#Return

$VERIF_CDE_LIV
Local Integer WI, WJ, WK
Local Decimal WQTY
Local Char WSMESSAGE(type(GMESSAGE)-10)       # FGR 22/08/2014 : X3SUIVI101716

  # FGR 21/08/2014 : X3SUIVI101716 : Remplacé tous les [M] par [M:SDH1]
  #For WI=0 To [M:SDH1]NBLIG   : #SAM 120871
   For WI=0 To [M:SDH1]NBLIG-1 : #SAM 120871
    If [M:SDH1]XSOHNUM(WI) <> ""
      If find([M:SDH1]XSOHNUM(WI),[M:SDH1]XSOHNUM(0.. WI)) = WI+1 : # Ne faire la vérif. qu'une seule fois pr cette cde
        # Traitement d'une commande
        If [F:SOH]SOHNUM <> [M:SDH1]XSOHNUM(WI)
          Read [SOH] SOH0=[M:SDH1]XSOHNUM(WI)
          If fstat Raz [F:SOH] : Endif
        Endif
        If func MANHLDLIB.BLK_ALLOC([F:SOH]HLDSTA,[F:SOH]HLDCOD)  # order holds
          #GERR=1 : GMESSAGE = mess(15,492,1)-[M:SDH1]VCRNUMORI(I) : OK = 0 : Break  # FGR 21/08/2014 : X3SUIVI101716 : Mauvais nom de champs
          # FGR 21/08/2014 : X3SUIVI101716 (début)
          #GERR=1 : GMESSAGE = mess(15,492,1)--[F:SOH]SOHNUM : OK = 0 : Break
          WSMESSAGE = mess(15,492,1) - [F:SOH]SOHNUM
          If GFONCTION = "FUNPREDLV" or GFONCTION = "FUNPREDLV2" Then
            Call ECR_TRACE("          " + WSMESSAGE, 1) From GESECRAN
          Else
            GMESSAGE = WSMESSAGE
          Endif
          GERR = 1 : OK = 0 : Break
          # FGR 21/08/2014 : X3SUIVI101716 (fin)
        Endif
        # Issue 122277
        # Do not do the verification here, because of a line is not delivered and the user answer No to the question,
        # The delivery is not created even if the other lines are ok. The verification has to be done before (during the treatment line)
        #If find([F:SOH]DME,2,3) & [F:SOH]DLVSTA = 1
        If [F:SOH]DME=3 & [F:SOH]DLVSTA = 1
        # End issue 122277
          # Commande livraison ligne/commande complète et non encore livrée
          # Recherche pour chaque ligne si tout est livré
          #Filter [SOQ] Where SOHNUM = [F:SOH]SOHNUM                          : # Bug 71008
          Filter [SOQ] Where SOHNUM = [F:SOH]SOHNUM & [F:SOQ]SOQSTA<>3        : # Bug 71008
          For [SOQ]
            # Traitement d'une ligne de la commande
            WJ=0:WQTY=0
            While WQTY<[F:SOQ]QTY & WJ<[M:SDH1]NBLIG
              WK=WJ
              WJ=find([F:SOQ]SOPLIN,[M:SDH1]SOPLIN(WK..[M:SDH1]NBLIG-1))
              If WJ=0 Break Endif
              WJ+=WK
              If [M:SDH1]XSOHNUM(WJ-1)=[M:SDH1]XSOHNUM(WI) WQTY+=[M:SDH1]QTY(WJ-1) Endif
            Wend
            #If WQTY=0                                                       : # Bug 71008
            If WQTY=0 & sum([F:SOQ]ODLQTY,[F:SOQ]DLVQTY)=0                   : # Bug 71008
              # Une des lignes de la commande que l'on vérifie n'est pas du tout livrée
              If [F:SOH]DME=3
                OK = 1
                # FGR 21/08/2014 : X3SUIVI101716 (début)
                #                Call OUINON ([F:SOH]SOHNUM-":"-mess(129,197,1)-mess(167,191,1)-"\"-
                #&                            [F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMDAT,[F:SOQ]SHIDAT)-
                #&                            ":"-mess(165,191,1)-"\"-mess(205,100,1),OK)
                #&                            From GESECRAN :#--CPO 83985 GFMDAT au lieu de GFMD
                WSMESSAGE = [F:SOH]SOHNUM-":"-mess(129,197,1)-mess(167,191,1)-"\"-[F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMD,[F:SOQ]SHIDAT)-":"-mess(165,191,1)
                If GFONCTION = "FUNPREDLV" or GFONCTION = "FUNPREDLV2" Then
                  Call ECR_TRACE(WSMESSAGE, 1) From GESECRAN
                Else
                  Call OUINON (WSMESSAGE - "\" - mess(205,100,1), OK) From GESECRAN
                Endif
                # FGR 21/08/2014 : X3SUIVI101716 (fin)
                If OK<>2 OK=0 : Filter [SOQ] : Break 2 : Endif
              Endif
            #Elsif WQTY<[F:SOQ]QTY                                           : # Bug 71008
            Elsif WQTY+sum([F:SOQ]ODLQTY,[F:SOQ]DLVQTY)<[F:SOQ]QTY           : # Bug 71008
              # Une des lignes de la commande est partiellement livrée
              OK = 1
              # FGR 21/08/2014 : X3SUIVI101716 (début)
              #              Call OUINON ([F:SOH]SOHNUM-":"-mess(168,191,1)-"\"-
              #&                          [F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMDAT,[F:SOQ]SHIDAT)-
              #&                          ":"-mess(166,191,1)-"\"-mess(205,100,1),OK)
              #&                          From GESECRAN :#--CPO 83985 GFMDAT au lieu de GFMD
              WSMESSAGE = [F:SOH]SOHNUM-":"-mess(168,191,1)-"\"-[F:SOQ]ITMREF-mess(184,197,1)-":"-format$(GFMD,[F:SOQ]SHIDAT)-":"-mess(166,191,1)
              If GFONCTION = "FUNPREDLV" or GFONCTION = "FUNPREDLV2" Then
                Call ECR_TRACE(WSMESSAGE, 1) From GESECRAN
              Else
                Call OUINON (WSMESSAGE - "\" - mess(205,100,1), OK) From GESECRAN
              Endif
              # FGR 21/08/2014 : X3SUIVI101716 (début)
              If OK<>2 OK=0 : Filter [SOQ] : Break 2 : Endif
            Endif
          Next
          Filter [SOQ]
        Endif
      Endif
    Endif
  Next
Return

#########################################################################
#---------------------------------------------------------- #
# Vérification s'il y a des lignes de commande à réallouer  #
#---------------------------------------------------------- #
$VERIF_ORDALL
Local Integer I, WOK : WOK=1
# Doit-on demander la réallocation des lignes de commandes ?
If sum([M:SDH1]OALQTYSTU)=0 & [F:SDH]LINNBR=[M]NBLIG Return Endif
#If [F:SDH]LINNBR<>[M]NBLIG
#   GALLORD=1 : Call OUINON(mess(132,191,1),GALLORD) From GESECRAN
#Else
   For I=1 To MAXLIG
      # Bug 57809 : Ligne supprimée
      #--- Issue 105078
      #If !find(I,[M]CREFLG(0..[M]NBLIG-1))
      If !find(I,[M]CREFLG(0..[M]NBLIG-1)) & [M:SDH1]OALQTYSTU(I-1)>0
      #---
          GALLORD=1 : Call OUINON(mess(132,191,1),GALLORD) From GESECRAN
          Break
      # Si diminution qté livrée et celle-ci devient inférieure qté allouée cde
      Elsif [M]CREFLG(I-1)<>0 & [M:SDH1]OALQTYSTU(I-1) <> 0
         If [M:SDH1]QTYSTU(I-1)<[M:SDH1]YQTYSTU(I-1)
&         & [M:SDH1]QTYSTU(I-1)<[M:SDH1]OALQTYSTU(I-1)
            GALLORD=1 : Call OUINON(mess(132,191,1),GALLORD) From GESECRAN
            Break
         Endif
      Endif
   Next
#Endif
Return
#########################################################################
$VALLIGCRE

#----------------------------------#
# Traitement de VALLIG en création #
#----------------------------------#
Raz [M:ALP]ALLQTY,[M:ALP]ALLQTYSHT
Raz [M:ALP]DESQTY,[M:ALP]DESQTYSHT

DELTAQTY    = [F:SDD]QTY
DELTAQTYSTU = [F:SDD]QTYSTU

# Si livraison validée, pas de maj stock (ne peut pas arriver)
If [F:SDH]CFMFLG=2 Goto VALLIGCRE_SUI Endif

If [F:SDD]STOMGTCOD <> 1
   Gosub GESALL
   If GOK <= 0  Return  Endif
Endif

$VALLIGCRE_SUI
# Si import livraison, pas de maj commande
#If GIMPORT Goto VALLIGCRE_FIN Endif                                            : # TS_Import

# Maj ligne de préparation
If [M:SDH1]PRHNUM(nolign-1) <> ""
   Gosub MAJLIGPRE
   If GOK <= 0  Return  Endif
Endif

# Maj ligne de commande
If [F:SDD]SOHNUM <> ""
   Gosub MAJLIGCDE
   If GOK <= 0  Return  Endif
Endif

# Maj matière ordre de sous-traitance
If [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
   #--- Bug 56621
   # Si quantité rupture désallouée dans GESALL, maj de la matière
   If LSHT>0
      [M:ALP]DESQTYSHT = LSHT
      Gosub MAJLIGSST
      If GOK <= 0  Return  Endif
   Endif
   #---

#--- Bug 81161
# Si livraison d'une préparation issu d'un manquant sous-traitant,
Elsif [F:SDD]VCRTYPORI=3 & [F:SDD]VCRNUMORI<>""
   Read [PRE]PRE0=[F:SDD]VCRNUMORI;[F:SDD]VCRLINORI
   If !fstat & [F:PRE]ORITYPSCO=36 & [F:PRE]ORINUM<>""
      # Si quantité rupture désallouée dans GESALL, maj de la matière
      If LSHT>0
         [M:ALP]DESQTYSHT = LSHT
         Gosub MAJLIGSST
         If GOK <= 0  Return  Endif
      Endif
   Endif
#---

Endif

#---
# La suppression du besoin de réappro sous-traitance
# ne se fait plus à la création de la livraison mais à sa validation
#---
# Si livraison d'un besoin de réappro sous-traitance,
# suppression de celui-ci
#If dim([M:SDH0]SDHCAT)>0 & [M:SDH0]SDHCAT=2 & [M:SDH1]STOREOFLG(nolign-1)=1
#   Gosub SUPREO
#   If GOK <= 0  Return  Endif
#Endif

$VALLIGCRE_FIN

# Création ligne de livraison et colisage entièrement réalisé
# alors le colisage n'est plus réalisée
If [F:SDH]PACFLG=2
   Update [SDH] Where SDHNUM=[M:SDH0]SDHNUM With PACFLG=1
Endif

# Incrémentation de l'en-cours de livraison
WLIVTTC += [F:SDD]QTY * [F:SDD]NETPRIATI

Return

#########################################################################
$VALLIGMOD
#-----------------------------------------#
# Traitement de VALLIG en modification    #
#-----------------------------------------#

Case SIGN
 When -1 : Raz [M:ALP]ALLQTY,[M:ALP]ALLQTYSHT
           Raz [M:ALP]DESQTY,[M:ALP]DESQTYSHT
           WLIVTTC -= [F:SDD]QTY * [F:SDD]NETPRIATI : # Diminution en cours liv
           DELTAQTY    = [M]QTY(NOL)    - [F:SDD]QTY
           DELTAQTYSTU = [M]QTYSTU(NOL) - [F:SDD]QTYSTU

           # S'il y a une quantité colisée
           If [F:SDD]PACQTYSTU>0
              # Si diminution quantité  alors suppression du colisage
              If DELTAQTY<0
                 WRET=0
                 Call SUP_COLISAGE(4,[F:SDD]SDHNUM,[F:SDD]SDDLIN,"M",WRET) From STKPREPA
                 If WRET<>0 GOK=0 Endif
                 [F:SDD]PACQTYSTU=0
              # Sinon si gestion de stock et colisage détaillée
              Elsif [M:SDH1]STOMGTCOD(nolign-1)<>1
                 Read [ITF]ITF0=[M:SDH1]ITMREF(nolign-1);[M:SDH0]STOFCY
                 If fstat
                    GOK=0 : Call FSTA("ITF") From GLOCK : Return
                 Endif
                 If [F:ITF]PCKSTKFLG=2
                    WRET=0
                    # Si le stock préparé a évolué alors suppression du colisage
                    Call VERF_MODSTO(4,[F:SDD]SDHNUM,[F:SDD]SDDLIN,[M:SDH1]WSTOSEQ(nolign-1),
&                                    WRET) From STKPREPA
                    # Le stock a été modifié
                    If WRET<>0
                       WRET=0
                       Call SUP_COLISAGE(4,[F:SDD]SDHNUM,[F:SDD]SDDLIN,"M",WRET) From STKPREPA
                       If WRET<>0 GOK=0 Endif
                       [F:SDD]PACQTYSTU=0
                    Endif
                 Endif
              Endif
           Endif

           # Article géré en stock
           If [M:SDH1]STOMGTCOD(NOL) <> 1
              Gosub GESALL
              If GOK <= 0  Return  Endif
              If DELTAQTYSTU<0
                 # Quantité réallouée sur la commande
                 WQTYREA = [M:ALP]DESQTY+[M:ALP]DESQTYSHT
                 # Si réallocation commande et qté réallouée <= ancienne qté allouée
                 If WQTYREA<>0 & WQTYREA<=[M:SDH1]OALQTYSTU(NOL)
                    [M:SDH1]OALQTYSTU(NOL)-=WQTYREA
                 Endif
              Endif
           # Composé de kit/sous-traité
           Elsif find([F:SDD]LINTYP,2,3,4,5,10,11,12,13)
              If DELTAQTYSTU<0
                 # Quantité réallouée sur la commande
                 WQTYREA = max(0,[M:SDH1]OALQTYSTU(NOL)-[M:SDH1]QTYSTU(NOL))
                 # Si réallocation commande et qté réallouée <= ancienne qté allouée
                 If WQTYREA<>0 & WQTYREA<=[M:SDH1]OALQTYSTU(NOL)
                    [M:SDH1]OALQTYSTU(NOL)-= WQTYREA
                 Endif
              Endif
           Endif
           #--- Bug 71286
           #If DELTAQTY<0 Gosub ANN_COLIS Endif
 When +1 : WLIVTTC += [F:SDD]QTY * [F:SDD]NETPRIATI : # Augmentation en cours liv
           # Si numéro commande renseigné
           If [F:SDD]SOHNUM <> ""
              If DELTAQTY <> 0
                 Gosub MAJLIGCDE
                 If GOK <= 0  Return  Endif
              Elsif YSHIDAT<>[F:SDD]SHIDAT  : #15380
                  Gosub MAJLASDLV_CDE       : #15380
              Endif
           Endif

           #--- Bug 56621
           # Maj matière ordre de sous-traitance
           #If [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
           #   If DELTAQTY <> 0
           #      Gosub MAJLIGSST
           #      If GOK <= 0  Return  Endif
           #   Endif
           #Endif
           #---

           # Si augmentation quantité et colisage entièrement réalisé
           # alors le colisage n'est plus réalisée
           If DELTAQTY>0 & [F:SDH]PACFLG=2
              Update [SDH] Where SDHNUM=[M:SDH0]SDHNUM With PACFLG=1
           Endif
Endcase
Return

#########################################################################
$VALLIGANN

#--------------------------------------#
# Traitement de VALLIG en annulation   #
#--------------------------------------#
Raz [M:ALP]ALLQTY,[M:ALP]ALLQTYSHT
Raz [M:ALP]DESQTY,[M:ALP]DESQTYSHT

DELTAQTY    = -1 * [F:SDD]QTY
DELTAQTYSTU = -1 * [F:SDD]QTYSTU
If [F:SDD]STOMGTCOD <> 1
   Gosub GESALL
   If GOK <= 0  Return  Endif
Endif

# Si numéro préparation renseigné
If [F:SDD]PRHNUM<>""
   Gosub MAJLIGPRE
   If GOK <= 0  Return  Endif
Endif

# Si numéro commande renseigné
If [F:SDD]SOHNUM <> ""
   Gosub MAJLIGCDE
   If GOK <= 0  Return  Endif
Endif

#--- Bug 56621
# Maj matière ordre de sous-traitance
#If [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
#   Gosub MAJLIGSST
#   If GOK <= 0  Return  Endif
#Endif
#---

# Décrémentation de l'en-cours livraison
WLIVTTC -= [F:SDD]QTY * [F:SDD]NETPRIATI

# Si suppression d'une ligne : Suppression du colisage de la ligne
# Si suppression de la livraison, on delete tout dans ANNULE
If GREP<> "A"
   If [F:SDD]PACQTYSTU>0
      WRET=0
      Call SUP_COLISAGE(4,[F:SDD]SDHNUM,[F:SDD]SDDLIN,"A",WRET) From STKPREPA
      If WRET<>0 GOK=0 Endif
      [F:SDD]PACQTYSTU=0
   Endif
Endif

Return
####################################################################################
# Suppression d'une ligne : Suppression des lignes de colis concernant cette ligne #
####################################################################################
# A supprimer en 150
# -------------------
$ANN_COLIS
Local Decimal WUNTWEI, WNETWEI
Local Integer WI, WPAS

Raz WPAS

# Recherche de tous les détails colis rattachés à la ligne de livraison
Filter [SPD] Where VCRTYP=4 & VCRNUM=[F:SDD]SDHNUM & VCRLIN=[F:SDD]SDDLIN & VCRSEQ=0 Order By Key SPD0
For [SPD]

    # La ligne est colisée : Chargement des colis dans une table de travail
    If WPAS=0 Gosub CHARGE_WTABPACSEQ Endif

    Readlock [SPD] Curr
    If fstat = 1
        GOK=-1 : GLOCK="$SPACKD"-[F:SPD]VCRNUM-num$([F:SPD]PACSEQ) : Break
    Elsif fstat
        GOK=0  : Call RSTA ("SPD",[F:SPD]VCRNUM-num$([F:SPD]PACSEQ)) From GLOCK : Break
    Endif

    WPAS=1
    # Calcul du poids net du détail colis à enlever du colis
    WUNTWEI=[F:SDD]UNTWEI
    If [F:SDD]WEU<>[F:SPH]WEU
        # Conversion poids unitaire de unité poids liv en unité poids colis
        Call SCONV_TCO([F:SDD]WEU,[F:SPH]WEU,WUNTWEI) From TRTVENQTE
    Endif
    WNETWEI=[F:SPD]QTY*WUNTWEI

    WI=find([F:SPD]PACSEQ, WTABPACSEQ(0..YPACNBR-1))
    If WI > 0 WTABNETWEI(WI-1)+=WNETWEI Endif

    # Suppression du détail colis rattaché à la ligne de livraison
    Delete [SPD]
    If fstat GOK=0 : Call FSTA("SPD") From GLOCK : Break : Endif
Next
Filter [SPD]
If GOK < 1 Return Endif

Return
# -------------------------------------------------------------- #
# Chargement des colis de la livraison dans une table de travail #
# -------------------------------------------------------------- #
# A supprimer en 150
# -------------------
$CHARGE_WTABPACSEQ

Raz WI : Raz WTABNETWEI
Filter [SPH] Where VCRTYP=4 & VCRNUM=[F:SDD]SDHNUM
For [SPH]
    WTABPACSEQ (WI) = [F:SPH]PACSEQ
    WI+=1
Next
Filter [SPH]

Return
#########################################################################
$GESALL
#-------------------------#
# Gestion des allocations #
#-------------------------#
Local Integer WTRT, WRET, WALLTYP
Local Decimal LQTA, LSHT
Local Char    WSHIDAT             : # Issue 86975

# Issue X3-64479/73568 - 2019-09-24 by MUARN : project task allocations
# Issue X3-184649 - 2020-02-28 by MUARN : declaration when needed
#Local Integer IRET
#Local Char SPROJECT(GLONPIM)
#Local Char SBUDGET(GLONTAC)
#Local Char STASK(GLONPBU)
# End issue X3-64479/73568

# Lecture de l'article si nécessaire
If [F:ITM]ITMREF <> [F:SDD]ITMREF
   Read [ITM]ITM0=[F:SDD]ITMREF
   If fstat = 1 GOK = -1
      GLOCK = "$ITMMASTER"-[F:SDD]ITMREF
      Return
   Elsif fstat  GOK =  0
      Call RSTA ("ITM",[F:SDD]ITMREF) From GLOCK
      Return
   Endif
Endif
# Alimentation type allocation commande
WALLTYP = GALLTYP

# Issue X3-132694 - 20190813 by LD
If [F:SDD]PRHNUM<>""
  Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
  If fstat
     Call RSTA ("PRE",[F:SDD]PRHNUM-num$([F:SDD]PRELIN)) From GLOCK
       GOK=0 : Return
    Endif
Endif
# Issue X3-132694 - 20190813 by LD

# On vient de la gestion des bons de préparation
If GFONC1="GESPRH"
   # Issue X3-132694 - 20190813 by LD
   # The read is now done in all cases
#   #--- Bug 84194
#   If [F:SDD]PRHNUM<>""
#      Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
#      If fstat
#         Call RSTA ("PRE",[F:SDD]PRHNUM-num$([F:SDD]PRELIN)) From GLOCK
#         GOK=0 : Return
#      Endif
#   Endif
   # Issue X3-132694 - 20190813 by LD
   #---
   WALLTYP = 2
# On annule un BL et la ligne de BL est issue d'un BP
Elsif GREP="A" & [F:SDD]PRHNUM<>""
   # Issue X3-132694 - 20190813 by LD
   # The read is now done in all cases
#   Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
#   If fstat
#      Call RSTA ("PRE",[F:SDD]PRHNUM-num$([F:SDD]PRELIN)) From GLOCK
#      GOK=0 : Return
#   Endif
   # Issue X3-132694 - 20190813 by LD
   WALLTYP = 2
# La ligne de BL est issue d'une commande
Elsif [F:SDD]SOHNUM<>""
   Read [SOQ]SOQ0=[F:SDD]SOHNUM;[F:SDD]SOPLIN;[F:SDD]SOQSEQ
   If fstat
      Call RSTA ("SOQ",[F:SDD]SOHNUM-num$([F:SDD]SOPLIN)-num$([F:SDD]SOQSEQ)) From GLOCK
      GOK=0 : Return
   Endif
   WALLTYP = [F:SOQ]ALLTYP
   # Gestion des signatures
   # --> Il faut lire la cde pour savoir si on peut la réallouer en cas de modif/suppression
   If [F:SDD]SOHNUM<>""
      If [F:SOH]SOHNUM<>[F:SDD]SOHNUM
          Read [SOH]SOH0=[F:SDD]SOHNUM
          If fstat
             Call RSTA ("SOH",[F:SDD]SOHNUM) From GLOCK
             GOK=0 : Return
          Endif
      Endif
      # Gestion des signatures cdes
      # Si Cde non signée et pas d'encours si cde non signée ou pas d'allocation si cde non signée on ne va pas réallouer
      If [F:SOH]APPFLG<3 & (GSOHAPPORD=1 | GSOHAPPALL=1) WGALLORD=1 Endif
   Endif
   #--- Bug 81869
   # The read is now done in all cases
   # Issue X3-132694 - 20190813 by LD
#   If [F:SDD]PRHNUM<>""
#      Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
#      If fstat
#         Call RSTA ("PRE",[F:SDD]PRHNUM-num$([F:SDD]PRELIN)) From GLOCK
#         GOK=0 : Return
#      Endif
#   Endif
   # Issue X3-132694 - 20190813 by LD
   #---
# La ligne de BL est issue d'un ordre de sous-traitance
Elsif [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
   Read [SCM]SCM0=[F:SDD]VCRNUMORI;[F:SDD]VCRLINORI;[F:SDD]VCRSEQORI
   If fstat
      Call RSTA ("SCM",[F:SDD]VCRNUMORI-num$([F:SDD]VCRLINORI)-num$([F:SDD]VCRSEQORI)) From GLOCK
      GOK=0 : Return
   Endif
# Issue X3-64479/73568 - 2019-09-24 by MUARN : project task allocations
Elsif [F:SDD]VCRTYPORI=40
   # Issue X3-184649 - 2020-02-28 by MUARN : declaration when needed
   Local Integer IRET
   Local Char SPROJECT(GLONPIM)
   Local Char SBUDGET(GLONTAC)
   Local Char STASK(GLONPBU)
   # End issue X3-184649
   IRET = func PIMPL_CSTD_PROGS.PJM_KEY_SPLIT(GACTX, [F:SDD]PJT, SPROJECT, SBUDGET, STASK)
   Read [JTT]JTT0=SPROJECT;STASK;[F:SDD]VCRLINORI
   If fstat
      Call RSTA ("JTT",[F:JTT]OPPNUM-num$([F:JTT]TASCOD)-num$([F:JTT]ITTSEQ)) From GLOCK
      GOK=0 : Return
   Endif
   Read [PJTA]PTA1=[F:SDD]PJT
   If fstat
      Call RSTA ("PJTA",[F:PJTA]OPPNUM-num$([F:PJTA]TASCOD)) From GLOCK
      GOK=0 : Return
   Endif
   WALLTYP = 2
Endif

[M:ALP]VCRTYP     = 4
[M:ALP]VCRNUM     = [F:SDH]SDHNUM
[M:ALP]VCRLIN     = [F:SDD]SDDLIN
[M:ALP]VCRSEQ     = 0
[M:ALP]STOFCY     = [F:SDH]STOFCY
[M:ALP]ITMREF     = [F:SDD]ITMREF

# FGR 21/04/2015 : X3SUIVI105605 (début)
If dim([M:ALP]ECCVALMAJ) >= 0 Then
  [M:ALP]ECCVALMAJ = [F:SDD]ECCVALMAJ
Endif
# FGR 21/04/2015 : X3SUIVI105605 (fin)

[M:ALP]TYPQTY     = 2
[M:ALP]BESDAT     = [F:SDH]SHIDAT
Raz [M:ALP]ALLDAT, [M:ALP]DESQTY, [M:ALP]ALLQTY

Case TRTLIG
 When "C" : If [M:SDH1]PRHNUM(nolign-1)<>""
               # Avec désallocation préparation
               WTRT = 1
               [M:ALP]VCRTYPORI  = 3
               [M:ALP]VCRNUMORI  = [M:SDH1]PRHNUM(nolign-1)
               [M:ALP]VCRLINORI  = [M:SDH1]PRELIN(nolign-1)
               [M:ALP]VCRSEQORI  = 0
               [M:ALP]ALLTYPORI  = WALLTYP
               #--- Bug 81869
               [M:ALP]ALLQTY     = [F:PRE]ALLQTY+[F:PRE]SHTQTY
            Elsif [F:SDD]SOHNUM<>""
               # Avec désallocation commande origine
               WTRT = 1
               [M:ALP]VCRTYPORI  = 2
               [M:ALP]VCRNUMORI  = [F:SDD]SOHNUM
               [M:ALP]VCRLINORI  = [F:SDD]SOPLIN
               [M:ALP]VCRSEQORI  = [F:SDD]SOQSEQ
               [M:ALP]ALLTYPORI  = WALLTYP
            #--- Bug 56621
            #Elsif [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
            #   # Avec désallocation EO origine
            #   WTRT = 1
            #   [M:ALP]VCRTYPORI  = 36
            #   [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
            #   [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
            #   [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
            #   [M:ALP]ALLTYPORI  = WALLTYP
            #---
            # Issue X3-64479/73568 - 2019-09-24 by MUARN : project task allocations
            Elsif [F:SDD]VCRTYPORI=40
                WTRT = 1
               [M:ALP]VCRTYPORI  = 40
               [M:ALP]VCRNUMORI  = [F:PJTA]TASNUM
               [M:ALP]VCRLINORI  = [F:JTT]ITTSEQ
               #[M:ALP]VCRSEQORI  = [F:SDD]SOQSEQ
               [M:ALP]ALLTYPORI  = WALLTYP
            Else
               # Sans désallocation (pas d'origine)
               WTRT = 0
               Raz [M:ALP]VCRTYPORI,[M:ALP]VCRNUMORI,[M:ALP]VCRLINORI
               Raz [M:ALP]VCRSEQORI,[M:ALP]ALLTYPORI
            Endif

            [M:ALP]QTY    = [F:SDD]QTYSTU
            [M:ALP]MVTDES = [M:SDH1]MVTDES(NOL)
            # Mise à jour des allocations à partir de l'écran de travail STOSORW
            Call ENRSTOALL([M:SDH1]WSTOSEQ(NOL),WTRT,WRET) From STKALL
            If WRET<>0
               If GOK>0 Raz GOK Endif
               Return
            Endif

            #--- Bug 56621
            # Diminution ou suppression du manquant sous-traitant
            # à hauteur de la quantité livrée
            If [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
               Call DIMALL(36,[F:SDD]VCRNUMORI,[F:SDD]VCRLINORI,[F:SDD]VCRSEQORI,
&                          [F:SDD]ITMREF,2,[F:SDD]QTYSTU,LQTA,LSHT,WRET) From STKALL
               If WRET<>0
                  If GOK>0 Raz GOK Endif
                  Return
               Endif
            #--- Bug 81161
            # Si livraison d'une préparation issu d'un manquant sous-traitant,
            Elsif [F:SDD]VCRTYPORI=3 & [F:SDD]VCRNUMORI<>""
               Read [PRE]PRE0=[F:SDD]VCRNUMORI;[F:SDD]VCRLINORI
               If !fstat & [F:PRE]ORITYPSCO=36 & [F:PRE]ORINUM<>""
                  Call DIMALL(36,[F:PRE]ORINUM,[F:PRE]ORILIN,[F:PRE]ORISEQ,
&                             [F:SDD]ITMREF,2,[F:SDD]QTYSTU,LQTA,LSHT,WRET) From STKALL
                  If WRET<>0
                     If GOK>0 Raz GOK Endif
                     Return
                  Endif
               Endif
            #---
            Endif
            #---
            # Si l'origine est la préparation d'un manquant de sous-traitance
            # il faut supprimer ce manquant
            #If [M:SDH1]PRHNUM(nolign-1)<>"" & [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
            #   Call DELALL(36,[F:SDD]VCRNUMORI,[F:SDD]VCRLINORI,[F:SDD]VCRSEQORI,
            #&              [F:SDD]ITMREF,2,LQTA,LSHT,WRET) From STKALL
            #Endif

 When "M" : # Par défaut sans réallocation pièce origine
            WTRT=0
            Raz [M:ALP]VCRTYPORI,[M:ALP]VCRNUMORI,[M:ALP]VCRLINORI
            Raz [M:ALP]VCRSEQORI,[M:ALP]ALLTYPORI

            # Issue 86975
            If [F:SDH]SHIDAT<>[F:SDD]SHIDAT
                # La date d'expédition a été modifiée : Répercution sur les allocations existante
                WSHIDAT=[F:SDH]SHIDAT
                Call MODZONALL(4,[F:SDD]SDHNUM,[F:SDD]SDDLIN,0,"BESDAT",WSHIDAT,WRET) From STKALL
            Endif
            # End issue 86975

            If [F:SDD]SOHNUM<>""
               # Si diminution de la qté livrée d'une commande
               If DELTAQTYSTU<0
                  # Si liv d'une cde gérée en contremarque (réception/fabric.)
                  # ou si flag restitution allocation cde activé
                  If find([F:SOQ]FMI,3,5)|(find(WGALLORD,2,3)&[F:SDD]OALQTYSTU<>0)
                     # Avec réallocation commande origine
                     WTRT=2
                     [M:ALP]VCRTYPORI  = 2
                     [M:ALP]VCRNUMORI  = [F:SDD]SOHNUM
                     [M:ALP]VCRLINORI  = [F:SDD]SOPLIN
                     [M:ALP]VCRSEQORI  = [F:SDD]SOQSEQ
                     [M:ALP]ALLTYPORI  = WALLTYP
                     [M:ALP]DESQTY     = [F:SDD]QTYSTU
                     [M:ALP]ALLQTY     = [F:SDD]OALQTYSTU
                  Endif
               # Si augmentation de la qté livrée d'une commande
               Elsif DELTAQTYSTU>0
                  # Désallocation commande origine
                  WTRT = 1
                  [M:ALP]VCRTYPORI  = 2
                  [M:ALP]VCRNUMORI  = [F:SDD]SOHNUM
                  [M:ALP]VCRLINORI  = [F:SDD]SOPLIN
                  [M:ALP]VCRSEQORI  = [F:SDD]SOQSEQ
                  [M:ALP]ALLTYPORI  = WALLTYP
                  [M:ALP]DESQTY     = [F:SDD]QTYSTU
               Endif
            #--- Bug 56621
            #Elsif [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>""
            #   # Si augmentation de la qté livrée d'un EO
            #   If DELTAQTYSTU>0
            #      # Désallocation EO origine
            #      WTRT = 1
            #      [M:ALP]VCRTYPORI  = 36
            #      [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
            #      [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
            #      [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
            #      [M:ALP]ALLTYPORI  = WALLTYP
            #      [M:ALP]DESQTY     = [F:SDD]QTYSTU
            #   # Si diminution de la qté livrée d'un EO
            #   # et livraison non validée
            #   Elsif DELTAQTYSTU<0 & [F:SDH]CFMFLG<>2
            #      WTRT=3
            #      [M:ALP]VCRTYPORI  = [F:SDD]VCRTYPORI
            #      [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
            #      [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
            #      [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
            #      [M:ALP]BPRNUM     = [F:SDD]BPCORD
            #      [M:ALP]BPAADD     = [F:SDD]BPAADD
            #      [M:ALP]ALLTYPORI  = 2
            #      [M:ALP]DESQTY     = [F:SDD]QTYSTU
            #      [M:ALP]ALLQTY     = min([F:SDD]QTYSTU,[F:SCM]RETQTY-[F:SCM]ALLQTY-[F:SCM]USEQTY)
            #      [M:ALP]ALLQTY     = max(0,[M:ALP]ALLQTY)
            #      [M:ALP]LOC        = [F:SCM]LOC
            #      [M:ALP]LOT        = [F:SCM]LOT
            #      [M:ALP]STA        = [F:SCM]STA
            #      [M:ALP]BESDAT     = [F:SCM]DLVDAT
            #   Endif
            #---
            # Issue X3-64479/73568 - 2019-09-24 by MUARN : project task allocations
            Elsif [F:SDD]VCRTYPORI=40
              # Si diminution de la qté livrée d'une commande
               If DELTAQTYSTU<0
                   # Avec réallocation tâche origine
                   WTRT=2
                   [M:ALP]VCRTYPORI  = 40
                   [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
                   [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
                   [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
                   [M:ALP]ALLTYPORI  = WALLTYP
                   [M:ALP]DESQTY     = [F:SDD]QTYSTU
                   [M:ALP]ALLQTY     = [F:SDD]QTYSTU
               # Si augmentation de la qté livrée d'une tâche
               Elsif DELTAQTYSTU>0
                  # Désallocation tâche origine
                  WTRT = 1
                  [M:ALP]VCRTYPORI  = 40
                  [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
                  [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
                  [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
                  [M:ALP]ALLTYPORI  = WALLTYP
                  [M:ALP]DESQTY     = [F:SDD]QTYSTU
               Endif
            Endif

            [M:ALP]QTY    = [M:SDH1]QTYSTU(NOL)
            [M:ALP]MVTDES = [M:SDH1]MVTDES(NOL)

            # Si kit/sous-traité, diminution de la qté livrée et alloc détaillée,
            # stockage de la qté à réallouer
            Local Decimal WAREAL
            Raz WAREAL
            If find([F:SDD]LINTYP,2,3,4,5,10,11,12,13) & WTRT=2 & WALLTYP=2
               WAREAL=max(0,[M:ALP]ALLQTY-[ALP]QTY)
            Endif

            # Mise à jour des allocations à partir de l'écran de travail STOSORW
            Call ENRSTOALL([M:SDH1]WSTOSEQ(NOL),WTRT,WRET) From STKALL
            If WRET<>0
               If GOK>0 Raz GOK Endif
               Return
            Endif

            # Si la qté à réallouer ne l'a pas été totalement, création d'une
            # alloc de rupture sur la commande pour conserver la cohérence du kit
            If WAREAL<>0 & [M:ALP]DESQTY+[M:ALP]DESQTYSHT<WAREAL
               WAREAL-=[M:ALP]DESQTY+[M:ALP]DESQTYSHT
               #--- TS 106217 ajout paramètre LECC (avant dernier)
               Call CREALL(4,[M:ALP]STOFCY,[M:ALP]ITMREF,0,[M:ALP]ALLDAT,
&                          0,WAREAL,[M:ALP]VCRTYPORI,[M:ALP]VCRNUMORI,
&                          [M:ALP]VCRLINORI,[M:ALP]VCRSEQORI,"",[M:ALP]BESDAT,
&                          "","","","","","",0,0,"","","","",1,"",WRET) From STKALL
               If WRET<>0
                  If GOK>0 Raz GOK Endif
                  Return
               Else
                  [M:ALP]DESQTYSHT+=WAREAL
               Endif
            Endif

 When "A" : # Par défaut sans réallocation pièce origine
            WTRT = 0
            Raz [M:ALP]VCRTYPORI,[M:ALP]VCRNUMORI,[M:ALP]VCRLINORI
            Raz [M:ALP]VCRSEQORI,[M:ALP]ALLTYPORI

            #--- Bug 89931
            # La ligne BL est issue d'un BP et le BL n'était ni validé, ni sst
            #If GREP="A" & [F:SDD]PRHNUM<>"" & [F:SDH]CFMFLG<>2
            # Issue X3-69499 - 2018-02-14 by TS
            #If GREP="A" & [F:SDD]PRHNUM<>"" & [F:SDH]CFMFLG<>2 & [F:SDH]SCO<>2
            If GREP="A" & [F:SDD]PRHNUM<>"" & [F:SDD]LINCFMFLG<>2 & [F:SDH]SCO<>2
            # End issue X3-69499
               # Si le BP n'est pas 'annulé'
               Readlock [PRH]PRH0=[F:SDD]PRHNUM
               If !fstat & [F:PRH]DLVFLG <> 4
                  # Transfert des allocations sur le bon de préparation
                  WTRT=2
                  [M:ALP]VCRTYPORI  = 3
                  [M:ALP]VCRNUMORI  = [F:SDD]PRHNUM
                  [M:ALP]VCRLINORI  = [F:SDD]PRELIN
                  [M:ALP]VCRSEQORI  = 0
                  [M:ALP]ALLTYPORI  = WALLTYP
                  [M:ALP]DESQTY     = [F:SDD]QTYSTU
                  #[M:ALP]ALLQTY     = [F:SDD]QTYSTU                    : #--- Issue 121412
                  [M:ALP]ALLQTY     = min([F:PRE]QTYSTU,[F:SDD]QTYSTU)  : #--- Issue 121412
               Endif
            # La ligne BL est issue d'une commande
            Elsif [F:SDD]SOHNUM<>""
               # Si liv d'une cde gérée en contremarque (réception/fabrication)
               # ou si flag restitution allocation cde activé
               If find([F:SOQ]FMI,3,5) | (find(WGALLORD, 2, 3) & [F:SDD]OALQTYSTU <> 0)
                  # Avec réallocation commande origine
                  WTRT=2
                  [M:ALP]VCRTYPORI  = 2
                  [M:ALP]VCRNUMORI  = [F:SDD]SOHNUM
                  [M:ALP]VCRLINORI  = [F:SDD]SOPLIN
                  [M:ALP]VCRSEQORI  = [F:SDD]SOQSEQ
                  [M:ALP]ALLTYPORI  = WALLTYP
                  [M:ALP]DESQTY     = [F:SDD]QTYSTU
                  [M:ALP]ALLQTY     = [F:SDD]OALQTYSTU
               Endif
            # La ligne BL est issue d'un ordre SST et la liv n'est pas validée
            #--- Bug 56621
            #Elsif [F:SDD]VCRTYPORI=36 & [F:SDD]VCRNUMORI<>"" & [F:SDH]CFMFLG<>2
            #   # Avec réallocation rupture de la matière ordre sous-traitance
            #   WTRT=3
            #   [M:ALP]VCRTYPORI  = [F:SDD]VCRTYPORI
            #   [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
            #   [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
            #   [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
            #   [M:ALP]BPRNUM     = [F:SDD]BPCORD
            #   [M:ALP]BPAADD     = [F:SDD]BPAADD
            #   [M:ALP]ALLTYPORI  = 2
            #   [M:ALP]DESQTY     = [F:SDD]QTYSTU
            #   [M:ALP]ALLQTY     = min([F:SDD]QTYSTU,[F:SCM]RETQTY-[F:SCM]ALLQTY-[F:SCM]USEQTY)
            #   [M:ALP]ALLQTY     = max(0,[M:ALP]ALLQTY)
            #   [M:ALP]LOC        = [F:SCM]LOC
            #   [M:ALP]LOT        = [F:SCM]LOT
            #   [M:ALP]STA        = [F:SCM]STA
            #   [M:ALP]BESDAT     = [F:SCM]DLVDAT
            #---
            # Issue X3-64479/73568 - 2019-09-24 by MUARN : project task allocations
            Elsif [F:SDD]VCRTYPORI=40
              WTRT=2
              [M:ALP]VCRTYPORI  = 40
              [M:ALP]VCRNUMORI  = [F:SDD]VCRNUMORI
              [M:ALP]VCRLINORI  = [F:SDD]VCRLINORI
              [M:ALP]VCRSEQORI  = [F:SDD]VCRSEQORI
              [M:ALP]ALLTYPORI  = WALLTYP
              [M:ALP]DESQTY     = [F:SDD]QTYSTU
              [M:ALP]ALLQTY     = [F:SDD]QTYSTU
            Endif
            [M:ALP]QTY    = 0
            [M:ALP]MVTDES = ""
            # Mise à jour des allocations à partir de l'écran de travail STOSORW

            Call ENRSTOALL(0,WTRT,WRET) From STKALL
            If WRET<>0
               If GOK>0 Raz GOK Endif
               Return
            Endif
Endcase

Return

#########################################################################
$SUPREO
#-------------------------------------------#
# Suppression besoin de réapprovisionnement #
#-------------------------------------------#
#Readlock [REO]REO0=[F:SDH]STOFCY;[F:SDH]BPCLOC;[F:SDD]ITMREF
#If fstat=1
#   GLOCK="$STOREO"-[F:SDH]STOFCY-[F:SDH]BPCLOC-[F:SDD]ITMREF
#   GOK=-1 : Return
#Elsif fstat
#   Call RSTA ("REO",[F:SDH]STOFCY-[F:SDH]BPCLOC-[F:SDD]ITMREF) From GLOCK
#   GOK=0 : Return
#Else
#   Delete [REO]
#Endif
#Return

#########################################################################
$MAJLIGPRE

#---------------------------#
# Maj lignes de préparation #
#---------------------------#
# Bug 69252
# Si entête bon de prépa bloquée logiquement --> Abandon
SYMBOLE2="PRE"+[F:SDD]PRHNUM : Lock=SYMBOLE2
If fstat
    GMESSAGE="$STOPREH"-[F:SDD]PRHNUM-mess(10,100,1)
    GOK=0 : Return
Endif
# Bug 69252
Readlock [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
If fstat=1
   GLOCK="$STOPRED"-[F:SDD]PRHNUM-num$([F:SDD]PRELIN)
   GOK=-1 : Return
Elsif fstat
   Call RSTA ("PRE",[F:SDD]PRHNUM-num$([F:SDD]PRELIN)) From GLOCK
   GOK=0 : Return
Endif

If TRTLIG="C"
   [F:PRE]ALLQTY = 0
   [F:PRE]SHTQTY = 0

   Rewrite [PRE]
   If fstat : GOK = 0 : Call FSTA("PRE") From GLOCK : Return : Endif

   # Si ligne de préparation colisé
   If [F:PRE]PACQTYSTU>0
      WRET=0
      # Transfert du colisage de la ligne de préparation vers la ligne de livraison   # hcb  73687 [f:prh]prhnum en [f:pre]prenum
      Call TRF_COLISAGE([F:PRE]PRHNUM,[F:PRE]PRELIN,[F:SDH]SDHNUM,[F:SDD]SDDLIN,
&                       "",WRET) From STKPREPA
      If WRET=1 : GOK=0 : Return : Endif
   Endif

   # Si nouveau bon de préparation, maj de celui-ci
   If [M:SDH1]PRHNUM(nolign-1) <> WPRHNUM
      WPRHNUM = [M:SDH1]PRHNUM(nolign-1)
      Readlock [PRH]PRH0=[M:SDH1]PRHNUM(nolign-1)
      If fstat=1
         GLOCK="$STOPREH"-[M:SDH1]PRHNUM(nolign-1)
         GOK=-1 : Return
      Elsif fstat
         Call RSTA ("PRH",[M:SDH1]PRHNUM(nolign-1)) From GLOCK
         GOK=0  : Return
      Endif
      [F:PRH]DLVFLG = 3
      [F:PRH]SDHNUM = [F:SDH]SDHNUM
      #[F:PRH]SHIDAT = [F:SDH]SHIDAT
      #[F:PRH]DLVDAT = [F:SDH]DLVDAT
      Rewrite [PRH]
      If fstat : GOK = 0 : Call FSTA("PRH") From GLOCK : Return : Endif

      # Si bon de préparation colisé
#      If [F:PRH]PACFLG=2              # hcb 101155
      If [F:PRH]PACNBR > 0             # hcb 105412
         WRET=0
         # Transfert du colisage de la préparation vers la livraison
         #--- Bug 68231
         #Call TRF_COLISAGE([F:PRH]PRHNUM,0,[F:SDH]SDHNUM,0,"",WRET) From STKPREPA
         Call TRF_COLISAGE([F:PRH]PRHNUM,0,[F:SDH]SDHNUM,0,"PRH",WRET) From STKPREPA
         If WRET=1 : GOK=0 : Return : Endif
         #--- Bug 68231
         WCOLFLG=1
      Endif
   Endif

Elsif TRTLIG="A"
   #--- Bug 89931
   # On annule un BL qui n'était ni validé, ni de sous-traitance
   #If GREP="A" & [F:SDH]CFMFLG<>2
   # Issue X3-69499 - 2018-02-14 by TS
   #If GREP="A" & [F:SDH]CFMFLG<>2 & [F:SDH]SCO<>2
   If GREP="A" & [F:SDD]LINCFMFLG<>2 & [F:SDH]SCO<>2
   # End issue X3-69499
      Read [PRH]PRH0=[F:PRE]PRHNUM
      If fstat
         Call RSTA ("PRH",[F:PRE]PRHNUM) From GLOCK
         GOK=0  : Return
      # BP non annulé --> MAJ de la quantité allouéee
      Elsif [F:PRH]DLVFLG<>4
         [F:PRE]ALLQTY = [M:ALP]DESQTY
         [F:PRE]SHTQTY = [M:ALP]DESQTYSHT
      # BP annulé --> Positionnement du flag 'Ligne annulée'
      Else
         [F:PRE]FLGANN = 1
      Endif
   # On supprime une ligne du BL --> Positionnement du flag 'Ligne annulée'
   Else
         [F:PRE]FLGANN = 1
   Endif
   Rewrite [PRE]
   If fstat : GOK = 0 : Call FSTA("PRE") From GLOCK : Return : Endif
Endif

Return

#########################################################################
$MAJLIGCDE

#-------------------------#
# Maj lignes de commandes #
#-------------------------#
Local  Integer  STAT, WRMN, WSOQSTA
Local  Decimal  WDIFF, WDIFFSTU, WCPLQTY, MNTCALC
Local  Decimal  WPREQTYSTU, WPREQTY
Local  Char     WTRTORD
Local  Decimal  WSTUSAUCOE
Local  Char     WSAU(GLONUOM)
Local  Decimal  WSALSTOSTU : # Gestion des signatures

# Bug 69252
# Si entête commande bloquée logiquement --> Abandon
SYMBOLE2="SOH"+[F:SDD]SOHNUM : Lock=SYMBOLE2
If fstat
    GMESSAGE="$SORDER"-[F:SDD]SOHNUM-mess(10,100,1)
    GOK=0 : Return
Endif
# Bug 69252

Readlock [SOQ]SOQ0=[F:SDD]SOHNUM;[F:SDD]SOPLIN;[F:SDD]SOQSEQ
If fstat=1
   GLOCK="$SORDERQ"-[F:SDD]SOHNUM-num$([F:SDD]SOPLIN)-num$([F:SDD]SOQSEQ)
   GOK=-1 : Return
Elsif fstat
   Call RSTA ("SOQ",[F:SDD]SOHNUM-num$([F:SDD]SOPLIN)-num$([F:SDD]SOQSEQ))
&             From GLOCK
   GOK=0 : Return
Endif

# Si commande classique
If [F:SDD]SOHCAT<>4
   Readlock [SOP]SOP0=[F:SDD]SOHNUM;[F:SDD]SOPLIN;[F:SDD]SOQSEQ
   If fstat=1
      GLOCK="$SORDERP"-[F:SDD]SOHNUM-num$([F:SDD]SOPLIN)-num$([F:SDD]SOQSEQ)
      GOK=-1 : Return
   Elsif fstat
      Call RSTA ("SOP",[F:SDD]SOHNUM-num$([F:SDD]SOPLIN)-num$([F:SDD]SOQSEQ))
&                From GLOCK
      GOK=0 : Return
   Endif
   WSAU = [F:SOP]SAU
   If [F:SOP]SAUSTUCOE=0 [F:SOP]SAUSTUCOE=1 Endif
   WSTUSAUCOE = 1/[F:SOP]SAUSTUCOE
# Si commande ouverte
Else
   Read [SOC]SOC0=[F:SDD]SOHNUM;[F:SDD]SOPLIN
   If fstat
      Call RSTA ("SOC",[F:SDD]SOHNUM-num$([F:SDD]SOPLIN))
&                From GLOCK
      GOK=0 : Return
   Endif
   WSAU = [F:SOC]SAU
   If [F:SOC]SAUSTUCOE=0 [F:SOC]SAUSTUCOE=1 Endif
   WSTUSAUCOE = 1/[F:SOC]SAUSTUCOE
   # Lecture entête cde (si cde normale, lecture dans MAJENTCDE)
   Read [SOH]SOH0=[F:SDD]SOHNUM
   If fstat
      Call RSTA ("SOH",[F:SDD]SOHNUM) From GLOCK
      GOK=0 : Return
   Endif
Endif

# Sauvegarde de la différence entre qte cde et liv pour maj de l'en_cde client
Raz WDIFF, WDIFFSTU
WDIFF      = [F:SOQ]QTY-([F:SOQ]ODLQTY+[F:SOQ]DLVQTY)
WDIFFSTU   = [F:SOQ]QTYSTU-([F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU)
# Sauvegarde état ligne commande
WSOQSTA    = [F:SOQ]SOQSTA
# Sauvegarde qtés allouées commande
WALLQTY    = [F:SOQ]ALLQTY
WALLQTYSTU = [F:SOQ]ALLQTYSTU
# Sauvegarde qtés préparées commande
WPREQTY    = [F:SOQ]PREQTY
WPREQTYSTU = [F:SOQ]PREQTYSTU

# Maj quantités allouées, ruptures, préparées, à livrer
# recalcul suite à désallocation commande ou préparation
If TRTLIG = "C"
   # La ligne a été préparée
   If [M:SDH1]PRHNUM(nolign-1)<>""
      #--- Bug 73708
      #[F:SOQ]PREQTYSTU -= [M:ALP]DESQTY+[M:ALP]DESQTYSHT
      If [F:SOQ]STOMGTCOD <> 1
         [F:SOQ]PREQTYSTU -= [M:ALP]DESQTY+[M:ALP]DESQTYSHT
      Else
         [F:SOQ]PREQTYSTU -= [F:PRE]QTYSTU
      Endif
      #---
      Call CNVQTY([F:SOQ]PREQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]PREQTY) From TRTVENQTE
   # Article géré en stock
   Elsif [F:SOQ]STOMGTCOD<>1
      [F:SOQ]ALLQTYSTU -= [M:ALP]DESQTY
      [F:SOQ]SHTQTYSTU -= [M:ALP]DESQTYSHT
      Call CNVQTY([F:SOQ]ALLQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]ALLQTY) From TRTVENQTE
      Call CNVQTY([F:SOQ]SHTQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]SHTQTY) From TRTVENQTE
   # Kit/sous-traité non géré en stock
   Elsif find([F:SOP]LINTYP,2,3,4,5,10,11,12,13)
      [F:SOQ]ALLQTYSTU -= min([F:SOQ]ALLQTYSTU,[M:SDH1]QTYSTU(NOL))
      [F:SOQ]SHTQTYSTU  = 0
      [F:SOQ]SHTQTY     = 0
      Call CNVQTY([F:SOQ]ALLQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]ALLQTY) From TRTVENQTE
   Endif
   Raz [F:SOQ]TDLQTY
   Raz [F:SOQ]TDLQTYSTU
   [F:SOQ]SDHNUM = [F:SDD]SDHNUM
   [F:SOQ]SDDLIN = [F:SDD]SDDLIN
Endif

# Maj quantités allouées, ruptures
If TRTLIG="A" | TRTLIG="M"
   # Si diminution de la qté livrée d'une commande
   # recalcul suite à réallocation commande
   If DELTAQTYSTU<0
      # Si on annule pas un BL ou s'il n'est pas issu d'un BP
      If GREP<>"A" | [F:SDD]PRHNUM=""
         # Article géré en stock
         If [F:SOQ]STOMGTCOD <> 1
            [F:SOQ]ALLQTYSTU += [M:ALP]DESQTY
            [F:SOQ]SHTQTYSTU += [M:ALP]DESQTYSHT
         # Composé kit/sous-traité non géré en stock
         Elsif find([F:SOP]LINTYP,2,3,4,5,10,11,12,13)
            # Si liv d'une cde gérée en contremarque (réception/fabric.)
            # ou si flag restitution allocation cde activé
            If find([F:SOQ]FMI,3,5) | (find(WGALLORD,2,3) & [F:SDD]OALQTYSTU <> 0)
               If TRTLIG="M"
                  [F:SOQ]ALLQTYSTU += WQTYREA
               Else
                  [F:SOQ]ALLQTYSTU += [F:SDD]OALQTYSTU
               Endif
            Endif
            [F:SOQ]SHTQTYSTU = 0
         Endif
      Endif
   # Si augmentation de la qté livrée d'une commande
   # recalcul suite à désallocation commande
   Elsif DELTAQTYSTU>0
      # Article géré en stock
      If [F:SOQ]STOMGTCOD<>1
         [F:SOQ]ALLQTYSTU -= [M:ALP]DESQTY
         [F:SOQ]SHTQTYSTU -= [M:ALP]DESQTYSHT
      # Kit/sous-traité non géré en stock
      Elsif find([F:SOP]LINTYP,2,3,4,5,10,11,12,13)
         [F:SOQ]ALLQTYSTU -= min([F:SOQ]ALLQTYSTU,DELTAQTYSTU)
         [F:SOQ]SHTQTYSTU  = 0
      Endif
   Endif
   Call CNVQTY([F:SOQ]ALLQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]ALLQTY) From TRTVENQTE
   Call CNVQTY([F:SOQ]SHTQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]SHTQTY) From TRTVENQTE
Endif
# Si commande classique
If [F:SDD]SOHCAT <> 4
    If !find([F:SOP]LINTYP,3,4,5)
       # Issue X3-122738 - 20200102 by LD
       # Dans la table ITMMVT, la qté "En cde client" n'est pas totalement diminuée en validation livraison si la cde a été soldée en fonction du %reliquat de l'article
       # (En conséquence, il reste une qté "En cde client" alors que la cde est soldée)
       # Quantity On Sales orders field in the stock by site inquiry doesnt get updated when the product has a delivery tolerance and after the sales order gets closed.
       If TRTLIG="A" | TRTLIG="M"
           If [F:SOQ]SOQSTA = 3
               Raz WRMN
               # La cde était soldée, l'a-t-elle été avec le %reliquat ?
               # The order was closed, we need to know if it was closed due to the delivery tolerance
               WQTY = [F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
               If WQTY>0
                   Call SCAL_RMN ([F:SOQ]QTYSTU, WQTY, [F:SOQ]ITMREF, WRMN, STAT) From TRTVENQTE
                   If WRMN=1
                       # Elle a été soldée avec le %reliquat, l'encde a été réajusté avec la qté réellement livrée
                       # Il faut d'abord réajuster l'encde avec la qté cdée
                       # The order was closed with the delivery tolerance, the 'On sales orders' field has been adjust with the qty really delivered
                       # We need first to adjust the 'On sales orders' field with the ordered qty
                       WSALSTOSTU=max(0,([F:SOQ]QTYSTU-([F:SOQ]LPRQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU)))
                       If WSALSTOSTU<>0
                           # Maj de l'en-cde client dans les mouvements article
                           # Update 'On sales orders' field in ITMMVT
                           Local Char WSENS
                           WSENS = "+"
                           Call  MAJITVVEN ([F:SOQ]ITMREF, [F:SOQ]STOFCY, WSALSTOSTU, WSENS, "S", WRET) From TRTVENMAJ
                           If GOK<=0  Return : Endif
                       Endif
                   Endif
                   Raz WRMN, WSALSTOSTU
               Endif
           Endif
       Endif
       # End issue X3-122738 - 20200102 by LD
       [F:SOQ]SOQSTA = 1
       # Positionnement état ligne avant maj entête
       If [F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU+DELTAQTYSTU >= [F:SOQ]QTYSTU
          [F:SOQ]SOQSTA = 3
       Else
          WQTY = [F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU+DELTAQTYSTU
          If WQTY>0
              Call SCAL_RMN ([F:SOQ]QTYSTU, WQTY, [F:SOQ]ITMREF, WRMN, STAT) From TRTVENQTE
              # Issue X3-122738 - 20200102 by LD
              #If WRMN=1 [F:SOQ]SOQSTA=3 Endif
              If WRMN=1
                  # La cde est soldée à cause du %reliquat
                  # L'encde doit être réajusté avec la qté réellement livrée
                  # (Sinon à la validation de la livraison, l'encde ne repasse pas à 0 pour cette cde)
                  # The order is closed due to the delivery tolerance
                  # The 'On sales orders' field has to be adjust with the qty really delivered
                  # (Otherwise when the delivery is validated, The 'On sales orders' field will be not =0 for this order)
                  [F:SOQ]SOQSTA=3
                  WSALSTOSTU=max(0,([F:SOQ]QTYSTU-([F:SOQ]LPRQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+DELTAQTYSTU+[F:SOQ]DLVQTYSTU)))
                  If WSALSTOSTU<>0
                      # Maj de l'en-cde client dans les mouvements article
                      # Update 'On sales orders' field  in ITMMVT
                      Local Char WSENS
                      WSENS = "-"
                      Call  MAJITVVEN ([F:SOQ]ITMREF, [F:SOQ]STOFCY, WSALSTOSTU, WSENS, "S", WRET) From TRTVENMAJ
                      If GOK<=0  Return : Endif
                  Endif
                  Raz WRMN, WSALSTOSTU
              Endif
              # Issue X3-122738 - 20200102 by LD
          Endif
       Endif
       If [F:SOP]LINTYP=2 WCPE_SOQSTA=[F:SOQ]SOQSTA Endif
   Else
       # Bug 52442 : Si composant kit, le statut de solde doit être le même que celui du composé
       [F:SOQ]SOQSTA=WCPE_SOQSTA
   Endif
   # Maj entête commande (avant maj détail)
   Gosub MAJENTCDE
   If GOK=0 Return Endif
Endif

#--- Si ligne de commande ouverte
If [F:SDD]SOHCAT=4
   # Lecture de l'avance-retard (pas de gestion A/R si inter-sites)
   If [F:SOH]BETFCY=2
      Read [SOC]SOC0=[F:SOQ]SOHNUM;[F:SOQ]SOPLIN
   Else
      Readlock [SOC]SOC0=[F:SOQ]SOHNUM;[F:SOQ]SOPLIN
   Endif
   If fstat=1
      GLOCK = "$SORDERC"-[F:SOQ]SOHNUM-num$([F:SOQ]SOPLIN)
      GOK=-1 : Return
   Elsif fstat
      Call RSTA ("SOC",[F:SOQ]SOHNUM-num$([F:SOQ]SOPLIN)) From GLOCK
      GOK=0 : Return
   Endif

   # Issue X3-122738 - 20200102 by LD
   # Dans la table ITMMVT, la qté "En cde client" n'est pas totalement diminuée en validation livraison si la cde a été soldée en fonction du %reliquat de l'article
   # (En conséquence, il reste une qté "En cde client" alors que la cde est soldée)
   # Quantity On Sales orders field in the stock by site inquiry doesnt get updated when the product has a delivery tolerance and after the sales order gets closed.
   If TRTLIG="A"
       If [F:SOQ]SOQSTA = 3
           Raz WRMN
           # La cde était soldée, l'a-t-elle été avec le %reliquat ?
           # The order was closed, we need to know if it was closed due to the delivery tolerance
           WQTY = [F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
           If WQTY>0
               Call SCAL_RMN ([F:SOQ]QTYSTU, WQTY, [F:SOQ]ITMREF, WRMN, STAT) From TRTVENQTE
               If WRMN=1
                   # Elle a été soldée avec le %reliquat, l'encde a été réajusté avec la qté réellement livrée
                   # Il faut d'abord réajuster l'encde avec la qté cdée
                   # The order was closed with the delivery tolerance, the 'On sales orders' field has been adjust with the qty really delivered
                   # We need first to adjust the 'On sales orders' field with the ordered qty
                   WSALSTOSTU=max(0,([F:SOQ]QTYSTU-([F:SOQ]LPRQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU)))
                   If WSALSTOSTU<>0
                       # Maj de l'en-cde client dans les mouvements article
                       # Update 'On sales orders' field in ITMMVT
                       Local Char WSENS
                       WSENS = "+"
                       Call  MAJITVVEN ([F:SOQ]ITMREF, [F:SOQ]STOFCY, WSALSTOSTU, WSENS, "S", WRET) From TRTVENMAJ
                       If GOK<=0  Return : Endif
                   Endif
               Endif
               Raz WRMN, WSALSTOSTU
           Endif
       Endif
   Endif
   # End issue X3-122738 - 20200102 by LD
   Case TRTLIG
    When "C" : [F:SOQ]ODLQTY    = [F:SDD]QTY       :# Création de ligne
               [F:SOQ]ODLQTYSTU = [F:SDD]QTYSTU
               If ([F:SOQ]ODLQTY+[F:SOQ]DLVQTY) >= [F:SOQ]QTY
                  [F:SOQ]SOQSTA = 3
               Else
                  WQTY = [F:SOQ]ODLQTY+[F:SOQ]DLVQTY
                  Call SCAL_RMN ([F:SOQ]QTY,WQTY,[F:SOQ]ITMREF,WRMN,STAT)
&                      From TRTVENQTE
                  # Issue X3-122738 - 20200102 by LD
                  #If WRMN=1 [F:SOQ]SOQSTA=3 Endif
                  If WRMN=1
                      # La cde est soldée à cause du %reliquat
                      # L'encde doit être réajusté avec la qté réellement livrée
                      # (Sinon à la validation de la livraison, l'encde ne repasse pas à 0 pour cette cde)
                      # The order is closed due to the delivery tolerance
                      # The 'On sales orders' field has to be adjust with the qty really delivered
                      # (Otherwise when the delivery is validated, The 'On sales orders' field will be not =0 for this order)
                      [F:SOQ]SOQSTA=3
                      WSALSTOSTU=max(0,([F:SOQ]QTYSTU-([F:SOQ]LPRQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU)))
                      If WSALSTOSTU<>0
                          # Maj de l'en-cde client dans les mouvements article
                          # Update 'On sales orders' field  in ITMMVT
                          Local Char WSENS
                          WSENS = "-"
                          Call  MAJITVVEN ([F:SOQ]ITMREF, [F:SOQ]STOFCY, WSALSTOSTU, WSENS, "S", WRET) From TRTVENMAJ
                          If GOK<=0  Return : Endif
                      Endif
                      Raz WRMN, WSALSTOSTU
                  Endif
                  # Issue X3-122738 - 20200102 by LD
               Endif
               WQTY = [F:SOQ]QTY                   :# Sauvegarde quantité
               If [F:SOQ]SOQSTA<>3
                    ############################################################################
                    # Gbn-091213-89409-Ajout PE privé pour autoriser le non éclatement des DL
                    #                 La variable globale GNOSPLITDL doit être créée pour
                    #                 ne pas effectuer le traitement standard.
                    ############################################################################
                    GPOINT = "NOSPLITDLCRE"
                    Gosub  ENTREE From EXEFNC
                    If dim(GNOSPLITDL)<0
                    Call CRE_DEMLIV() From TRTVENLIV :# Eclatement ligne cde en 2
                    If GOK<=0 Return Endif
                    [F:SOQ]SOQSTA    = 3             :# Ligne initiale
                    [F:SOQ]QTY       = [F:SDD]QTY
                    [F:SOQ]QTYSTU    = [F:SDD]QTYSTU
                    [F:SOQ]SHTQTY    = 0
                    [F:SOQ]SHTQTYSTU = 0
                    # 85826 : Qté sur liste de prépa, Qté en cours de prépa, Qté préparéee suivent sur la nouvelle DL
                    Raz [F:SOQ]LPRQTY, [F:SOQ]LPRQTYSTU
                    Raz [F:SOQ]OPRQTY, [F:SOQ]OPRQTYSTU
                    Raz [F:SOQ]PREQTY, [F:SOQ]PREQTYSTU
                    # 85826
                  Else
                    Kill GNOSPLITDL
                  Endif
               Endif
               If [F:SOH]BETFCY<>2                 :# Maj A/R si pas I-S
                  [F:SOC]DLVQTYCUM += DELTAQTY
                  MNTCALC = DELTAQTY*[F:SDD]NETPRI
                  Call ARRDEV (MNTCALC,[F:SOH]CUR) From TRTDIV
                  [F:SOC]CPLAMT += MNTCALC
                  [F:SOC]EARDAT  = date$-1
                  [F:SOC]UPDDAT  = date$
                  [F:SOC]UPDUSR  = GUSER
                  If WSOQSTA=2                     :# La ligne était en retard
                     [F:SOC]EARQTY -= [F:SOQ]QTY
                  Elsif date$>[F:SOQ]DEMDLVDAT     :# La ligne est en retard
                     [F:SOC]EARQTY += WQTY-[F:SOQ]QTY
                  Endif
                  # On a livré plus que ce qui était commandé
                  If [F:SDD]QTY>[F:SOQ]QTY & GEARMGT=1  :# Avance imputée au cumul A/R
                     [F:SOC]EARQTY -= [F:SDD]QTY-[F:SOQ]QTY
                  Endif
                  If [F:SDD]QTY>[F:SOQ]QTY & GEARMGT<>1 :# Avance imputée aux lignes suivantes
                     WQTY = [F:SDD]QTY-[F:SOQ]QTY
                     Call IMP_AVANCE(WQTY,[F:SOQ]SOHNUM,[F:SOQ]SOPLIN,[F:SOQ]SOQSEQ)
&                         From TRTVENLIV
                     If GOK<=0 Return Endif
                  Endif
               Endif
    When "M" : If DELTAQTY<0                       :# Modification en moins
                  If [F:SOQ]QTY-[F:SDD]QTY > 0     : # 105565 : Pb création DL avec qté à  0
                        ############################################################################
                        # Gbn-091213-89409-Ajout PE privé pour autoriser le non éclatement des DL
                        #                 La variable globale GNOSPLITDL doit être créée pour
                        #                 ne pas effectuer le traitement standard.
                        ############################################################################
                        GPOINT = "NOSPLITDLMOD"
                        Gosub  ENTREE From EXEFNC
                        If dim(GNOSPLITDL)<0
                        Call CRE_DEMLIV() From TRTVENLIV :# Eclatement ligne cde en 2
                        If GOK<=0 Return Endif
                        [F:SOQ]QTY    = [F:SDD]QTY
                        [F:SOQ]QTYSTU = [F:SDD]QTYSTU
                        # 85826 : Qté sur liste de prépa, Qté en cours de prépa, Qté préparéee suivent sur la nouvelle DL
                        Raz [F:SOQ]LPRQTY, [F:SOQ]LPRQTYSTU
                        Raz [F:SOQ]OPRQTY, [F:SOQ]OPRQTYSTU
                        Raz [F:SOQ]PREQTY, [F:SOQ]PREQTYSTU
                        # 85826
                      Else
                        Kill GNOSPLITDL
                      Endif
                  Endif                            : # 105565
               Endif
               If [F:SOH]BETFCY<>2                 :# Maj A/R si pas I-S
                  [F:SOC]DLVQTYCUM += DELTAQTY     :# Modification de ligne
                  MNTCALC = DELTAQTY*[F:SDD]NETPRI
                  Call ARRDEV (MNTCALC,[F:SOH]CUR) From TRTDIV
                  [F:SOC]CPLAMT += MNTCALC
                  If DELTAQTY<0                    :# Modification en moins
                     If [F:SOQ]DEMDLVDAT<date$     :# Ligne réactivé en retard
                        [F:SOC]EARQTY -= DELTAQTY
                        [F:SOC]EARDAT  = date$-1
                     Endif
                  Else                             :# Modification en plus
                     If GEARMGT=1                  :# Avance imputée au cumul A/R
                        [F:SOC]EARQTY -= DELTAQTY
                     Else                          :# Avance imputée aux lignes suivantes
                        Call IMP_AVANCE(DELTAQTY,[F:SOQ]SOHNUM,[F:SOQ]SOPLIN,[F:SOQ]SOQSEQ)
&                            From TRTVENLIV
                        If GOK<=0 Return Endif
                     Endif
                  Endif
               Endif
               # Issue X3-69499 - 2018-02-14 by TS
               #If [F:SDH]CFMFLG=2                  :# Livraison validée
               If [F:SDH]CFMFLG=2 | [F:SDD]LINCFMFLG=2 :# Livraison ou ligne validée
               # End issue X3-69499
                  [F:SOQ]DLVQTY    = [F:SDD]QTY
                  [F:SOQ]DLVQTYSTU = [F:SDD]QTYSTU
               Else
                  [F:SOQ]ODLQTY    = [F:SDD]QTY
                  [F:SOQ]ODLQTYSTU = [F:SDD]QTYSTU
               Endif
               [F:SOQ]SOQSTA = 3

    When "A" : If [F:SOH]BETFCY<>2                 :# Maj A/R si pas I-S
                  [F:SOC]DLVQTYCUM -= [F:SDD]QTY   :# Annulation de ligne
                  MNTCALC = [F:SDD]QTY*[F:SDD]NETPRI
                  Call ARRDEV (MNTCALC,[F:SOH]CUR) From TRTDIV
                  [F:SOC]CPLAMT -= MNTCALC
                  If [F:SOQ]DEMDLVDAT<date$        :# Ligne réactivée en retard
                     [F:SOC]EARQTY += [F:SDD]QTY
                     [F:SOC]EARDAT  = date$-1
                  Endif
               Endif
               If [F:SOQ]DEMDLVDAT<date$           :# Ligne réactivée en retard
                  [F:SOQ]SOQSTA = 2
               Else                                :# Ligne réactivée en attente
                  [F:SOQ]SOQSTA = 1
               Endif
               # Issue X3-69499 - 2018-02-14 by TS
               #If [F:SDH]CFMFLG=2                  :# Livraison validée
               If [F:SDH]CFMFLG=2 | [F:SDD]LINCFMFLG=2 :# Livraison ou ligne validée
               # End issue X3-69499
                  [F:SOQ]DLVQTY    = 0
                  [F:SOQ]DLVQTYSTU = 0
               Else
                  [F:SOQ]ODLQTY    = 0
                  [F:SOQ]ODLQTYSTU = 0

                  # On annule un BL et la ligne de BL est issue d'un BP
                  # --> maj de la quantité préparée
                  If GREP="A" & [F:SDD]PRHNUM<>""
                     #--- Bug 74670
                     #[F:SOQ]PREQTY    = -1*DELTAQTY
                     #[F:SOQ]PREQTYSTU = -1*DELTAQTYSTU
                     Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
                     If !fstat & [F:PRE]FLGANN<>1
                       # Issue X3-235422 - 2021-02-17 by MUARN : update prepared quantity by quantity on pick ticket
                       #[F:SOQ]PREQTY    = -1*DELTAQTY
                       #[F:SOQ]PREQTYSTU = -1*DELTAQTYSTU
                       [F:SOQ]PREQTYSTU = [F:PRE]QTYSTU
                       Call CNVQTY([F:SOQ]PREQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]PREQTY) From TRTVENQTE
                       # End issue X3-235422
                     Endif
                     #---
                  Endif

               Endif
               [F:SOQ]SDHNUM = ""
               [F:SOQ]SDDLIN = 0
   Endcase
   # Maj de l'enregistrement A/R si pas inter-sites
   If [F:SOH]BETFCY<>2 Rewrite [SOC] Endif

#--- Si ligne de commande classique
Else
   # Issue X3-69499 - 2018-02-14 by TS
   #If [F:SDH]CFMFLG=2                  :# Livraison validée
   If [F:SDH]CFMFLG=2 | [F:SDD]LINCFMFLG=2 :# Livraison ou ligne validée
   # End issue X3-69499
      [F:SOQ]DLVQTY    += DELTAQTY
      [F:SOQ]DLVQTYSTU += DELTAQTYSTU
   Else
      [F:SOQ]ODLQTY    += DELTAQTY
      [F:SOQ]ODLQTYSTU += DELTAQTYSTU
      # On annule un BL et la ligne de BL est issue d'un BP
      # --> maj de la quantité préparée
      If GREP="A" & [F:SDD]PRHNUM<>""
         #--- 74670
         #[F:SOQ]PREQTY    -= DELTAQTY
         #[F:SOQ]PREQTYSTU -= DELTAQTYSTU
         Read [PRE]PRE0=[F:SDD]PRHNUM;[F:SDD]PRELIN
         If !fstat & [F:PRE]FLGANN<>1
            # Issue X3-235422 - 2021-02-17 by MUARN : update prepared quantity by quantity on pick ticket
            #[F:SOQ]PREQTY    -= DELTAQTY
            #[F:SOQ]PREQTYSTU -= DELTAQTYSTU
            [F:SOQ]PREQTYSTU = [F:PRE]QTYSTU
            Call CNVQTY([F:SOQ]PREQTYSTU,WSTUSAUCOE,WSAU,[F:SOQ]PREQTY) From TRTVENQTE
            # End issue X3-235422
         Endif
         #---
      Endif
   Endif

   # Recherche nouveau no dernière livraison
   If [F:SOQ]ODLQTY+[F:SOQ]DLVQTY=0
      [F:SOQ]SDHNUM = ""
      [F:SOQ]SDDLIN = 0
   Else
      If TRTLIG="A" Call RECH_DERLIVSOQ() From SUBSDHB Endif
   Endif
Endif

# Si ligne commande soldée
If [F:SOQ]SOQSTA = 3
   # S'il existe encore des allocations ou des ruptures, on les suppriment
   If [F:SOQ]ALLQTYSTU <> 0 | [F:SOQ]SHTQTYSTU <> 0
      Call DELALL(2,[F:SOQ]SOHNUM,[F:SOQ]SOPLIN,[F:SOQ]SOQSEQ,[F:SOQ]ITMREF,
&                 0,WQTY,WSHT,WRET) From STKALL
      If WRET<>0 Return Endif
      [F:SOQ]ALLQTY    = 0
      [F:SOQ]ALLQTYSTU = 0
      [F:SOQ]SHTQTY    = 0
      [F:SOQ]SHTQTYSTU = 0
   Endif
Endif

# Récriture du détail commande (SOP) si cde normale
If [F:SDD]SOHCAT <> 4
   [F:SOP]SOQSTA = [F:SOQ]SOQSTA
   Rewrite [SOP]
   If fstat : GOK = 0 : Call FSTA("SOP") From GLOCK : Return : Endif
Endif

# Récriture du détail commande (SOQ)
Rewrite [SOQ]
If fstat : GOK = 0 : Call FSTA("SOQ") From GLOCK : Return : Endif

#----------------------------------------------------------#
# Maj de l'en-cours pour qte allouée, en rupture et livrée #
#----------------------------------------------------------#
If [F:SOQ]STOMGTCOD = 1 Return : Endif
WCPLQTY = [F:SOQ]DLVQTYSTU

WTRTORD = "M"

## Gestion des signatures : Si la cde n'est pas si signée et pas de maj des encours si cde non signée
## Qté prévue = Reste à livrer et non la qté cdée
#If [F:SOH]APPFLG=1 & GSOHAPPORD=1 WTRTORD = "S" Endif

Gosub APPELWIP From TRTVENMAJ
If GOK < 1 Return Endif

#--------------
# Gestion des signatures : Si la cde n'est pas si signée et pas de maj des encours si cde non signée
# --> Il faut diminuer l'encde
# Issue X3-69499 - 2018-02-14 by TS
#If [F:SDH]CFMFLG=1 & [F:SOH]APPFLG=1 & GSOHAPPORD=1 & WSALSTOSTU<>0
If [F:SDD]LINCFMFLG<>2 & [F:SOH]APPFLG=1 & GSOHAPPORD=1 & WSALSTOSTU<>0
# End issue X3-69499
    #----------------------------------------------------#
    # Maj de l'en-cde client dans les mouvements article #
    #----------------------------------------------------#
    Local Char WSENS
    WSENS = "+"
    If WSALSTOSTU<0
        WSALSTOSTU = WSALSTOSTU*(-1)
        WSENS   = "-"
    Endif
    Call  MAJITVVEN ([F:SOQ]ITMREF, [F:SOQ]STOFCY, WSALSTOSTU, WSENS, "S", WRET) From TRTVENMAJ
    If GOK<=0  Return : Endif
Endif
#--------------

# v6 affectations
Gosub MAJ_MTO_SOQ From SALMTOLIB
Return

#########################################################################
$MAJLIGSST

#-------------------------------------#
# Maj matière ordre de sous-traitance #
#-------------------------------------#
Local  Integer  STAT, WRMN, WSOQSTA
Local  Decimal  WDIFF, WDIFFSTU, WCPLQTY, MNTCALC
Local  Decimal  WPREQTYSTU, WPREQTY
Local  Char     WTRTORD
Local  Decimal  WSTUSAUCOE
Local  Char     WSAU(GLONUOM)

#--- Bug 81161
Local Char    WNUMORI
Local Integer WLINORI, WSEQORI
If [F:SDD]VCRTYPORI=36
   WNUMORI = [F:SDD]VCRNUMORI
   WLINORI = [F:SDD]VCRLINORI
   WSEQORI = [F:SDD]VCRSEQORI
Elsif [F:SDD]VCRTYPORI=3
   WNUMORI = [F:PRE]ORINUM
   WLINORI = [F:PRE]ORILIN
   WSEQORI = [F:PRE]ORISEQ
Endif
# Bug 69252
# Si Ordre de sous-traitance bloqué logiquement --> Abandon
#If !clalev([F:SCO])  Local File SCOHEAD     [SCO]   Endif : # Bug 70830
#SYMBOLE2="SCO"+[F:SDD]VCRNUMORI : Lock=SYMBOLE2
#If fstat
#    GMESSAGE="$SCOHEAD"-[F:SDD]VCRNUMORI-mess(10,100,1)
#    GOK=0 : Return
#Endif
# Bug 69252
#Readlock [SCM]SCM0=[F:SDD]VCRNUMORI;[F:SDD]VCRLINORI;[F:SDD]VCRSEQORI
#If fstat=1
#   GLOCK="$SCOMAT"-[F:SDD]VCRNUMORI-num$([F:SDD]VCRLINORI)-num$([F:SDD]VCRSEQORI)
#   GOK=-1 : Return
#Elsif fstat
#   Call RSTA ("SCM",[F:SDD]VCRNUMORI-num$([F:SDD]VCRLINORI)-num$([F:SDD]VCRSEQORI))
#&             From GLOCK
#   GOK=0 : Return
#Endif

# Issue X3-143633 - 20191203 by LD
# Delivery by picking a subcontracting shortage creates an allocation upon EOF
If !clalev([F:SCO])  Local File SCOHEAD [SCO]   Endif
If !clalev([F:SCI])  Local File SCOITM  [SCI]   Endif
Read [SCO]SCO0=WNUMORI
If fstat
   Call RSTA ("SCO",WNUMORI) From GLOCK : GOK=0 : Return
Endif
Read [SCI]SCI0=WNUMORI;WLINORI
If fstat
   Call RSTA ("SCI",WNUMORI-num$(WLINORI)) From GLOCK : GOK=0 : Return
Endif
# Issue X3-143633 - 20191203 by LD

SYMBOLE2="SCO"+WNUMORI : Lock=SYMBOLE2
If fstat
    GMESSAGE="$SCOHEAD"-WNUMORI-mess(10,100,1)
    GOK=0 : Return
Endif
Readlock [SCM]SCM0=WNUMORI;WLINORI;WSEQORI
If fstat=1
   GLOCK="$SCOMAT"-WNUMORI-num$(WLINORI)-num$(WSEQORI)
   GOK=-1 : Return
Elsif fstat
   Call RSTA ("SCM",WNUMORI-num$(WLINORI)-num$(WSEQORI))
&             From GLOCK
   GOK=0 : Return
Endif
#---

Case TRTLIG
 When "C" : [F:SCM]SHTQTY -= [M:ALP]DESQTYSHT
 When "M" : If DELTAQTYSTU>0
               [F:SCM]SHTQTY -= [M:ALP]DESQTYSHT
            Else
               [F:SCM]SHTQTY += [M:ALP]DESQTYSHT
            Endif
 When "A" : [F:SCM]SHTQTY += [M:ALP]DESQTYSHT
Endcase

#--- Bug 86018
If [F:SCM]SHTQTY<=0
  If [F:SCM]ALLQTY=0
    [F:SCM]ALLSTA=1
  Elsif [F:SCM]ALLQTY>0
    If [F:SCM]ALLSTA>=4
      [F:SCM]ALLSTA=5
    Elsif [F:SCM]ALLSTA>=2
      [F:SCM]ALLSTA=3
    Endif
  Endif
Endif
#---

Rewrite [SCM]
If fstat : GOK = 0 : Call FSTA("SCM") From GLOCK : Return : Endif

# Issue X3-143633 - 20191203 by LD
# Delivery by picking a subcontracting shortage creates an allocation upon EOF
# We need to update the shortage qty on the orders record (WIPTYP=Subcontracted material)
Call UPDATE_MSX("M", 0) From SCOLIB
If GOK<1 : Return : Endif
# Issue X3-143633 - 20191203 by LD

# Issue X3-203129 - 20200707 by LD
If dim(SAVACT) >= 0 and find(SAVACT,"MODIF","CREATION","ANNULE") Then
  Default File [SDD]
Else
  Default File [LSDD]
Endif
# Issue X3-203129 - 20200707 by LD

Return

#########################################################################
$MAJLASDLV_CDE
#---------------------------------------#
# Bug 15380 pour les US                 #
# Recherche dernière liv de la commande #
#---------------------------------------#

# La commande a-t-elle déjà été traitée sur les lignes précédentes
If find([F:SDD]SOHNUM,[M:SDH1]XSOHNUM(0..NOL-1)) Return : Endif

# Lecture avec lock de l'entête commande
Readlock [SOH] SOH0=[F:SDD]SOHNUM
If fstat = 1 GOK = -1
   GLOCK = "$SORDER"-[F:SDD]SOHNUM
   Return
Elsif fstat  GOK =  0
   Call RSTA ("SOH",[F:SDD]SOHNUM) From GLOCK
   Return
Endif

# On est déjà sur la dernière liv. et nvlle date>date dern.liv, c'est tjs la dernière liv.
If [F:SOH]LASDLVNUM = [F:SDD]SDHNUM & [F:SDD]SHIDAT > [F:SOH]LASDLVDAT
    [F:SOH]LASDLVDAT = [F:SDD]SHIDAT
# On est sur une autre liv. et nvlle date>date dern.liv, c'est cette liv. qui devient la dernière
Elsif [F:SDD]SHIDAT > [F:SOH]LASDLVDAT
    [F:SOH]LASDLVNUM = [F:SDD]SDHNUM
    [F:SOH]LASDLVDAT = [F:SDD]SHIDAT
Else
    Call RECH_DERLIVSOH(TRTLIG) From SUBSDHB
Endif
# Récriture de l'entête commande (SOH)
Rewrite [SOH]
If fstat : GOK = 0 : Call FSTA("SOH") From GLOCK : Return : Endif

Return

#########################################################################
$MAJENTCDE
#---------------------------------------------#
# Maj entête de commande (traitement général) #
#---------------------------------------------#
Local  Decimal  MNTCALC, QTECALC

# La ligne de commande qui est en ligne n'est pas encore maj
# (sauf [F:SOQ]SOQSTA,ALLQTY,ALLQTYSTU,SHTQTY,SHTQTYSTU,TDLQTY,TDLQTYSTU)
# (et   [F:SOQ]PREQTY,PREQTYSTU)
# Lecture avec lock de l'entête commande
Readlock [SOH] SOH0=[F:SDD]SOHNUM
If fstat=1
   GLOCK = "$SORDER"-[F:SDD]SOHNUM
   GOK=-1 : Return
Elsif fstat
   Call RSTA ("SOH",[F:SDD]SOHNUM) From GLOCK
     GOK=0 : Return
Endif

Case TRTLIG
   When "C" : Gosub MAJENTCDE_CRE
   When "M" : Gosub MAJENTCDE_MOD
              If YSHIDAT <> [F:SDD]SHIDAT
                 Call RECH_DERLIVSOH(TRTLIG) From SUBSDHB
              Endif
   When "A" : Gosub MAJENTCDE_ANN
Endcase

# Récriture de l'entête commande (SOH)
Rewrite [SOH]
If fstat : GOK = 0 : Call FSTA("SOH") From GLOCK : Return : Endif

# Maj si cde signée ou Si Paramètre maj encours client cde non signée à "Oui" et cde non intra-société
# X3-1152 : Non invoiceable deliveries
#If ([F:SOH]APPFLG>2 | GSOHAPPOST=2) & !([F:SOH]BETFCY=2 & [F:SOH]BETCPY<=1)
If ([F:SOH]APPFLG>2 | GSOHAPPOST=2) & !([F:SOH]BETFCY=2 & [F:SOH]BETCPY<=1)
&   & !([M:SDH0]SDHCAT=4) # X3-88913 (LCC 18/05/18) Customer credit limit is doubling the amount
# X3-1152 : Non invoiceable deliveries
    # Maj mouvement client (en commande)
    WSENS = "+"
    If WCDETTC < 0
       WCDETTC = WCDETTC*(-1)
       WCDEHT  = WCDEHT *(-1)
       WSENS   = "-"
    Endif
    If val(func AFNC.PARAM("ZVPCONCRED","")) = 1 or GZPRHSOH = 0 Then     # 06.317.883.new
      Call MAJMVC ([F:SOH]BPCORD, [F:SOH]CUR, [F:SOH]CHGTYP, 0, [F:SOH]ORDDAT, [F:SOH]SOHNUM, [F:SOH]SALFCY,
&                 WCDEHT, WCDETTC, WSENS, "F", "", [F:SOH]SOHCAT) From TRTBPMVT
    Endif                                                                 # 06.317.883.new
    If GOK<1 Return Endif
    Raz WCDETTC, WCDEHT
Endif
Return

#########################################################################
$MAJENTCDE_CRE
#-------------------------------------------------#
# Maj entête de commande en création de ligne     #
#-------------------------------------------------#
# La ligne de commande qui est en ligne n'est pas encore maj
# (sauf [F:SOQ]SOQSTA,ALLQTY,ALLQTYSTU,SHTQTY,SHTQTYSTU,TDLQTY,TDLQTYSTU)
# (et   [F:SOQ]PREQTY,PREQTYSTU)

#-------------------------------------------------#
# Recalcul de l'état solde                        #
#-------------------------------------------------#
# La ligne de commande n'était pas soldée, et elle le devient
If WSOQSTA <> 3 & [F:SOQ]SOQSTA = 3
   [F:SOH]CLELINNBR += 1
   If [F:SOH]CLELINNBR >= [F:SOH]LINNBR
      [F:SOH]ORDSTA = 2
   Endif
Endif

#-------------------------------------------------#
# Recalcul de l'état allocation                   #
#-------------------------------------------------#
# Ancien cumul (alloué + en prépa + préparé + en liv + livré)
QTECALC = WALLQTYSTU+[F:SOQ]OPRQTYSTU+WPREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
If [F:SOQ]STOMGTCOD <> 1
   # Il restait quelque chose à allouer sur la ligne de commande
   If QTECALC < [F:SOQ]QTYSTU
      # Le cumul doit tenir compte de la nouvelle quantité allouée
      QTECALC = [F:SOQ]ALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
      # Il n'y a plus rien à allouer sur la ligne de commande
      If QTECALC + DELTAQTYSTU >= [F:SOQ]QTYSTU
         If [F:SOH]ALLLINNBR>0 [F:SOH]ALLLINNBR -= 1 Endif
         If [F:SOH]ALLLINNBR=0
            # La cde devient allouée
            [F:SOH]ALLSTA = 3
         Else
            # La cde devient partiellement allouée
            [F:SOH]ALLSTA = 2
         Endif
      Endif
   Endif
Endif
# Bug 49166 : Une commande soldée est considérée comme non allouée
If [F:SOH]ORDSTA = 2 [F:SOH]ALLSTA=1 : [F:SOH]ALLLINNBR=0 Endif

#-------------------------------------------------#
# Recalcul de l'état facture                      #
#-------------------------------------------------#
# Ancien cumul (en liv + livré)
QTECALC = [F:SOQ]DLVQTYSTU+[F:SOQ]ODLQTYSTU

If [F:SOH]DLVSTA<>3 [F:SOH]DLVSTA=2 Endif
# La ligne de commande n'était pas livrée
If QTECALC < [F:SOQ]QTYSTU
   # La ligne de commande devient livrée
   If QTECALC + DELTAQTYSTU >= [F:SOQ]QTYSTU
      [F:SOH]DLVLINNBR += 1
      # La cde devient livrée
      If [F:SOH]DLVLINNBR >= [F:SOH]LINNBR
         [F:SOH]DLVSTA = 3
      Endif
   Endif
Endif

#-------------------------------------------------#
# Maj des montants à livrer HT et TTC             #
#-------------------------------------------------#
If [F:SOH]ORDSTA = 2
   [F:SOH]DLRNOT = 0
   [F:SOH]DLRATI = 0
Else
   #On décrémente du min de la qté livrée et de ce qu'il restait à livrer
   QTECALC = min(DELTAQTY,WDIFF)
   MNTCALC = QTECALC * [F:SOP]NETPRINOT
   Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
   [F:SOH]DLRNOT -= MNTCALC
   MNTCALC = QTECALC * [F:SOP]NETPRIATI
   Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
   [F:SOH]DLRATI -= MNTCALC
Endif

#-------------------------------------------------#
# Maj de l'en commande client                     #
#-------------------------------------------------#
Raz WCDEHT, WCDETTC
Raz WSALSTOSTU : # Gestion des signatures
# Si Qté livré > Ce qu'il restait à livrer
# alors on décrémente l'en cde de ce qu'il restait à livrer
If DELTAQTY > WDIFF
   WCDETTC = (WDIFF*[F:SOP]NETPRIATI)*(-1)
   WCDEHT  = (WDIFF*[F:SOP]NETPRINOT)*(-1)
# Si Qté livré <= Ce qu'il restait à livrer
# alors on décrémente l'en cde de la quantité livrée
Else
   WCDETTC = (DELTAQTY*[F:SOP]NETPRIATI)*(-1)
   WCDEHT  = (DELTAQTY*[F:SOP]NETPRINOT)*(-1)
Endif

# Maj no dernière livraison
[F:SOH]LASDLVNUM  = [F:SDH]SDHNUM
[F:SOH]LASDLVDAT  = [F:SDH]SHIDAT

Return

#########################################################################
$MAJENTCDE_MOD
#-------------------------------------------------#
# Maj entête de commande en modification de ligne #
#-------------------------------------------------#
# La ligne de commande qui est en ligne n'est pas encore maj
# (sauf [F:SOQ]SOQSTA,ALLQTY,ALLQTYSTU,SHTQTY,SHTQTYSTU,TDLQTY,TDLQTYSTU)

#-------------------------------------------------#
# Recalcul de l'état solde                        #
#-------------------------------------------------#
# La ligne de commande était soldée, et elle ne l'est plus
If WSOQSTA = 3 & [F:SOQ]SOQSTA <> 3
   [F:SOH]CLELINNBR -= 1
   [F:SOH]ORDSTA     = 1
Endif
# La ligne de commande n'était pas soldée, et elle le devient
If WSOQSTA <> 3 & [F:SOQ]SOQSTA = 3
   [F:SOH]CLELINNBR += 1
   If [F:SOH]CLELINNBR >= [F:SOH]LINNBR
      [F:SOH]ORDSTA = 2
   Endif
Endif

#-------------------------------------------------#
# Recalcul de l'état allocation                   #
#-------------------------------------------------#
# Ancien cumul (alloué + en liv + livré)
QTECALC = WALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU

If [F:SOQ]STOMGTCOD <> 1
   # Il n'y avait plus rien à allouer sur la ligne de commande
   If QTECALC >= [F:SOQ]QTYSTU
      # Le cumul doit tenir compte de la nouvelle quantité allouée
      QTECALC = [F:SOQ]ALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
      # Il n'y a toujours rien à alloué
      If QTECALC + DELTAQTYSTU >= [F:SOQ]QTYSTU
         If [F:SOH]ALLLINNBR=0
            # La cde devient allouée
            [F:SOH]ALLSTA = 3
         Else
            # La cde devient partiellement allouée
            [F:SOH]ALLSTA = 2
         Endif
      # Il y a maintenant une quantité à allouer sur la ligne de commande
      Else
         [F:SOH]ALLLINNBR += 1
         If [F:SOH]ALLLINNBR>=[F:SOH]LINNBR
            # La cde devient non allouée
            [F:SOH]ALLSTA = 1
         Else
            # La cde devient partiellement allouée
            # On ne sait pas déterminer si la cde devient partiellement allouée ou non allouée
            # (Si aucune autre ligne gérée en stock, la cde est non allouée)
            [F:SOH]ALLSTA = 2
         Endif
      Endif
   # Il restait quelque chose à allouer sur la ligne de commande
   Else
      # Le cumul doit tenir compte de la nouvelle quantité allouée
      QTECALC = [F:SOQ]ALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
      # Il reste toujours une quantité à allouer
      If QTECALC + DELTAQTYSTU < [F:SOQ]QTYSTU
         If [F:SOH]ALLLINNBR>=[F:SOH]LINNBR
            # La cde reste non allouée
            [F:SOH]ALLSTA = 1
         Else
            # La cde reste partiellement allouée
            [F:SOH]ALLSTA = 2
         Endif
      # Il n'y a plus rien à allouer sur la ligne de commande
      Else
         If [F:SOH]ALLLINNBR>0 [F:SOH]ALLLINNBR -= 1 Endif
         If [F:SOH]ALLLINNBR=0
            # La cde devient allouée
            [F:SOH]ALLSTA = 3
         Else
            # La cde devient partiellement allouée
            [F:SOH]ALLSTA = 2
         Endif
      Endif
   Endif
Endif
# Bug 49166 : Une commande soldée est considérée comme non allouée
If [F:SOH]ORDSTA = 2 [F:SOH]ALLSTA=1 : [F:SOH]ALLLINNBR=0 Endif

#-------------------------------------------------#
# Recalcul de l'état facture                      #
#-------------------------------------------------#
# Ancien cumul (en liv + livré)
QTECALC = [F:SOQ]DLVQTYSTU+[F:SOQ]ODLQTYSTU
# La ligne de commande était livrée
If QTECALC >= [F:SOQ]QTYSTU
   # La ligne de commande n'est plus livrée
   If QTECALC + DELTAQTYSTU < [F:SOQ]QTYSTU
      [F:SOH]DLVLINNBR -= 1
      If [F:SOH]DLVLINNBR=0 & (QTECALC + DELTAQTYSTU)=0 : # Bug 55232
         # La cde devient non livrée
         [F:SOH]DLVSTA = 1
      Else
         # La cde devient partiellement livrée
         [F:SOH]DLVSTA = 2
      Endif
   Endif
   # Si plus de lignes livrées en totalité, y en a t-il qui le sont partiellement?
   # Permet de recalculer l'état de la commande (partiellement livrée)
   If [F:SOH]DLVLINNBR = 0
      For [SDD1]SDD1 Where SOHNUM=[F:SOQ]SOHNUM
         If [F:SDD1]SDHNUM<>[F:SDD]SDHNUM | [F:SDD1]SDDLIN<>[F:SDD]SDDLIN
            [F:SOH]DLVSTA=2 : Break
         Endif
      Next
   Endif
# La ligne de commande n'était pas livrée
Else
   # La ligne de commande devient livrée
   If QTECALC + DELTAQTYSTU >= [F:SOQ]QTYSTU
      [F:SOH]DLVLINNBR += 1
      If [F:SOH]DLVLINNBR>=[F:SOH]LINNBR
         # La cde devient livrée
         [F:SOH]DLVSTA = 3
      Else
         # La cde devient partiellement livrée
         [F:SOH]DLVSTA = 2
      Endif
   Endif
Endif

#-------------------------------------------------#
# Maj des montants à livrer HT et TTC             #
#-------------------------------------------------#
# Ecart entre qte cde et qte liv de la ligne cde
ECARTQTY = [F:SOQ]QTY-([F:SOQ]ODLQTY+[F:SOQ]DLVQTY)
If [F:SOH]ORDSTA = 2
   [F:SOH]DLRNOT = 0
   [F:SOH]DLRATI = 0
Else
   If ECARTQTY > 0
      If DELTAQTY<ECARTQTY
         QTECALC = DELTAQTY
      Else
         QTECALC = ECARTQTY
      Endif
   Else
      If DELTAQTY<ECARTQTY
         QTECALC = DELTAQTY-ECARTQTY
      Else
         QTECALC = 0
      Endif
   Endif
   MNTCALC = QTECALC * [F:SOP]NETPRINOT
   Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
   [F:SOH]DLRNOT -= MNTCALC
   MNTCALC = QTECALC * [F:SOP]NETPRIATI
   Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
   [F:SOH]DLRATI -= MNTCALC
Endif

#-------------------------------------------------#
# Maj de l'en commande client                     #
#-------------------------------------------------#
Raz WCDEHT, WCDETTC

Raz WSALSTOSTU : # Signature commandes

# Diminution de la qte livrée
If DELTAQTY<0
   # Si la ligne cde n'était pas soldée, on annule ce qu'il restait à livrer
   If WSOQSTA<>3  WDIFF=0  : WDIFFSTU=0 : Endif
   # Si diminution qte livrée < (qte liv-qte cde) de la cde, pas de maj
#   If WDIFF>0 | (WDIFF<=0 & [F:SDD]QTY>WDIFF*(-1))
      # Augmentation de l'en cde
      If (WDIFF-DELTAQTY)>0
         WCDETTC = (WDIFF-DELTAQTY)*[F:SOP]NETPRIATI
         WCDEHT  = (WDIFF-DELTAQTY)*[F:SOP]NETPRINOT
#         WSALSTOSTU = WDIFFSTU-DELTAQTYSTU            : # Signature commandes
         WSALSTOSTU = (WDIFFSTU-DELTAQTYSTU)*-1            : # Signature commandes
      Endif
#   Endif
# Augmentation de la qte livré
Else
   # La ligne cde n'était pas soldée (pas de maj si la ligne était soldée)
   If WSOQSTA<>3
      # Si Qté livré en plus > Ce qu'il restait à livrer
      # alors on décrémente l'en cde de ce qu'il restait à livrer
      If DELTAQTY>WDIFF
         WCDETTC = (WDIFF*[F:SOP]NETPRIATI)*(-1)
         WCDEHT  = (WDIFF*[F:SOP]NETPRINOT)*(-1)
#         WSALSTOSTU = WDIFFSTU*(-1)                   : # Signature commandes
         WSALSTOSTU = WDIFFSTU                   : # Signature commandes
      # Si Qté livré en plus <= Ce qu'il restait à livrer
      # alors on décrémente l'en cde de la quantité livrée en plus
      Else
         WCDETTC = (DELTAQTY*[F:SOP]NETPRIATI)*(-1)
         WCDEHT  = (DELTAQTY*[F:SOP]NETPRINOT)*(-1)
#         WSALSTOSTU = DELTAQTYSTU*(-1)                : # Signature commandes
         WSALSTOSTU = DELTAQTYSTU                : # Signature commandes
      Endif
   Endif
Endif

Return

#########################################################################
$MAJENTCDE_ANN
#-------------------------------------------------#
# Maj entête de commande en annulation de ligne   #
#-------------------------------------------------#
# La ligne de commande qui est en ligne n'est pas encore maj
# (sauf [F:SOQ]SOQSTA,ALLQTY,ALLQTYSTU,SHTQTY,SHTQTYSTU,TDLQTY,TDLQTYSTU)

#-------------------------------------------------#
# Recalcul de l'état solde                        #
#-------------------------------------------------#
# La ligne de commande était soldée, et elle ne l'est plus
If WSOQSTA = 3 & [F:SOQ]SOQSTA <> 3
   [F:SOH]CLELINNBR -= 1
   [F:SOH]ORDSTA     = 1
Endif

#-------------------------------------------------#
# Recalcul de l'état allocation                   #
#-------------------------------------------------#
QTECALC = WALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU

If [F:SOQ]STOMGTCOD <> 1
   # Il n'y avait plus rien à allouer sur la ligne de commande
   If QTECALC >= [F:SOQ]QTYSTU
      # Le cumul doit tenir compte de la nouvelle quantité allouée
      QTECALC = [F:SOQ]ALLQTYSTU+[F:SOQ]OPRQTYSTU+[F:SOQ]PREQTYSTU+[F:SOQ]ODLQTYSTU+[F:SOQ]DLVQTYSTU
      # Il n'y a toujours rien à alloué
      If QTECALC + DELTAQTYSTU >= [F:SOQ]QTYSTU
         If [F:SOH]ALLLINNBR=0
            # La cde devient allouée
            [F:SOH]ALLSTA = 3
         Else
            # La cde devient partiellement allouée
            [F:SOH]ALLSTA = 2
         Endif
      # Il y a maintenant une quantité à allouer sur la ligne de commande
      Else
         [F:SOH]ALLLINNBR += 1
         If [F:SOH]ALLLINNBR>=[F:SOH]LINNBR
            # La cde devient non allouée
            [F:SOH]ALLSTA = 1
         Else
            # La cde devient partiellement allouée
            # On ne sait pas déterminer si la cde devient partiellement allouée ou non allouée
            # (Si aucune autre ligne gérée en stock, la cde est non allouée)
            [F:SOH]ALLSTA = 2
         Endif
      Endif
   Endif
Endif

#-------------------------------------------------#
# Recalcul de l'état facture                      #
#-------------------------------------------------#
# Ancien cumul (en liv + livré)
QTECALC = [F:SOQ]DLVQTYSTU + [F:SOQ]ODLQTYSTU
# La ligne de commande était livrée
If QTECALC >= [F:SOQ]QTYSTU
   # La ligne de commande n'est plus livrée
   If QTECALC + DELTAQTYSTU < [F:SOQ]QTYSTU
      [F:SOH]DLVLINNBR -= 1
      If [F:SOH]DLVLINNBR=0
         # La cde devient non livrée
         [F:SOH]DLVSTA = 1
      Else
         # La cde devient partiellement livrée
         [F:SOH]DLVSTA = 2
      Endif
   Endif
Endif

# Si plus de lignes livrées en totalité, y en a t-il qui le sont partiellement?
# Permet de recalculer l'état de la commande (partiellement livrée)
If [F:SOH]DLVLINNBR = 0
   [F:SOH]DLVSTA = 1
   For [SDD1]SDD1 Where SOHNUM=[F:SOQ]SOHNUM
      # 102588 : Pb avec maj DLVSTA sur SOH : vaut 2 au lieu de 1 si plus d'une ligne sur la livraison
      # En suppress. complète d'une liv, les lignes ne sont supprimées qu'après traitement de ttes les lignes
      # --> Içi, les lignes ne sont pas encore supprimées : Il faut rechercher uniquement les autres livraisons
      #If [F:SDD1]SDHNUM<>[F:SDD]SDHNUM | [F:SDD1]SDDLIN<>[F:SDD]SDDLIN
      If [F:SDD1]SDHNUM<>[F:SDD]SDHNUM
      # 102588
         [F:SOH]DLVSTA=2 : Break
      Endif
   Next
Endif

#-------------------------------------------------#
# Maj des montants à livrer HT et TTC             #
#-------------------------------------------------#
If [F:SOH]ORDSTA = 2
   [F:SOH]DLRNOT =0
   [F:SOH]DLRATI =0
Else
   QTECALC = [F:SDD]QTY
   # La quantité déjà livrée était > à la quantité commandée
   If ([F:SOQ]ODLQTY+[F:SOQ]DLVQTY) > [F:SOQ]QTY
      QTECALC = QTECALC - ([F:SOQ]ODLQTY+[F:SOQ]DLVQTY-[F:SOQ]QTY)
   Endif
   If QTECALC>0
      MNTCALC = QTECALC * [F:SOP]NETPRINOT
      Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
      [F:SOH]DLRNOT += MNTCALC
      MNTCALC = QTECALC * [F:SOP]NETPRIATI
      Call ARRDEV(MNTCALC,[F:SOH]CUR) From TRTDIV
      [F:SOH]DLRATI += MNTCALC
   Endif
Endif

#-------------------------------------------------#
# Maj de l'en commande client                     #
#-------------------------------------------------#
Raz WCDEHT, WCDETTC
Raz WSALSTOSTU : # Gestion des signatures

If WSOQSTA <> 3  WDIFF = 0 : WDIFFSTU=0 : Endif
# Si qte livrée supprimé < (qte liv-qte cde) de la cde, pas de maj
If WDIFF > 0 | (WDIFF <= 0 & [F:SDD]QTY > WDIFF*(-1))
   WCDETTC = ([F:SDD]QTY + WDIFF) * [F:SOP]NETPRIATI
   WCDEHT  = ([F:SDD]QTY + WDIFF) * [F:SOP]NETPRINOT
#   WSALSTOSTU = [F:SDD]QTYSTU + WDIFFSTU : # Gestion des signatures
   WSALSTOSTU = ([F:SDD]QTYSTU + WDIFFSTU)*-1 : # Gestion des signatures
Endif

#-------------------------------------------------#
# Recherche dernière liv de la commande           #
#-------------------------------------------------#
If GREP<>"A" | (GREP="A" & [F:SOH]SOHNUM<>SVGSOHNUM)
   SVGSOHNUM=[F:SOH]SOHNUM
   Call RECH_DERLIVSOH(TRTLIG) From SUBSDHB
Endif

Return

#########################################################################
$RECH_TARIF_TRSP
#-----------------------------------------------------------------------#
# Recherche tarif transporteur pour alimentation élément de facturation #
#-----------------------------------------------------------------------#
Local  Integer WDACDLV
Local  Char    WCRY
Local  Char    WCTY
Local  Char    WPOSCOD
Local  Char    LBPTARE
Local  Decimal LAMTFRE
Local  Char    FRELIB (1)
Local  Integer STAT, WOUV, WOUV2
Local  Integer WPOINT_ENTREE : WPOINT_ENTREE = 0

Read [SFI]SFI0=GFRENUM : # GSOCIETE;GFRENUM
If !fstat WDACDLV = [F:SFI]DACDLV Endif

If WDACDLV <> 0
   If [M:ADB2]BPRNAM(1)="" & [M:ADB2]BPAADDLIG(0)="" & [M:ADB2]POSCOD="" &
&     [M:ADB2]CTY="" & [M:ADB2]SAT="" & [M:ADB2]CRY=""
      Read [BPA]BPA0=1;[M:SDH0]BPCORD;[M:SDH0]BPAADD
      If ! fstat
         WCRY    = [F:BPA]CRY
         WCTY    = [F:BPA]CTY
         WPOSCOD = [F:BPA]POSCOD
      Endif
   Else
      WCRY    = [M:ADB2]CRY
      WCTY    = [M:ADB2]CTY
      WPOSCOD = [M:ADB2]POSCOD
   Endif

   #---------------------------------------------------------------------#
   # Point d'entree calcul port                                          #
   #---------------------------------------------------------------------#
   GPOINT="CALPORT" : Gosub ENTREE From EXEFNC
   # ACA (2010-03-09) Bug 63210 : On n'appelle pas TRANSPORT si pas de Transporteur
   If [M:SDH2]BPTNUM <> ""
     If WPOINT_ENTREE = 0
       Call TRANSPORT([M:SDH2]BPTNUM,[M:SDH0]BPCORD,[M:SDH0]STOFCY,WCRY,WCTY,WPOSCOD,
&                     [M:SDH1]CUR,[M:SDH0]CHGTYP,date$,[M:SDH1]DLVNOT,[M:SDH2]WEU,
&                     [M:SDH2]GROWEI,[M:SDH2]VOU,[M:SDH2]VOL,LBPTARE,LAMTFRE,FRELIB,STAT)
&                     From TRTPRICE
     Endif
#     If find(STAT,0,3,4,5)        : # Bug 74306 : Si gestion tarif inactive sur le transporteur, pas d'écrasement du mnt de l'élément port
     If find(STAT,0,4,5)           : # Bug 74306
        Local Integer WOK : WOK=2
        If find(GREP,"C","D","") & [M:SDH2]INVDTAAMT(WDACDLV-1)<>0
           Call OUINON (mess(116,191,1),WOK) From GESECRAN
        Endif
        If WOK=2
           [M:SDH2]INVDTAAMT(WDACDLV-1)=LAMTFRE
           Affzo [M:SDH2]25
        Endif
     Endif
   Endif
Endif

Return
#########################################################################

$CHARGE_STOSOR
#-----------------------------------------------------------------------#
# Chargement des paramètres dans masque STOSOR pour saisie des sorties  #
# Cette étiquette est appelée depuis CHARGE_PARAM From TRTSTOSORA       #
#-----------------------------------------------------------------------#
# Issue X3-64479/161959 - 2019-09-30 by MUARN : modification of a line task code
# Issue X3-184649 - 2020-02-28 by MUARN : declaration when needed
#  Local Integer IRET
#  Local Char SPROJECT(GLONPIM)
#  Local Char SBUDGET(GLONTAC)
#  Local Char STASK(GLONPBU)
# End issue X3-64479/161959

# Composant d'un kit/sous-traité
If find([M:SDH1]LINTYP(LNOL),3,4,5,11,12,13) GTYPLIG=1 Endif

[M:SOR]WSTOSEQ   = [M:SDH1]WSTOSEQ(LNOL)
[M:SOR]TRSTYP    = [M:SDH0]TRSTYP
[M:SOR]TRSCOD    = [M:SDH0]TRSCOD
If [M:SDH1]BETFCY=2
   [M:SOR]TRFFCY = [M:SDH1]PRHFCY
   [M:SOR]BETCPY = [M:SDH1]BETCPY
Else
   [M:SOR]TRFFCY = ""
   [M:SOR]BETCPY = 1
Endif
[M:SOR]BPRNUM    = [M:SDH0]BPCORD
[M:SOR]CUR       = [M:SDH1]CUR
[M:SOR]VCRTYP    = 4
[M:SOR]VCRNUM    = [M:SDH0]SDHNUM
[M:SOR]VCRLIN    = [M:SDH1]SDDLIN(LNOL)
[M:SOR]MVTDES    = [M:SDH1]MVTDES(LNOL)
[M:SOR]STU       = [M:SDH1]STU(LNOL)
[M:SOR]PCU       = [M:SDH1]SAU(LNOL)
[M:SOR]PCUSTUCOE = [M:SDH1]SAUSTUCOE(LNOL)
[M:SOR]SORQTY    = [M:SDH1]QTYSTU(LNOL)
[M:SOR]SORQTYACT = [M:SDH1]QTYSTU(LNOL)
[M:SOR]RETDAT    = [M:SDH1]SHIDAT
[M:SOR]DLVDAT    = [M:SDH1]DLVDAT
[M:SOR]PECINTLOC = 2
[M:SOR]PECPLFLOC = 2
[M:SOR]PECSCOLOC = 1
[M:SOR]PECQLYCTL = 1
[M:SOR]STOLOC    = ""
[M:SOR]XLOT      = [M:SDH1]LOTFIL(LNOL)
[M:SOR]XLOC      = [M:SDH1]LOCFIL(LNOL)
[M:SOR]XSTA      = [M:SDH1]STAFIL(LNOL)
[M:SOR]CCECODS   = GSTODIE
[M:SOR]GLOALLQTY = 0
# FGR 04/05/2015 : X3SUIVI105605 (début)
If dim([M:SDH1]ECCVALMAJ) >= 0 Then
  [M:SOR]WECCVALMAJ = [M:SDH1]ECCVALMAJ(LNOL)
Endif
# FGR 04/05/2015 : X3SUIVI105605 (fin)
If dim([M:SDH1]WRH)>0 [M:SOR]XWRH=[M:SDH1]WRH(LNOL) Endif
# Si livraison d'une commande
If [M:SDH1]XSOHNUM(LNOL)<>""
   Read [SOQ]SOQ0=[M:SDH1]XSOHNUM(LNOL);[M:SDH1]SOPLIN(LNOL);[M:SDH1]SOQSEQ(LNOL)
   If !fstat & [F:SOQ]ALLTYP=1
      # Alimentation de la quantité allouée en global
      [M:SOR]GLOALLQTY = [F:SOQ]ALLQTYSTU
   Endif
   #--- Bug 41947
   # Si ligne en création, alimentation commande origine
   If [M:SDH1]CREFLG(LNOL)=0
      [M:SOR]VCRTYPORI = 2
      [M:SOR]VCRNUMORI = [M:SDH1]XSOHNUM(LNOL)
      [M:SOR]VCRLINORI = [M:SDH1]SOPLIN(LNOL)
      [M:SOR]VCRSEQORI = [M:SDH1]SOQSEQ(LNOL)
   Endif
   #---
Endif

# Issue X3-64479/161959 - 2019-09-30 by MUARN : modification of a line task code
If [M:SDH1]VCRTYPORI(LNOL)=40
   # Issue X3-184649 - 2020-02-28 by MUARN : declaration when needed
   Local Integer IRET
   Local Char SPROJECT(GLONPIM)
   Local Char SBUDGET(GLONTAC)
   Local Char STASK(GLONPBU)
   # End issue X3-184649
   IRET = func PIMPL_CSTD_PROGS.PJM_KEY_SPLIT(GACTX, [M:SDH1]DPJT(LNOL), SPROJECT, SBUDGET, STASK)
   Read [JTT]JTT0=SPROJECT;STASK;[M:SDH1]VCRLINORI(LNOL)
   If !fstat
      # Alimentation de la quantité allouée en global
      [M:SOR]GLOALLQTY = [F:JTT]ALLQTY
   Endif
   # Si ligne en création, alimentation commande origine
   If [M:SDH1]CREFLG(LNOL)=0
      [M:SOR]VCRTYPORI = 40
      [M:SOR]VCRNUMORI = [M:SDH1]VCRNUMORI(LNOL)
      [M:SOR]VCRLINORI = [M:SDH1]VCRLINORI(LNOL)
      [M:SOR]VCRSEQORI = 0
   Endif
Endif

Return

#########################################################################

$APRES_STOSOR
#-----------------------------------------------------------------------#
# Mise à jour complémentaires après enregistrement
# - Recalcul des quantités sorties US, UC de la ligne de document
# - Réalimentation des zones dépendant de la quantité
# - Coloriage de la ligne document si la quantité est nulle
# - etc ...
#
#   [M:SOR]NBLIG     contient le nombre de ligne de stock traité
#   [M:SOR]SORQTY    contient la quantité US qui était à sortir
#   [M:SOR]SORQTYACT contient la quantité en UA qui était à sortir
#   [M:SOR]PECQTY    contient la quantité US sortie
#   [M:SOR]PECQTYACT contient la quantité en UA sortie
#   [M:SOR]SHTQTY    contient la quantité manquante
#-----------------------------------------------------------------------#

# Pour l'instant si la quantité n'a pas été totalement traitée,
# on ne fait pas de recalcul de nouvelle quantité livrée
#If WGENR=1
#
#Endif

# Bug 53970 : Recalcul du prix de revient et de la marge (Ds le cas où valorisation au PMP du lot)
Call CALCPFM("[M:SDH1]",[M:SDH0]STOFCY,[M:SDH1]PRITYP,[M:SDH0]CHGTYP,[M:SDH1]SHIDAT,[M:SDH1]CUR,LNOL,2) From TRTVENPRI
Affzo [M:SDH1]CPRPRI(LNOL), PFM(LNOL)

Return

#########################################################################
$ETAT_ZONE
  # FGR 07/12/2011 : X3SUIVI71065 (début)
  If GPJTSNGDOC = G_NON Then
    Call PJT_MODFCY([M:SDH0]SALFCY, "[M:SDH1]DPJT") From TRTPJT
  Endif
  # FGR 07/12/2011 : X3SUIVI71065 (fin)

# Pas de saisie indicateur prêt si la transaction n'autorise pas tous les types
If GREP = "C" | GREP = "D"
   Actzo [M:SDH0]1-99
   Actzo [M:SDH1]1-99
   Actzo [M:SDH2]1-99
   # Issue X3-51179 - 2017-08-01 by CPO : On posted delivery we can update analytic section
   Actzo [M:SDH3]5,10,15 #Actzo [M:SDH3]5,10
   # End issue X3-51179
   Diszo [M:SDH0]SOHNUM
   Diszo [M:SDH1]SIHNUM
   Diszo [M:SDH2]PRFNUM
   If dim([M:SDH0]SCO) > 0
       If GREP="D"
           Diszo [M:SDH0]SCO
           If dim([M:SDH3]BPCLOC)>0
#               If sum([M]MFGNUM) <> "" Diszo [M:SDH3]BPCLOC Else Actzo [M:SDH3]BPCLOC Endif
               If sum([M]VCRNUMORI) <> "" Diszo [M:SDH3]BPCLOC Else Actzo [M:SDH3]BPCLOC Endif
           Endif
       Elsif GREP="C" & GDLVTYP=2 # On autorise que les prêts
           Diszo [M:SDH0]SCO
           If dim([M:SDH3]BPCLOC)>0 Diszo [M:SDH3]BPCLOC Endif
       Elsif GREP="C"
           Actzo [M:SDH0]SCO
           If dim([M:SDH3]BPCLOC)>0 Diszo [M:SDH3]BPCLOC Endif
       Endif
   Endif
   If GREP = "D"
      Diszo [M:SDH0]STOFCY, SALFCY, LND, BPCORD, BPAADD, BPCINV
      Diszo [M:SDH0]SDHTYP :#--CPO 75115 - 203 Nouveau champ SDHTYP
      Diszo [M:SDH1]CUR, PRITYP
   Else
      # X3-1152 : Non invoiceable deliveries
#     If GDLVTYP < 5  Diszo [M:SDH0]LND       Endif
      If GDLVTYP <> 4  Diszo [M:SDH0]LND       Endif
      # X3-1152 : Non invoiceable deliveries
      If GUPDCUR <> 2 Diszo [M:SDH1]CUR       Endif
      If GNOTATI <> 2 Diszo [M:SDH1]PRITYP    Endif
   Endif
#   If GDLVTYP = 1
#       If dim([M:SDH1]LNDRTNDAT) > 0 Grizo [M:SDH1]LNDRTNDAT Endif
#   Endif

# X3-1152 : Non invoiceable deliveries
   #If (GREP="D" & [M:SDH0]LND<>2) | (GREP="C" & find(GDLVTYP, 1,4))
   If (GREP="D" & [M:SDH0]LND<>2) | (GREP="C" & find(GDLVTYP, 1,5))
       If dim([M:SDH1]LNDRTNDAT) > 0 Grizo [M:SDH1]LNDRTNDAT Endif
   Endif
# X3-1152 : Non invoiceable deliveries

   If GMANCOU <> 2 Diszo [M:SDH0]SDHNUM    Endif
   If [M:SDH1]BETFCY = 2 & [M:SDH1]BETCPY = 1 Grizo [M:SDH0]BPCINV Endif
   If GPRIMOD = 1
      Diszo [M:SDH1]GROPRI
      If dim([M:SDH1]DISCRGVAL1)>0 Diszo [M:SDH1]DISCRGVAL1 Endif
      If dim([M:SDH1]DISCRGVAL2)>0 Diszo [M:SDH1]DISCRGVAL2 Endif
      If dim([M:SDH1]DISCRGVAL3)>0 Diszo [M:SDH1]DISCRGVAL3 Endif
      If dim([M:SDH1]DISCRGVAL4)>0 Diszo [M:SDH1]DISCRGVAL4 Endif
      If dim([M:SDH1]DISCRGVAL5)>0 Diszo [M:SDH1]DISCRGVAL5 Endif
      If dim([M:SDH1]DISCRGVAL6)>0 Diszo [M:SDH1]DISCRGVAL6 Endif
      If dim([M:SDH1]DISCRGVAL7)>0 Diszo [M:SDH1]DISCRGVAL7 Endif
      If dim([M:SDH1]DISCRGVAL8)>0 Diszo [M:SDH1]DISCRGVAL8 Endif
      If dim([M:SDH1]DISCRGVAL9)>0 Diszo [M:SDH1]DISCRGVAL9 Endif
   Endif
Else
   # Issue X3-69499 - 2018-02-14 by TS
   #If [M:SDH1]CFMFLG = 2
   If [M:SDH1]CFMFLG=2 | [M:SDH1]CFMPAR=2
   # End issue X3-69499
      Diszo [M:SDH0]1-99
      Diszo [M:SDH1]1-99
      Diszo [M:SDH2]1-99
      # Issue X3-51179 - 2017-08-01 by CPO : On posted delivery we can update analytic section
      #Diszo [M:SDH3]10                 # FGR 04/07/2014 : X3SUIVI91606 Diszo [M:SDH3]5,10
      Diszo [M:SDH3]10,15
      # End issue X3-51179
      Actzo [M:SDH0]SDHNUM
      If dim([M:SDH1]LNDRTNDAT) > 0
          If [M:SDH0]LND = 2
             Actzo [M:SDH1]LNDRTNDAT
          Else
             Grizo [M:SDH1]LNDRTNDAT
          Endif
      Endif
      If [M:SDH1]BETFCY=2 Grizo [M:SDH0]BPCINV Endif
      If dim([M:SDH0]SCO) > 0
          Diszo [M:SDH0]SCO : If dim([M:SDH3]BPCLOC)>0 Diszo [M:SDH3]BPCLOC Endif
      Endif
      # Issue X3-69499 - 2018-02-14 by TS
      # Si livraison partiellement validée, accès au tableau pour les lignes non validées
      If [M:SDH1]CFMPAR=2
         Diszo [M:SDH1]NBLIG
         Actzo [M:SDH1]20
      Endif
      # End issue X3-69499
   Else
      Actzo [M:SDH0]1-99

      #--82630 Pb acces ligne apres affichage livr avec mvt en attente : Diszo avant Actzo necessaire --#
      Diszo [M:SDH1]NBLIG
      Actzo [M:SDH1]1-99

      Actzo [M:SDH2]1-99
      # Issue X3-51179 - 2017-08-01 by CPO : On posted delivery we can update analytic section
      Actzo [M:SDH3]5,10,15 #Actzo [M:SDH3]5,10
      # End issue X3-51179
      Diszo [M:SDH0]SOHNUM
      Diszo [M:SDH1]SIHNUM
      Diszo [M:SDH2]PRFNUM
      Diszo [M:SDH0]STOFCY, SALFCY, LND, BPCORD, BPAADD
      Diszo [M:SDH0]SDHTYP :#--CPO 75115 - 203 Nouveau champ SDHTYP
      Diszo [M:SDH1]CUR, PRITYP
      If [M:SDH0]LND <> 2
          If dim([M:SDH1]LNDRTNDAT) > 0 Grizo [M:SDH1]LNDRTNDAT Endif
      Endif
      If [M:SDH1]BETFCY = 2
         Grizo [M:SDH0]BPCINV
      Else
         Diszo [M:SDH0]BPCINV
      Endif
      If GPRIMOD = 1
         Diszo [M:SDH1]GROPRI
         If dim([M:SDH1]DISCRGVAL1)>0 Diszo [M:SDH1]DISCRGVAL1 Endif
         If dim([M:SDH1]DISCRGVAL2)>0 Diszo [M:SDH1]DISCRGVAL2 Endif
         If dim([M:SDH1]DISCRGVAL3)>0 Diszo [M:SDH1]DISCRGVAL3 Endif
         If dim([M:SDH1]DISCRGVAL4)>0 Diszo [M:SDH1]DISCRGVAL4 Endif
         If dim([M:SDH1]DISCRGVAL5)>0 Diszo [M:SDH1]DISCRGVAL5 Endif
         If dim([M:SDH1]DISCRGVAL6)>0 Diszo [M:SDH1]DISCRGVAL6 Endif
         If dim([M:SDH1]DISCRGVAL7)>0 Diszo [M:SDH1]DISCRGVAL7 Endif
         If dim([M:SDH1]DISCRGVAL8)>0 Diszo [M:SDH1]DISCRGVAL8 Endif
         If dim([M:SDH1]DISCRGVAL9)>0 Diszo [M:SDH1]DISCRGVAL9 Endif
      Endif
      If dim([M:SDH0]SCO) > 0
          Diszo [M:SDH0]SCO
          If dim([M:SDH3]BPCLOC) > 0
#              If sum([M]MFGNUM) <> "" Diszo [M:SDH3]BPCLOC Else Actzo [M:SDH3]BPCLOC Endif
              If sum([M]VCRNUMORI) <> "" Diszo [M:SDH3]BPCLOC Else Actzo [M:SDH3]BPCLOC Endif
          Endif
      Endif
      # Issue X3-134259 - 20190522 by LD
      # If the delivery is packed, Package informations are automatically recalculated
      # So it is useless to be able to modify them
      If [M:SDH0]SPDFLG=2 & [M:SDH2]PACNBR>0
        Diszo [M:SDH2]20
      Endif
      # Issue X3-134259 - 20190522 by LD
   Endif
   # Diszo des champs stock
   Call ETAZONSOR("SDH1") From STKECR
Endif

If dim([M:SDH1]DLVINVATI)>0 : Diszo [M:SDH1]DLVINVATI : Endif

  # FGR 07/12/2011 : X3SUIVI71065 (début)
  If GPJTSNGDOC = G_OUI Then
    Call PJT_MODFCY([M:SDH0]SALFCY, "[M:SDH1]DPJT") From TRTPJT
  Endif
  # FGR 07/12/2011 : X3SUIVI71065 (fin)
Return

#########################################################################
$DEVERROU_REO
#-----------------------------------------------------------------------#
# Déverrouillage des réappros emp sous-traitant bloqués par le picking  #
#-----------------------------------------------------------------------#
Local Integer I
For I=0 To [M:SDH1]NBLIG-1
   If [M:SDH1]CREFLG(I)=0 & [M:SDH1]STOREOFLG(I)=1
      If dim([M:SDH3]BPCLOC)>0
          SYMBOLE2 = "REO"+[M:SDH0]STOFCY+"\"+[M:SDH3]BPCLOC+"\"+[M:SDH1]ITMREF(I)
      Else
          SYMBOLE2 = "REO"+[M:SDH0]STOFCY+"\"+[M:SDH1]ITMREF(I)
      Endif
      Unlock = SYMBOLE2
   Endif
Next I
Return

#########################################################################
$DEVERROU_STA
#-----------------------------------------------------------------------#
# Déverrouillage des manquants sous-traitants                           #
#-----------------------------------------------------------------------#
Local Integer I
For I=0 To [M:SDH1]NBLIG-1
   If [M:SDH1]CREFLG(I)=0 & [M:SDH1]STOREOFLG(I)=2
# 92919 : Lock pb when cancel after picking
#      SYMBOLE2 = "STA"+[F:STA]STOFCY+"\"+[F:STA]ITMREF+"\"+num$([F:STA]STOCOU)
#&                     +"\"+num$([F:STA]SEQ)
      SYMBOLE2 = "STA"+[M:SDH0]STOFCY+"\"+[M:SDH1]ITMREF(I)+"\"+num$([M:SDH1]STOCOU(I))
&                     +"\"+num$([M:SDH1]SEQ(I))
# 92919
      Unlock = SYMBOLE2
   Endif
Next I
Return
#########################################################################
#MAE, LIV_BP
$DEVERROU_PRH
#-----------------------------------------------------------------------#
# Déverrouillage des bons de préparation bloqués par le picking  #
#-----------------------------------------------------------------------#
Local Integer I
For I=0 To [M:SDH1]NBLIG-1
   If [M:SDH1]CREFLG(I)=0 & [M:SDH1]PRHNUM(I)<>""
      SYMBOLE2 = "PRH"+[M:SDH1]PRHNUM(I)
      Unlock = SYMBOLE2
   Endif
Next I
Return
#########################################################################
$DEVERROU_SOH
#-----------------------------------------------------------------------#
# Déverrouillage des commandes bloquées par le picking                  #
#-----------------------------------------------------------------------#
Local Integer I
# Déblocage des commandes ouvertes en cours de picking
For I=0 To [M:SDH1]NBLIG-1
   If [M:SDH1]CREFLG(I)=0 & [M:SDH1]XSOHNUM(I)<>""
      SYMBOLE2 = "SOH"+[M:SDH1]XSOHNUM(I)
      Unlock = SYMBOLE2
      SYMBOLE2 = "SOC"+num$([M:SDH1]SOPLIN(I))+"\"+[M:SDH1]XSOHNUM(I)
      Unlock = SYMBOLE2
   Endif
Next I
Return

# Issue X3-64479/161959 - 2019-10-16 by MUARN : delock task
$DEVERROU_JTT
#-----------------------------------------------------------------------#
# Déverrouillage des tâches bloquées par le picking                  #
#-----------------------------------------------------------------------#
Local Integer I
For I=0 To [M:SDH1]NBLIG-1
   If [M:SDH1]CREFLG(I)=0 & [M:SDH1]VCRTYPORI(I)=40
      SYMBOLE3 = "JTT"+[F:JTT]OPPNUM+"\"+[F:JTT]TASCOD+"\"+num$([F:JTT]ITTSEQ)
      Unlock = SYMBOLE3
   Endif
Next I
Return

#########################################################################
$VERROU_SDH
Local Char MACLCK(50), USRLCK(50) : # Bug 82375

#-----------------------------------------------------------------------#
# Verrouillage de la livraison pour bouton                              #
#-----------------------------------------------------------------------#
  If VERROU = 0 Then
    # FGR 29/11/2012 : X3SUIVI75601 : cas d'un utilisateur non habilité à modifier les livraisons
    #                  On vérifie que [F:SDH]UPDDATTIM en mémoire est identique à celui enregistré
    #                  S'il est différent c'est qu'il a été modifié par un autre utilisateur.
    #                     => On rend une erreur
    #                  S'il est idenditique, on essaie de locker l'enregistrement
    If clalev ([F:SDHV])=0 Local File SDELIVERY [SDHV] Endif
    Raz [F:SDHV]
    Read [F:SDHV]SDH0=[F:SDH]SDHNUM
    If fstat Then
      # Erreur livraison inexistante : elle a du être supprimée
      GERR = 1
      GMESSAGE = [M:SDH0]SDHNUM - ":" - mess(612,199,1)
    Else
      If [F:SDHV]UPDDATTIM = [F:SDH]UPDDATTIM Then
        # Elle n'a pas été modifiée : on peut tenter la locker
        SYMBOLE2 = "SDH"+[M:SDH0]SDHNUM
        Lock = SYMBOLE2
        If fstat Then
          # modification en cours sur un autre poste
          GERR=1 : GMESSAGE=[M:SDH0]SDHNUM-":"-mess(10,100,1)
          # Bug 56182 : On ajoute si on peut le nom de l'utilisateur qui locke
          Call QUILOCKE(SYMBOLE2,[L]MACLCK,[L]USRLCK) From OBJDIV
          If [L]USRLCK<>""
            GMESSAGE -= "\"+mess(101,126,1)-":"-[L]USRLCK : # La fiche est utilisée par
          Endif
        Endif
      Else
        # Elle a été modifiée par un autre utilisateur : il faut la relire
        GERR = 1
        GMESSAGE = [M:SDH0]SDHNUM - ":" - mess(613,199,1)
      Endif
    Endif
  Else
    SYMBOLE2 = "SDH"+[M:SDH0]SDHNUM
    Lock = SYMBOLE2
    If fstat or VERROU=0 # bug 56517 RPO
      # modification en cours sur un autre poste
      GERR=1 : GMESSAGE=[M:SDH0]SDHNUM-":"-mess(10,100,1)
      # Bug 56182 : On ajoute si on peut le nom de l'utilisateur qui locke
      Call QUILOCKE(SYMBOLE2,[L]MACLCK,[L]USRLCK) From OBJDIV
      If [L]USRLCK<>""
        GMESSAGE -= "\"+mess(101,126,1)-":"-[L]USRLCK : # La fiche est utilisée par
      Endif
    Endif
  Endif
Return

####################################################################
$FIN_ACTION
# Pour forcer un réaffichage de la livraison
If REPONSE=GSTALIT-1024 Gosub RELIT From GOBJSUB Endif

# 101090 - Update BOL fields if coming back from BOL button
If dim(BOUT)>0 & BOUT="B" : Call SETUP_BOL From SUBSDHB : Endif
Return

#########################################################################
#--------------------------------------------------------------------------#
# Chargement des paramètres avec GFCY = Site de la livraison               #
# ------------------------------------------------------------------------ #
# Chargement des globales référenciels, comptes et sections de la société  #
# Chargement des paramètres de localisation                                #
# ------------------------------------------------------------------------ #
$CHARG_PARAM
Local  Char     PARAM2(10)

# --- Chargement des globales référenciels, comptes et sections de la société
Call GETCPY(GFCY,"SLT",4,GFLAG) From TRTX3CPT
# 106867.sn
If func AFNC.ACTIV("LTA")
  Gosub GET_CPY_SSTTAXACT From TRTTAXSST
Endif
# 106867.en
# --- Si changement société -----#
If GSOC_UPDFLG
    # --- Chargement des paramètres de localisation
    # --- Numérotation Argentine
    If func AFNC.ACTIV("KAG")
        Call PARAM(GFCY,"ARGNUM",PARAM2) From ADOVAL
        GLOCARGNUM=val(PARAM2)
        If GLOCARGNUM>0  GLOCARGNUM-=1 : Endif
    Else
      Raz GLOCARGNUM
    Endif
    # --- Utilisation systeme de taxe
    # 106867.so
    # If func AFNC.ACTIV("KUS")
    #    Call PARAM(GFCY,"USATAX",PARAM2) From ADOVAL
    #    GLOCUSATAX=val(PARAM2)
    #    If GLOCUSATAX>0  GLOCUSATAX-=1 : Endif
    # Else
    #  Raz GLOCUSATAX
    # Endif
    # 106867.so
    # --- Localisation argentine : Pour la numérotation, recherche du type de document lié aux livraisons
    If GLOCARGNUM Gosub REC_ARGNUM_TYPDOC From TRTVENLIV : If GERR=1 Return Endif : Endif
    # V6.2 : Certification
    # --- Contrôle date documents
    Call PARAM(GFCY,"CTLDATORI",PARAM2)    From ADOVAL
    GCTLDATORI=val(PARAM2)  : If GCTLDATORI=0   GCTLDATORI=2  : Endif
    # FGR 28/11/2011 : X3SUIVI71065
    GPJTSNGDOC = func TRTPJT.GET_PARAM_PJTSNGDOC(GFCY)
Endif
#--- Prix / Montant HT/TTC                    : # 82808 : Modification champ PRITYP
Call PARAML(GFCY,"NOTATI",PARAM2) From ADOVAL : # 82808
GNOTATI = val(PARAM2)                         : # 82808
  # FGR 26/07/2013 : X3SUIVI87923 (début)
  If func AFNC.ACTIV("SDD") Then
    Call PARAM(GFCY, "SDDMGT", PARAM2) From ADOVAL
    GSDDMGT = val(PARAM2)
    If GSDDMGT <> 1 and GSDDMGT <> 2 Then
      GSDDMGT = 1
    Endif
  Endif
  # FGR 26/07/2013 : X3SUIVI87923 (fin)
Return

##########################################################################################################
#------------------------------------------------------------------------#
# Affichage entêtes colonnes variables (comptes et sections analytiques) #
#------------------------------------------------------------------------#
$AFF_TITCOL
If GSOC_UPDFLG & !GIMPORT & dim([M:SDH1]CCE1)>0
  Local Char BASPAG(10)
  BASPAG="NBLIG" : Gosub TIT_COL From ="W1WK4"+GFLAG+"1"
  #----- Pour forcer l'utilisation des formats évalués si tableau vide -----#
  # Affzo nécessaire si sections invisibles pour faire disparaitre les colonnes
  If [M:SDH1]NBLIG=0
    [M:SDH1]NBLIG=1 : Affzo [SDH1]20 : Effzo [SDH1]20
  Endif
  #-----
Endif
Raz GSOC_UPDFLG
Return

#########################################
$GRISE
# Accès à un document créé en multi-dépôt avec une transaction mono-dépôt
# --> pas d'application du mono-dépôt
If [F:SDH]WRHE="" & GWRHOBY=2
   GWRHOBY=1
   If [M]STOFCY<>[F:FCY]FCY : Read [FCY]FCY0=[M]STOFCY : Endif
   If [F:FCY]WRHGES=2 : Call MESSAGE(mess(351,184,1)) From GESECRAN : Endif
Endif
Return

#------------------------------------------#
# Actzo ou Grizo des dépôts selon le site  #
#------------------------------------------#
$WRH_ETAT
If GWRHACT<>2 Return Endif
If [M]STOFCY<>[F:FCY]FCY
   Read [FCY]FCY0=[M]STOFCY
Endif
If [F:FCY]WRHGES=2
   If find(GREP,"C","D")
      Actzo [M:SDH1]WRHE
      If GWRHOBY=2
         Diszo [M:SDH1]WRH
      Else
         Actzo [M:SDH1]WRH
      Endif
   Elsif [M:SDH1]WRHE<>""
      Diszo [M:SDH1]WRHE
      Diszo [M:SDH1]WRH
   Else
      Actzo [M:SDH1]WRHE
      Actzo [M:SDH1]WRH
   Endif
Else
  Raz   [M:SDH1]WRHE
  Grizo [M:SDH1]WRHE
  Grizo [M:SDH1]WRH
Endif

Return
######################################################################

# Process SST and update tables outside of the transaction
$RECALC_SST

  # Issue 116640 - 2016-06-17 by ERMIL : Move WS calls out of transactions
  # Call SST and perform updates first here.
  If func AFNC.ACTIV("LTA") & [F:CPY]SSTTAXACT = 2
    Gosub RECALC_SST_SDH From TRTTAXSST  #122614 - JOBRO - Rework transaction mgmt
  Endif
# 122614 - JOBRO - Rework transaction mgmt
#    Local Integer SSTERR
#    Local Char    SSTERRMSG(250)
#    Local Char    SDHNUM(20) : SDHNUM = [F:SDH]SDHNUM
#
#    GTAXBYDOC = 1
#
#    Gosub INIVALTTC
#
#    Call UPD_VALORISATION ("M","SDH") From TRTVENFACC
#
#    Trbegin [SDH]
#
#    Readlock [SDH]SDH0 = [L]SDHNUM With lockwait=3
#    If fstat : Call FSTA("SDH") From GLOCK : Endif
#
#    # Update the shipment header totals
#    [F:SDH]DLVINVNOT  = [M:SIHV]INVNOT
#    [F:SDH]DLVINVATI  = [M:SIHV]INVATI
#    [F:SDH]DLVINVNOTL = [M:SIHV]INVNOTRPT
#    [F:SDH]DLVINVATIL = [M:SIHV]INVATIRPT
#
#    # Update the values back to the table
#    Rewrite [SDH]
#    If fstat
#      Call FSTA("SDH") From GLOCK
#      Rollback
#    Else
#      Commit
#    Endif
#
#    # Update the line level fields back to the table
#    Trbegin [SDD]
#
#    Local Integer I
#    For I=0 To [M:SDH1]NBLIG-1
#      Readlock [SDD]SDD0 = [L]SDHNUM;[M:SDH1]SDDLIN(I) With lockwait=3
#      If fstat : Call FSTA("SDD") From GLOCK : Endif
#
#      [F:SDD]NETPRIATI = [M:SDH1]NETPRIATI(I)
#      [F:SDD]NETPRINOT = [M:SDH1]NETPRINOT(I)
#
#      Rewrite [SDD]
#      If fstat
#        Call FSTA("SDD") From GLOCK
#        GOK=0
#        Break
#      Endif
#
#    Next
#
#    # If an error occurred, roll back, but dont hod up processing
#    If GOK=0
#      Rollback
#      GOK=1
#    Else
#      Commit
#    Endif
#
#    [M:SIHV]VCRTYP=2 : [M:SIHV]NUM=[L]SDHNUM
#    Gosub CREMOD_LTV From TRTTAXSST
#
#  Endif
# 122614 - JOBRO - Rework transaction mgmt

Return
#122614 - JOBRO - Rework transaction mgmt
#$CREDITCARD_ERROR
#
#  # Issue 116640 An error occurred with SE.
#  # Since those calls are outside of the transaction, can't just do a rollback
#  # Have to delete the shipment here
#  Local Integer OK
#  Local Char PARAM2(10)(1), SAVREP(1)
#
#  SAVREP=GREP : GREP="A": DELSDHNUM = [F:SDH]SDHNUM
#  [L]OK=-9 : Raz [L]PARAM2 : # Don't ask for confirmation
#  Call ANUCOD("SDH",[F:SDH]SDHNUM,PARAM2,OK) From GOBJACT
#  GREP=SAVREP
#
#Return
#122614 - JOBRO - Rework transaction mgmt

####################################################################
# Issue X3-222602 - 2021-01-15 by FGR : BEGIN
$PJM_TECALLITM
  If func ASYRFNC.ACTIV("PJM") Then
    Local Integer IPJMRET

    If dim(ZTECALLITM) >= 0 and ZTECALLITM <> null Then
      Local Char TBOPPNUM(GLONPIM)(1..)
      Local Char TBPIMTASCOD(GLONPIM)(1..)

      IPJMRET = fmet ZTECALLITM.LOAD_PJT_LIST(TBOPPNUM)
      If func PJMTSK_CSTD_PROGS.LOCK_SYMBOL_HEAP_PJT(TBOPPNUM, TBPIMTASCOD, GMESSAGE) = [V]CST_AERROR Then
        GOK = 0
        GERR = 1
        Return
      Endif
      # -------------------------
      If dim(ZINSPJM) < 0 Then
        Local Instance ZINSPJM Using C_OPPOR
      Endif
      ZINSPJM = NewInstance C_OPPOR AllocGroup null
      IPJMRET = fmet ZINSPJM.PJM_TASK_RITT_ALLOCATION("", ZTECALLITM)
      # -------------------------
      Call UNLOCK_SYMBOL_HEAP(TBPIMTASCOD) From PJMTSK_CSTD_PROGS
      # -------------------------
      If IPJMRET >= [V]CST_AERROR Then
        GOK = 0
        If func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(ZINSPJM, GMESSAGE) = [V]CST_AWARNING Then
          GERR = 2
        Else
          GOK = 0
          GERR = 1
        Endif
      Endif
      Gosub PJM_TECALLITM_FREEGROUP
    Endif
  Endif
Return

#$PJM_TECALLITM
#  # -------------------------------------------------
#  # Issue X3-31898 - 2017-11-17 by FGR
#  # Issue X3-64479/73568 - 2019-09-16 by MUARN : allocation transfer / reactivated
#  #Return # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
#  If func ASYRFNC.ACTIV("PJM") Then
#    Local Integer IPJMRET
#
#    If dim(ZTECALLITM) >= 0 and ZTECALLITM <> null Then
#      # -------------------------------------------------
#      # Issue X3-181728 - 2020-02-10 by FGR : BEGIN
#      Local Char TBOPPNUM(GLONPIM)(1..)
#
#      IPJMRET = fmet ZTECALLITM.LOAD_PROJECT_LIST(TBOPPNUM)
#      If func OPPOR_CSTD_PROGS_COM.LOCK_SYMBOL_HEAP_RECEIVED(TBOPPNUM, GMESSAGE) = [V]CST_AERROR Then
#        GOK = 0
#        GERR = 1
#        Return
#      Endif
#      # Issue X3-181728 - 2020-02-10 by FGR : END
#      # -------------------------------------------------
#      If dim(ZINSPJM) < 0 Then
#        Local Instance ZINSPJM Using C_OPPOR
#      Endif
#      ZINSPJM = NewInstance C_OPPOR AllocGroup null
#      IPJMRET = fmet ZINSPJM.PJM_TASK_RITT_ALLOCATION("", ZTECALLITM)
#      Call UNLOCK_SYMBOL_HEAP(TBOPPNUM) From OPPOR_CSTD_PROGS_COM              # Issue X3-181728 - 2020-02-10 by FGR
#      If IPJMRET >= [V]CST_AERROR Then
#        GOK = 0
#        If func SYRSTACKTOOLS.MSGSTACK_GET_FIRST_UPPER_MESSAGE(ZINSPJM, GMESSAGE) = [V]CST_AWARNING Then
#          GERR = 2
#        Else
#          GOK = 0
#          GERR = 1
#        Endif
#      Endif
#      Gosub PJM_TECALLITM_FREEGROUP
#    Endif
#  Endif
#  # -------------------------------------------------
#Return
# Issue X3-222602 - 2021-01-15 by FGR : END

####################################################################
$PJM_TECALLITM_FREEGROUP
  # -------------------------------------------------
  # Issue X3-64479/73568 - 2019-09-16 by MUARN : allocation transfer / reactivated
  #Return # Issue X3-77485 - 2018-02-19 by FGR : Deactived at the moment
  # Issue X3-31898 - 2017-11-17 by FGR
  If func ASYRFNC.ACTIV("PJM") Then
    If dim(ZTECALLITM) >= 0 and ZTECALLITM <> null Then
      FreeGroup ZTECALLITM
      Raz ZTECALLITM
    Endif
    If dim(ZINSPJM) >= 0 and ZINSPJM <> null Then
      FreeGroup ZINSPJM
      Raz ZINSPJM
    Endif
  Endif
  # -------------------------------------------------
Return
