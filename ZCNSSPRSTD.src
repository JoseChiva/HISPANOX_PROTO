#<AdxTL>@(#)0.0.0.0 $Revision$
#MAE, le 19/11/2013, modification de la fenêtre FCNSSPR pour le bug 94534 : suppression des
#boutons RETOUR et FIN car on ne peut pas les gérer avec la zone EXTSTO (stock prévisionnel).
#La gestion du SUITE a été faite

Local Char PARAM(20)(1..4)
PARAM(1) = "0"
PARAM(2) = "GAL"
PARAM(3) = ""
PARAM(4) = ""
Call GCONSULT("ZSPR","",PARAM) From GCONSULT
End
############################################################
$ACTION

#If GUSER="ADEV" Then : Infbox ACTION : Endif
Case GACTION

    When "ZCONSSPR"
        Case ACTION
          When "AUTORIS"    : Gosub AUTORIS
          When "FERME"      : Gosub FERME
          When "OUVRE"      : Gosub OUVRE
          When "SETBOUT"    : Gosub SETBOUT
          When "LECTURE"    : Gosub LECTURE
          When "DEB_CRIT"   : Gosub DEB_CRIT
          When "FIN_CRIT"   : Gosub FIN_CRIT
          When "AP_MAGNETO" : [M:ZSPR1]FLG = 0
                              [M:ZSPR1] = [F:ITM]
          When Default
        Endcase

Endcase
Return
############################################################
$AUTORIS
Return
############################################################
$DEB_CRIT
Raz [M:ZCSPR]: Transmask [M:ZSPR1]To [M:ZCSPR]# Issue 25606[M:ZCSPR] = [M:ZSPR1]
Return
############################################################
$FIN_CRIT
[M:ZSPR1]    = [M:ZCSPR]
[M:ZSPR1]FLG = 0
Return
############################################################
$OUVRE
Local Decimal    WPHY
#Local Decimal    WCTL
#Local Decimal    WREJ
Local Decimal    WTRF
# Bug 36095
Local Decimal    WTRFCAL
#Local Decimal    WTRA
Local Decimal    WSTO
Local Decimal    WALL
Local Decimal    WGLO
#Local Decimal    WBPR
#Local Decimal    WSCO
Local Decimal    WWAI
Local Decimal    WQTY
Local Char       WPAR(1)
Local Integer    WSEL
Local Decimal    WSTOSVG    # Issue 94534 - 2013-11-19 by MAE
#
Local Integer    WSEM      : WSEM = 1  : # Premier jour ouvré semaine
Local Integer    WCOR
Local Decimal    WDEL
Local Integer    WCOD
Local Date       WDAT
Local Decimal    WDMYI
Local Date       WDMYD
Local Char       WINT(20)(40)
#
Local Char       WTYP(2)(1..14)   # Issue number 107498 - 2016-03-02 by LLC
Local Char       WSTA(1)(1..3)
Local Char       WEVA(80)
Local Char       WFLD(30)
Local Char       WITMREF(GLONITM)
Local Char       WFCY(GLONFCY)
#--- Issue 121813
Local Char       WSRGNUM(GLONVCR)
Local Integer    WSRGLIN
#---
#
Local Integer    I
#
Local Char       WFILS(250), WFILSPE(250)
Local Integer    WGCONSULT : WGCONSULT = GCONSULT
#
Local Integer  ISINTERCPY                                         # Hcb  270105  25558
If clalev([F:BPR]) = 0 : Local File BPARTNER     [BPR]  : Endif   # Hcb  270105  25558

If clalev([F:FCY]) = 0 : Local File FACILITY   [FCY]  : Endif
If clalev([F:ATZ]) = 0 : Local File ATABZON    [ATZ]  : Endif
If clalev([F:TUN]) = 0 : Local File TABUNIT    [TUN]  : Endif
If clalev([F:ITV]) = 0 : Local File ITMMVT     [ITV]  : Endif
If clalev([F:ITV1])= 0 : Local File ITMMVT     [ITV1] : Endif
If clalev([F:ORD]) = 0 : Local File ORDERS     [ORD]  : Endif
If clalev([F:ITM]) = 0 : Local File ITMMASTER  [ITM]  : Endif
If clalev([F:ITF]) = 0 : Local File ITMFACILIT [ITF]  : Endif
#--- Issue 121813
If clalev([F:STA]) = 0 : Local File STOALL     [STA]  : Endif
#---

If GMODU(8) = 2
    If clalev ([F:MFG]) <= 0 : Local File MFGHEAD    [MFG] : Endif
Endif
If GMODU(6) = 2
    If clalev ([F:POH]) <= 0 : Local File PORDER     [POH] : Endif
    If clalev ([F:SCO]) <= 0 : Local File SCOHEAD    [SCO] : Endif
Endif

If GMODU(5) = 2
    If clalev ([F:SDH]) <= 0 : Local File SDELIVERY  [SDH] : Endif
    If clalev ([F:SDD]) <= 0 : Local File SDELIVERYD [SDD] : Endif
    If clalev ([F:SOQ]) <= 0 : Local File SORDERQ    [SOQ] : Endif
    If clalev ([F:SOH]) <= 0 : Local File SORDER     [SOH] : Endif
Endif

# Chargement types d'ordre et statuts
For I = 1 To dim(WTYP)
  WTYP(I) = mess(I,341,1)
Next I
#
For I = 1 To dim(WSTA)
  WSTA(I) = mess(I,342,1)
Next I
#
Gosub LOAD_SCREEN
#
NAVIG="ZCONSSPR"
SUITE = 1
RETOUR = 1
Return

############################################################
$SETBOUT

If [M:ZSPR2]NBLIG = 0 : Call VIREBOUT(CHAINE,"1") From GOBJET : Endif
If GBROWS : Call VIREBOUT(CHAINE,"G") From GOBJET : Endif
If [M:ZSPR2]NBLIG > 0             # hcb graphique
   CHMEN += "12"                 # hcb graphique
Endif                            # hcb graphique
Return

############################################################
$LOAD_SCREEN
For I = 1 To dim(PARAM)
  Case I
    When 1 :
      GBIDI1 = val(PARAM(I))
    When 2 :
      If PARAM(I) <> "" & PARAM(I) <> "***"
        Call LECTURE("FCY",PARAM(I),"") From CONTOBJ
        If !fstat
          [M:ZSPR1]FCY = PARAM(I)
        Endif
      Endif
    When 3 :
      If PARAM(I) <> ""
        Call LECTURE("ITM",PARAM(I),"") From CONTOBJ
        If !fstat
          [M:ZSPR1] = [F:ITM]
        Endif
      Endif
    When 4 :
      If PARAM(I) = ""
        WFILS = "1=1"
      Else
        WFILS = evalue(PARAM(I))
      Endif
  Endcase
Next I
If clalev([M:ZCSPR]) <> 0 & [M:ZCSPR]MEMO = "HX"
  [M:ZSPR1] = [M:ZCSPR]
Endif
# Initialisation selection ajoutée
If [M:ZSPR1]MRPFLG = 0 : [M:ZSPR1]MRPFLG = 3 : Endif
Return
############################################################
$FERME
If dim(WGCONSULT) > 0 : GCONSULT = WGCONSULT : Endif
Return
############################################################
$LECTURE
#acces depuis article ou article site
If GPILNAV>1
    If find(GNAVIG(GPILNAV-1),"GESITM")
        Diszo [M:ZSPR1]ITMREF
    Elsif find(GNAVIG(GPILNAV-1),"GESITF", "GESPOH") # Issue 94687 - 2013-11-25 by MUARN : ajout GESPOH
        Diszo [M:ZSPR1]ITMREF
        Diszo [M:ZSPR1]FCY
    Endif
Endif

Raz [M:ZSPR2]
NBLU   = 2
nolign = 0
If [M:ZSPR1]ITMREF = ""
  NBLU = 0
  Goto LECTURE_FIN
Endif
nolign = 0
Read [ITM]ITM0=[M:ZSPR1]ITMREF
 If fstat
   Raz [F:ITM]
   Goto LECTURE_FIN
Endif
# Lecture unité stock
Read [TUN]TUN0=[F:ITM]STU
If fstat
  Raz [F:TUN]
Endif
#
[M:ZSPR2]STU       = [F:ITM]STU
# Lecture article - site
If [M:ZSPR1]FCY <> ""
  Call PARAM([M]FCY,"FIRWRKDAY",WPAR) From ADOVAL
  If val(WPAR) < 1 | val(WPAR) > 7
    WSEM = 1
  Else
    WSEM = val(WPAR)
  Endif
  Read [ITF]ITF0=[M:ZSPR1]ITMREF;[M:ZSPR1]FCY
    If fstat
      Raz [F:ITF]
    Endif
#Calcul date fin horizon demande arrondi fin semaine
  If [F:ITF]FOH = 0
    [M:ZSPR2]FOHENDDAT = [0/0/0]
  Else
    If WSEM = 1
      WCOR = 7
    Else
      WCOR = WSEM-1
    Endif
    WCOD = [F:ITF]FOHUOT
    WDEL = [F:ITF]FOH
    WDAT = date$
    Call CALDAT("+",WCOR,WDAT,WCOD,WDEL,WDMYI,WDMYD,[M:ZSPR2]FOHENDDAT)
&        From CBNLIB
  Endif
Else
  [M:ZSPR2]FOHENDDAT = [0/0/0]
Endif
#Calcul date fin horizon ferme
If [F:ITF]PLH = 0
  [M:ZSPR2]PLHENDDAT = [0/0/0]
Else
  WCOR = 0
  WCOD = [F:ITF]PLHUOT
  WDEL = [F:ITF]PLH
  WDAT = date$
  Call CALDAT("+",WCOR,WDAT,WCOD,WDEL,WDMYI,WDMYD,[M:ZSPR2]PLHENDDAT)
&       From CBNLIB
Endif
#
If [M:ZSPR1]FCY <> ""
  Filter [ITV1] Where ITMREF = [M:ZSPR1]ITMREF & STOFCY = [M:ZSPR1]FCY
&              Order By Key ITV0
Else
  Filter [ITV1] Where ITMREF = [M:ZSPR1]ITMREF
&               Order By Key ITV0
Endif
#
#MAE 48434 Raz WPHY, WCTL,WREJ,WTRF,WTRA,WALL,WGLO,WBPR,WSCO,WWAI
Raz WPHY, WTRF,WALL,WGLO
Raz [F:ITV]
For [ITV1]
  Call STKDETSTO("[F:ITV1]","[F:ITV]","","",WINT,3,0) From STKACT
Next
Filter [ITV1]
#
Call STKDETSTO("[F:ITV]","","[M:ZSPR2]","NBLIG0",WINT,0,0) From STKACT
#
[M:ZSPR2]PHYSTO1    += [F:ITV]PHYSTO    + [F:ITV]CTLSTO    + [F:ITV]REJSTO
#
[M:ZSPR2]PLFSTO1    += [F:ITV]PLFPHYSTO + [F:ITV]PLFCTLSTO + [F:ITV]PLFREJSTO
[M:ZSPR2]BPRSTO1    += [F:ITV]BPRPHYSTO + [F:ITV]BPRCTLSTO + [F:ITV]BPRREJSTO
[M:ZSPR2]SCOSTO1    += [F:ITV]SCOPHYSTO + [F:ITV]SCOCTLSTO + [F:ITV]SCOREJSTO
[M:ZSPR2]TOTSTO1    += [F:ITV]PHYSTO    + [F:ITV]CTLSTO    + [F:ITV]REJSTO
[M:ZSPR2]TOTSTO1    += [F:ITV]PLFPHYSTO + [F:ITV]PLFCTLSTO + [F:ITV]PLFREJSTO
[M:ZSPR2]TOTSTO1    += [F:ITV]BPRPHYSTO + [F:ITV]BPRCTLSTO + [F:ITV]BPRREJSTO
[M:ZSPR2]TOTSTO1    += [F:ITV]SCOPHYSTO + [F:ITV]SCOCTLSTO + [F:ITV]SCOREJSTO
[M:ZSPR2]ALLSTO1    += [F:ITV]PHYALL    + [F:ITV]CTLALL    + [F:ITV]REJALL

WPHY +=  [F:ITV]PHYSTO
# 01.07 39354
WPHY += [F:ITV]SCOPHYSTO
WPHY + = [F:ITV]PLFPHYSTO
#MAE 48434
#WPHY -= [F:ITV]SCOPHYALL
#WCTL +=  [F:ITV]CTLSTO
#WREJ +=  [F:ITV]REJSTO
#WTRA +=  [F:ITV]TRASTO
#WBPR +=  [F:ITV]BPRPHYSTO
#WWAI +=  [F:ITV]WAISTO
#WSCO +=  [F:ITV]SCOPHYSTO
#WALL += ([F:ITV]PHYALL + [F:ITV]CTLALL + [F:ITV]REJALL)

#alloué physique statut A
WALL += ([F:ITV]PHYALL + [F:ITV]SCOPHYALL)

WTRF +=  [F:ITV]TRFSTO
WGLO +=  [F:ITV]GLOALL

# Bug 36095 + 09.06 37574
WFCY    = [M:ZSPR1]FCY
WITMREF = [M:ZSPR1]ITMREF
Gosub TRT_TRANSIT
#MAE, deb bg 84624
Gosub TRT_FILTER
SUITE  = 0
RETOUR = 0
NBLU   = 1
# Issue 38432 - 2017-10-13 by MAE : ajout du 3 (actualiser)
Case CHGPAG
  When 1,3 :
    nolign = 1
    WPAGE  = 0
    For [ORD]
        If nolign <= MAXLIG
          Gosub LOA_LIGNE
# JC.AUREN.ini
#          If WSEL = 2
#            NBLU    = 2
#            nolign += 1
#            NOL    += 1
#          Endif

          # si es un pedido de proveedor
          If [F:ORD]WIPTYP = 2 Then
            Gosub CARGA_EXPEDICION

          # si es un pedido de cliente
          Elsif [F:ORD]WIPTYP = 1 Then
            Gosub CARGA_PREPARACION

          Else
            If WSEL = 2
              NBLU    = 2
              nolign += 1
              NOL    += 1
            Endif
          Endif
# JC.AUREN.fin
        Else
          Break
        Endif
    Next

# JC.AUREN.ini
    # pedido venta firme (SOF) Caso especial venta KIT
    Gosub CASO_ESPECIAL_VENTA_KIT
# JC.AUREN.fin

    WPAGE += 1
    RETOUR = 1
    If nolign < MAXLIG
      SUITE = 1
    Endif
  When 2 :
    nolign = 1
    WSKIP = WPAGE * MAXLIG
    WLIG  = 0
    For [ORD]
      If WLIG >= WSKIP
        If nolign <= MAXLIG
          Gosub LOA_LIGNE
          If WSEL =2
            NBLU    = 2
            nolign += 1
            NOL    += 1
           Endif
        Else
          Break
        Endif
      Else
        WLIG += 1
      Endif
    Next
    WPAGE += 1
    If nolign < MAXLIG
      SUITE = 1
    Endif
  When -1 :
    Effzo [M:ZSPR2]
    WLIG = 0
    For [ORD]
      WLIG += 1
    Next
    If mod(WLIG,MAXLIG) = 0
      WPAGE = int(WLIG/MAXLIG)
    Else
      WPAGE = int(WLIG/MAXLIG)+1
    Endif
    WSKIP  = (WPAGE-1) * MAXLIG
    nolign = (MAXLIG+1)-(WLIG-WSKIP)
    WLIG   = 0
    For [ORD]
      If WLIG >= WSKIP
        If nolign <= MAXLIG
          Gosub LOA_LIGNE
          If WSEL = 2
            NBLU    = 2
            nolign += 1
            NOL    -= 1
          Endif
        Else
          Break
        Endif
      Else
        WLIG += 1
      Endif
    Next
    If WPAGE = 1
      RETOUR = 1
    Endif
    SUITE  = 1
  When -2 :
    nolign = 1
    WPAGE -= 1
    WSKIP  = (WPAGE-1) * MAXLIG
    WLIG   = 0
    For [ORD]
      If WLIG >= WSKIP
        If nolign <= MAXLIG
          Gosub LOA_LIGNE
          If WSEL = 2
            NBLU    = 2
            nolign += 1
          Endif
        Else
          Break
        Endif
      Else
        WLIG += 1
      Endif
    Next
    If WPAGE = 1
      RETOUR = 1
    Endif
    NOL    = 0
    nolign = MAXLIG
Endcase
#--- Bug 87810
Filter [ORD]

Gosub MAS_DETALLE_SITUACION

Return

$TRT_FILTER
#--- Issue 115353
Raz GPE

WFILSPE="1=1"
If PROGSPE<>""
  ACTION = "FILTRE" : Gosub ACTION From =PROGSPE
Endif

#--- Issue 115353
If GPE=1 Return Endif

If [M:ZSPR1]FCY <> ""
  Filter [ORD] Where STOFCY = [M:ZSPR1]FCY      &
&                    ITMREF = [M:ZSPR1]ITMREF   &
&                    evalue(WFILS)             &
&                    evalue(WFILSPE)
&              Order By Key ORD1
Else
  Filter [ORD] Where ITMREF = [M:ZSPR1]ITMREF   &
&                    evalue(WFILS)             &
&                    evalue(WFILSPE)
&              Order By Key ORD2
Endif
Return

$LOA_LIGNE
#For [ORD]
  Gosub TRT_SEL
  If WSEL = 2
#    If nolign < dim([M:ZSPR2]WIPTYPSTA)
#      nolign += 1
#      NOL    += 1
# Correction quantité restante par % perte
      If [F:ORD]WIPTYP = 5 & find([F:ORD]WIPSTA,1,2,3) & [M:ZSPR1]SHRFLG = 2 & [F:ITF]SHR > 0
        [F:ORD]EXTQTY    = arr(([F:ORD]EXTQTY*100)/(100+[F:ITF]SHR),10^-[F:TUN]UOMDEC)
        [F:ORD]RMNEXTQTY = arr(([F:ORD]RMNEXTQTY*100)/(100+[F:ITF]SHR),10^-[F:TUN]UOMDEC)
      Endif
      [M:ZSPR2] = [F:ORD]
      [M:ZSPR2]WIPTYPSTA(nolign-1) = mess([F:ORD]WIPTYP,341,1)+mess([F:ORD]WIPSTA,342,1)
      If [F:ORD]WIPTYP = 5 & [F:ORD]WIPSTA = 1 & GMODU(8) = 2
          Read [MFG]MFG0=[F:ORD]VCRNUM
          If fstat : Raz [MFG]
          Else
              If [F:MFG]MFGSTA = 1 & [F:MFG]MFGTRKFLG = 4 : [M:ZSPR2]WIPTYPSTA(nolign-1) += ">" : Endif
          Endif
      Endif
      If [F:ORD]WIPTYP = 2 & [F:ORD]WIPSTA = 1 & GMODU(6) = 2
          Read [POH]POH0=[F:ORD]VCRNUM
          If fstat : Raz [POH] : Endif
          If [F:POH]RCPFLG = 2 : [M:ZSPR2]WIPTYPSTA(nolign-1) += ">" : Endif
          [M:ZSPR2]POHTYP(nolign-1) = [F:POH]POHTYP
      Endif
      If [F:ORD]WIPTYP = 13 & [F:ORD]WIPSTA = 1
          Read [SCO]SCO0=[F:ORD]VCRNUM
          If fstat : Raz [SCO]
          Else
              If [F:SCO]SCOSTA = 1 & [F:SCO]SCOTRKFLG = 4 : [M:ZSPR2]WIPTYPSTA(nolign-1) += ">" : Endif
          Endif
      Endif

      If [F:ORD]WIPTYP = 1  & [F:ORD]WIPSTA = 1 & GMODU(5) = 2
         Read [SOH]SOH0=[F:ORD]VCRNUM                    # hcb 42086
         If fstat : Raz [SOH] : Endif
         [M:ZSPR2]SOHCAT(nolign-1) = [F:SOH]SOHCAT
      Endif

#                          HCB 270105 25558   debut
    # analyse mises en relief (inter-société ...)
    ISINTERCPY = 0

    If [F:ORD]WIPTYP = 1 & GMODU(5) = 2
        If [F:ORD]BPRNUM <> ""
            Read [BPR]BPR0=[F:ORD]BPRNUM
            If fstat : Raz [F:BPR] : Endif

            # Inter-société ?
            If [F:BPR]FCY <> ""
                ISINTERCPY = func BENCHLIBP.ISINTERCPY([F:BPR]FCY, [F:ORD]STOFCY)
            Endif

            # si inter-sociétés
            If ISINTERCPY
                If ISINTERCPY : [M:ZSPR2]WIPTYPSTA(nolign-1) +=  chr$(126) : Endif
            Endif
        Endif
    Endif
#                          HCB 270105 25558   fin
#MAE, bg 84624
#    Else
#      Break
#    Endif
  Endif
#Next
#Filter [ORD]
# Calcul stock dispo ligne à ligne
WSTO = WPHY
#stock alloué
WSTO -= WALL

# CCC (02/08/04) bug 26355 : Avant (en V120) il y avait un paramètre "STODIS"
#                            => nouvelle rubrique CTLSTOFLG dans les critères
#If val(WPAR) = 2
#  WSTO += WCTL
#Endif

#stock sous contrôle
If [M:ZSPR1]CTLSTOFLG = 2
    WSTO += [F:ITV]CTLSTO
    WSTO += [F:ITV]PLFCTLSTO
    WSTO += [F:ITV]SCOCTLSTO
    WSTO -= [F:ITV]CTLALL
    WSTO -= [F:ITV]SCOCTLALL
Endif
#stock en attente
If [M:ZSPR1]WAICOD <> 2
    WSTO -= [F:ITV]WAISTO
Endif

# Bug 36095
#WSTO += WTRF
WSTO += WTRFCAL

WSTO -= WGLO
# 01.07 39354
If dim(GSTODISSCO) > 0 & GSTODISSCO = 1
    WSTO -= [F:ITV]SCOPHYSTO
    WSTO += [F:ITV]SCOPHYALL
    If [M:ZSPR1]CTLSTOFLG = 2
        WSTO -= [F:ITV]SCOCTLSTO
        WSTO += [F:ITV]SCOCTLALL
    Endif
Endif
#MAE, le 15/07/08, bg 47685, quantité en attente est déjà retirée
#If [M:ZSPR1]WAICOD <> 2
#  WSTO -= WWAI
#Endif

# Point d'entrée pour permettre à l'utilisateur de calculer le stock disponible
# Hcb demande 48470
GPOINT = "CALSTOSPR" : Gosub ENTREE From EXEFNC
# Issue number 94534 - 2013-11-19 by MAE : sauvegarde de la valeur du stock prévisionnel si page suivante
If CHGPAG = 2
    WSTO = WSTOSVG
Endif
For I = 0 To nolign-1
  If find([M:ZSPR2]WIPSTA(I),1,2,3)
    WQTY = [M:ZSPR2]RMNEXTQTY(I) - [M:ZSPR2]ALLQTY(I) - [M:ZSPR2]MTOQTY(I)
    If WQTY > 0
      If (func CBNLIB.ISDEM([M:ZSPR2]WIPTYP(I)))
        WSTO -= WQTY
      Else
        WSTO += WQTY
      Endif
    Endif
    #--- Issue 121813
    # Ordre ferme et quantité en rupture
    If [M:ZSPR2]WIPSTA(I)=1 & [M:ZSPR2]SHTQTY(I)>0
      # Lecture de la rupture du besoin pour récupérer la liste à réapprovisionner
      Filter [STA] Where VCRTYP=[M:ZSPR2]VCRTYP(I) & VCRNUM=[M:ZSPR2]VCRNUM(I) &
&                        VCRLIN=[M:ZSPR2]VCRLIN(I) & VCRSEQ=[M:ZSPR2]VCRSEQ(I) &
&                        ALLTYP=4 & SRGNUM<>"" & SRGQTYSTU>0
&                  Order By Key STA1
      Read [STA] First
      If !fstat
        WSRGNUM=[F:STA]SRGNUM
        WSRGLIN=[F:STA]SRGLIN
        Filter [STA]
        # Lecture des allocations destinées au réapprovisionnement
        Filter [STA] Where VCRTYP=34 & VCRNUM=WSRGNUM & VCRLIN=WSRGLIN & ALLTYP=2
&                    Order By Key STA1
        For [STA]
          # Rajout de la quantité allouée au stock prévisionnel
          WSTO+=[F:STA]QTYSTUACT
        Next
      Endif
      Filter [STA]
    Endif
    #--- End issue 121813
  Endif
  [M:ZSPR2]EXTSTO(I) = WSTO
Next I

# Issue number 94534 - 2013-11-19 by MAE : sauvegarde de la valeur du stock prévisionnel si page suivante
If nolign = MAXLIG
    WSTOSVG = WSTO
Endif

Return
#
$LECTURE_FIN
SUITE  = 1
RETOUR = 1
Return
############################################################
$TRT_SEL
WSEL = 1
# Ignorer les SOS échues ?
If [M:ZSPR1]SOSCOD = 2
  If [F:ORD]WIPTYP = 1 & [F:ORD]WIPSTA = 3 & [F:ORD]ENDDAT < date$
    Return
  Endif
Endif
# Ignorer les SOS dans l'horizon de la demande ?
If [M:ZSPR1]FOHCOD = 2
  If [F:ORD]WIPTYP = 1 & [F:ORD]WIPSTA = 3 & [F:ORD]ENDDAT < [M:ZSPR2]FOHENDDAT
    Return
  Endif
Endif
# Filtres utilisateur
If [F:ORD]WIPTYP > 0 & [F:ORD]WIPTYP <= dim(WTYP) &
&  [F:ORD]WIPSTA > 0 & [F:ORD]WIPSTA <= dim(WSTA)
  WFLD = "[M:ZSPR1]"+WTYP([F:ORD]WIPTYP)+WSTA([F:ORD]WIPSTA)+"FLG"
  WEVA = "dim("+WFLD+")>0&"+WFLD+"=2"
  If [F:ORD]WIPTYP <> 1 & [F:ORD]WIPSTA = 3
    Case [M:ZSPR1]MRPFLG
      When 1 : WEVA += "&[F:ORD]ORI=5"
      When 2 : WEVA += "&[F:ORD]ORI=6"
    Endcase
  Endif
  If evalue(WEVA)
    WSEL = 2
    Case [F:ORD]WIPTYP
      When 1 : If [M:ZSPR1]CTMFLGS = 1 & [F:ORD]FMI >1
                 WSEL = 1
               Endif
      When 2 : If [M:ZSPR1]CTMFLGP = 1 & [F:ORD]FMI >1
                 WSEL = 1
               Endif
      When 5 : If [M:ZSPR1]CTMFLGW = 1 & [F:ORD]FMI >1
                 WSEL = 1
               Endif
      When 13 : If [M:ZSPR1]CTMFLGSC = 1 & [F:ORD]FMI >1
                 WSEL = 1
               Endif
    Endcase
  Endif
Endif
Return

#########################################################################
$TRT_TRANSIT
# hcb 94723 deb
# Pas de stock en transit
WTRFCAL = WTRF
If WTRFCAL=0 Return Endif

If GMODU(5) = 2
   If clalev ([F:SDH]) <= 0 : Local File SDELIVERY  [SDH] : Endif
   If clalev ([F:SDD]) <= 0 : Local File SDELIVERYD [SDD] : Endif
# Pas de stock en transit
#  WTRFCAL = WTRF
#  If WTRFCAL=0 Return Endif
   WFIL = "CFMFLG=2&BETFCY=2"
   If WFCY<>""
      WFIL += "&PRHFCY=WFCY"
   Endif
   For [SDH] Where evalue(WFIL)
       For [SDD] Where SDHNUM=[F:SDH]SDHNUM & ITMREF=WITMREF &
&                      SOHNUM<>"" & RCPQTYSTU<QTYSTU
           WTRFCAL -= [F:SDD]QTYSTU-[F:SDD]RCPQTYSTU
       Next
   Next
Endif
# hcb 94723 deb
If GMODU(6) = 2
   If clalev ([F:PNH]) <= 0 : Local File PRETURN    [PNH] : Endif
   If clalev ([F:PND]) <= 0 : Local File PRETURND   [PND] : Endif
   Local Char WFIL1(100)
   WFIL1= "CFMFLG=2&BETFCY=2"
#   If WFCY<>""
#      WFIL1+= "&LINSTOFCY=WFCY"
#   Endif
   For [PNH] Where evalue(WFIL1)
       For [PND] Where PNHNUM=[F:PNH]PNHNUM & ITMREF=WITMREF &
&                      SRDQTYSTU<QTYSTU &LINSTOFCY=WFCY
           WTRFCAL -= [F:PND]QTYSTU-[F:PND]SRDQTYSTU
       Next
   Next
Endif
# hcb 94723 fin
If WTRFCAL<0 WTRFCAL=0 Endif
Return

###########################################################
$MAS_DETALLE_SITUACION
  If !clalev([F:ZVP0]) Then : Local File ZVPOHSTKP [F:ZVP0] : Endif
  Filter [F:ZVP0] Where ITMREF = [M:ZSPR1]ITMREF
  Read   [F:ZVP0] First
  If !fstat Then
    [M:ZSPR2]INTFLD(NBLIG0)='En pedido proveedor'
    [M:ZSPR2]VALFLD(NBLIG0)=[F:ZVP0]QTY_POH - [F:ZVP0]QTY_EXP - [F:ZVP0]QTY_RCP
    Affzo [M:ZSPR2]INTFLD(NBLIG0)
    Affzo [M:ZSPR2]VALFLD(NBLIG0)
    NBLIG0 += 1
    [M:ZSPR2]INTFLD(NBLIG0)='En expedición'
    [M:ZSPR2]VALFLD(NBLIG0)=[F:ZVP0]QTY_EXP
    Affzo [M:ZSPR2]INTFLD(NBLIG0)
    Affzo [M:ZSPR2]VALFLD(NBLIG0)
    NBLIG0 += 1
  Endif
  Filter [F:ZVP0]
  Close Local File [ZVP0]
Return

############################################################
$CARGA_EXPEDICION
  If !clalev([F:ZVP1]) Then : Local File ZVPOHITMSTK [F:ZVP1] : Endif
  If !clalev([F:ZPP0]) Then : Local File PORDERP  [F:ZPP0] : Endif
  Read   [F:ZPP0]POP0 = [F:ORD]VCRNUM;[F:ORD]VCRLIN;[F:ORD]VCRSEQ
  Filter [F:ZVP1] Where POHNUM = [F:ORD]VCRNUM and POPLIN = [F:ORD]VCRLIN and POQSEQ = [F:ORD]VCRSEQ
  Read   [F:ZVP1] First
  # muestra la línea con la cantidad pendiente que no se encuentre en una expedición y fecha final con la fecha de recepción de la línea del pedido
  [M:ZSPR2]RMNEXTQTY(nolign-1)  = [F:ZVP1]QTY_POH - [F:ZVP1]QTY_RCP - [F:ZVP1]QTY_EXP
  [M:ZSPR2]ENDDAT(nolign-1)     = [F:ZVP1]EXTRCPDAT
  [M:ZSPR2]ZCOSTE(nolign-1)     = [F:ZPP0]ZPORCOSTE
  If WSEL = 2
    NBLU    = 2
    nolign += 1
    NOL    += 1
  Endif
  # y todas las líneas de expedición que no estén recepcionadas
  If !clalev([F:ZSHD]) Then : Local File SHIPMENTD  [F:ZSHD] : Endif
  If !clalev([F:ZSHH]) Then : Local File SHIPMENT   [F:ZSHH] : Endif
  Filter [F:ZSHD] Where POHNUM = [F:ORD]VCRNUM and POPLIN = [F:ORD]VCRLIN and POQSEQ = [F:ORD]VCRSEQ and (SHIQTYPUU - RCPQTYPUU) > 0
  For [ZSHD]
    Read [F:ZSHH]SHH0 = [F:ZSHD]SHIPNUM
    [M:ZSPR2]WIPTYP(nolign-1)     = 15
    [M:ZSPR2]WIPTYPSTA(nolign-1)  = "EXP"
    [M:ZSPR2]VCRNUM(nolign-1)     = [F:ZSHD]SHIPNUM
    [M:ZSPR2]VCRLIN(nolign-1)     = [F:ZSHD]SHIPLIN
    [M:ZSPR2]ENDDAT(nolign-1)     = [F:ZSHH]SHIPDAT
    [M:ZSPR2]RMNEXTQTY(nolign-1)  = [F:ZSHD]SHIQTYPUU - [F:ZSHD]RCPQTYPUU
    [M:ZSPR2]VCRTYP(nolign-1)     = 38
    Raz [M:ZSPR2]WIPSTA(nolign-1),[M:ZSPR2]STOFCY(nolign-1),[M:ZSPR2]STRDAT(nolign-1),[M:ZSPR2]EXTQTY(nolign-1),[M:ZSPR2]EXTSTO(nolign-1),[M:ZSPR2]PJT(nolign-1)
    Raz [M:ZSPR2]BPRNUM(nolign-1),[M:ZSPR2]VCRSEQ(nolign-1),[M:ZSPR2]MRPMES(nolign-1),[M:ZSPR2]MRPQTY(nolign-1)
    Raz [M:ZSPR2]MRPDAT(nolign-1),[M:ZSPR2]ORI(nolign-1),[M:ZSPR2]VCRTYPORI(nolign-1),[M:ZSPR2]VCRNUMORI(nolign-1),[M:ZSPR2]VCRLINORI(nolign-1),[M:ZSPR2]ITMREFORI(nolign-1)
    Raz [M:ZSPR2]WIPNUM(nolign-1),[M:ZSPR2]POHTYP(nolign-1),[M:ZSPR2]SOHCAT(nolign-1)
#    [M:ZSPR2]WIPSTA(nolign-1)    = [M:ZSPR2]WIPSTA(nolign-2)  : [M:ZSPR2]STOFCY(nolign-1) = [M:ZSPR2]STOFCY(nolign-2) : [M:ZSPR2]STRDAT(nolign-1)     = [M:ZSPR2]STRDAT(nolign-2)
#    [M:ZSPR2]EXTQTY(nolign-1)    = [M:ZSPR2]EXTQTY(nolign-2)  : [M:ZSPR2]EXTSTO(nolign-1) = [M:ZSPR2]EXTSTO(nolign-2) : [M:ZSPR2]PJT(nolign-1)        = [M:ZSPR2]PJT(nolign-2)
#    [M:ZSPR2]BPRNUM(nolign-1)    = [M:ZSPR2]BPRNUM(nolign-2)  : [M:ZSPR2]VCRTYP(nolign-1) = [M:ZSPR2]VCRTYP(nolign-2) : [M:ZSPR2]VCRLIN(nolign-1)     = [M:ZSPR2]VCRLIN(nolign-2)
#    [M:ZSPR2]VCRSEQ(nolign-1)    = [M:ZSPR2]VCRSEQ(nolign-2)  : [M:ZSPR2]MRPMES(nolign-1) = [M:ZSPR2]MRPMES(nolign-2) : [M:ZSPR2]MRPQTY(nolign-1)     = [M:ZSPR2]MRPQTY(nolign-2)
#    [M:ZSPR2]MRPDAT(nolign-1)    = [M:ZSPR2]MRPDAT(nolign-2)  : [M:ZSPR2]ORI(nolign-1)    = [M:ZSPR2]ORI(nolign-2)    : [M:ZSPR2]VCRTYPORI(nolign-1)  = [M:ZSPR2]VCRTYPORI(nolign-2)
#    [M:ZSPR2]VCRNUMORI(nolign-1) = [M:ZSPR2]VCRNUMORI(nolign-2) : [M:ZSPR2]VCRLINORI(nolign-1) = [M:ZSPR2]VCRLINORI(nolign-2) : [M:ZSPR2]ITMREFORI(nolign-1) = [M:ZSPR2]ITMREFORI(nolign-2)
#    [M:ZSPR2]WIPNUM(nolign-1)    = [M:ZSPR2]WIPNUM(nolign-2)    : [M:ZSPR2]POHTYP(nolign-1)    = [M:ZSPR2]POHTYP(nolign-2)    : [M:ZSPR2]SOHCAT(nolign-1)    = [M:ZSPR2]SOHCAT(nolign-2)
    If WSEL = 2
      NBLU    = 2
      nolign += 1
      NOL    += 1
    Endif
  Next
  Filter [F:ZSHD]
  Filter [F:ZVP1]
  Close Local File [ZVP1],[ZSHD],[ZSHH],[ZPP0]
Return

############################################################
$CARGA_PREPARACION
  If !clalev([F:ZSOQ]) Then : Local File SORDERQ  [F:ZSOQ] : Endif
  If !clalev([F:ZSP1]) Then : Local File SORDERP  [F:ZSP1] : Endif
  Read [F:ZSOQ]SOQ0 = [F:ORD]VCRNUM;[F:ORD]VCRLIN;[F:ORD]VCRSEQ
  Read [F:ZSP1]SOP0 = [F:ORD]VCRNUM;[F:ORD]VCRLIN;[F:ORD]VCRSEQ
  # muestra la línea con la cantidad pendiente de entregar que no se encuentre en un documento de preparación pendiente, y fecha final con la fecha de entrega de la línea del pedido
  [M:ZSPR2]RMNEXTQTY(nolign-1)  = [F:ZSOQ]QTY - [F:ZSOQ]DLVQTY - [F:ZSOQ]OPRQTY - [F:ZSOQ]PREQTY - [F:ZSOQ]ODLQTY
  [M:ZSPR2]ENDDAT(nolign-1)     = [F:ZSOQ]EXTDLVDAT
  [M:ZSPR2]ZCOSTE(nolign-1)     = [F:ZSP1]CPRPRI * 100
  [M:ZSPR2]ZPRECIO(nolign-1)    = [F:ZSP1]NETPRI * 100
  [M:ZSPR2]SHTQTY(nolign-1)     = [F:ZSOQ]SHTQTY
  If WSEL = 2
    NBLU    = 2
    nolign += 1
    NOL    += 1
  Endif
  # y todas las líneas de expedición que no estén recepcionadas
  If !clalev([F:ZPRD]) Then : Local File STOPRED  [F:ZPRD] : Endif
  If !clalev([F:ZPRH]) Then : Local File STOPREH  [F:ZPRH] : Endif
  Filter [F:ZPRD] Where ORINUM = [F:ORD]VCRNUM and ORILIN = [F:ORD]VCRLIN and ORISEQ = [F:ORD]VCRSEQ
  For [ZPRD]
    Read [F:ZPRH]PRH0 = [F:ZPRD]PRHNUM
    [M:ZSPR2]WIPTYP(nolign-1)     = 16
    [M:ZSPR2]WIPTYPSTA(nolign-1)  = "VP"
    [M:ZSPR2]VCRNUM(nolign-1)     = [F:ZPRD]PRHNUM
    [M:ZSPR2]VCRLIN(nolign-1)     = [F:ZPRD]PRELIN
    [M:ZSPR2]ENDDAT(nolign-1)     = [F:ZPRH]SHIDAT
    [M:ZSPR2]RMNEXTQTY(nolign-1)  = [F:ZPRD]QTYSTU
    [M:ZSPR2]ALLQTY(nolign-1)     = [F:ZPRD]ALLQTY
    [M:ZSPR2]VCRTYP(nolign-1)     = 3
    [M:ZSPR2]SHTQTY(nolign-1)     = [F:ZPRD]SHTQTY
    Raz [M:ZSPR2]WIPSTA(nolign-1),[M:ZSPR2]STOFCY(nolign-1),[M:ZSPR2]STRDAT(nolign-1),[M:ZSPR2]EXTQTY(nolign-1),[M:ZSPR2]EXTSTO(nolign-1),[M:ZSPR2]PJT(nolign-1)
    Raz [M:ZSPR2]BPRNUM(nolign-1),[M:ZSPR2]VCRSEQ(nolign-1),[M:ZSPR2]MRPMES(nolign-1),[M:ZSPR2]MRPQTY(nolign-1)
    Raz [M:ZSPR2]MRPDAT(nolign-1),[M:ZSPR2]ORI(nolign-1),[M:ZSPR2]VCRTYPORI(nolign-1),[M:ZSPR2]VCRNUMORI(nolign-1),[M:ZSPR2]VCRLINORI(nolign-1),[M:ZSPR2]ITMREFORI(nolign-1)
    Raz [M:ZSPR2]WIPNUM(nolign-1),[M:ZSPR2]POHTYP(nolign-1),[M:ZSPR2]SOHCAT(nolign-1)
#    [M:ZSPR2]WIPSTA(nolign-1)    = [M:ZSPR2]WIPSTA(nolign-2)  : [M:ZSPR2]STOFCY(nolign-1) = [M:ZSPR2]STOFCY(nolign-2) : [M:ZSPR2]STRDAT(nolign-1)     = [M:ZSPR2]STRDAT(nolign-2)
#    [M:ZSPR2]EXTQTY(nolign-1)    = [M:ZSPR2]EXTQTY(nolign-2)  : [M:ZSPR2]EXTSTO(nolign-1) = [M:ZSPR2]EXTSTO(nolign-2) : [M:ZSPR2]PJT(nolign-1)        = [M:ZSPR2]PJT(nolign-2)
#    [M:ZSPR2]BPRNUM(nolign-1)    = [M:ZSPR2]BPRNUM(nolign-2)  : [M:ZSPR2]VCRTYP(nolign-1) = [M:ZSPR2]VCRTYP(nolign-2) : [M:ZSPR2]VCRLIN(nolign-1)     = [M:ZSPR2]VCRLIN(nolign-2)
#    [M:ZSPR2]VCRSEQ(nolign-1)    = [M:ZSPR2]VCRSEQ(nolign-2)  : [M:ZSPR2]MRPMES(nolign-1) = [M:ZSPR2]MRPMES(nolign-2) : [M:ZSPR2]MRPQTY(nolign-1)     = [M:ZSPR2]MRPQTY(nolign-2)
#    [M:ZSPR2]MRPDAT(nolign-1)    = [M:ZSPR2]MRPDAT(nolign-2)  : [M:ZSPR2]ORI(nolign-1)    = [M:ZSPR2]ORI(nolign-2)    : [M:ZSPR2]VCRTYPORI(nolign-1)  = [M:ZSPR2]VCRTYPORI(nolign-2)
#    [M:ZSPR2]VCRNUMORI(nolign-1) = [M:ZSPR2]VCRNUMORI(nolign-2) : [M:ZSPR2]VCRLINORI(nolign-1) = [M:ZSPR2]VCRLINORI(nolign-2) : [M:ZSPR2]ITMREFORI(nolign-1) = [M:ZSPR2]ITMREFORI(nolign-2)
#    [M:ZSPR2]WIPNUM(nolign-1)    = [M:ZSPR2]WIPNUM(nolign-2)    : [M:ZSPR2]POHTYP(nolign-1)    = [M:ZSPR2]POHTYP(nolign-2)    : [M:ZSPR2]SOHCAT(nolign-1)    = [M:ZSPR2]SOHCAT(nolign-2)
    If WSEL = 2
      NBLU    = 2
      nolign += 1
      NOL    += 1
    Endif
  Next
  Filter [F:ZPRD]
  Close Local File [ZSOQ],[ZPRD],[ZPRH],[ZSP1]
Return

############################################################
$CASO_ESPECIAL_VENTA_KIT
  If !clalev([F:ZBOD]) Then : Local File BOMD     [F:ZBOD] : Endif
  If !clalev([F:ZSQ0]) Then : Local File SORDERQ  [F:ZSQ0] : Endif
  If !clalev([F:ZSP0]) Then : Local File SORDERP  [F:ZSP0] : Endif
  Filter [F:ZBOD] Where CPNITMREF = [M:ZSPR1]ITMREF
  For [ZBOD]
    Filter [F:ZSQ0] Where ITMREF = [F:ZBOD]ITMREF and SOQSTA = 1
    For [ZSQ0]
      Read [F:ZSP0]SOP0 = [F:ZSQ0]SOHNUM;[F:ZSQ0]SOPLIN;[F:ZSQ0]SOQSEQ
      [M:ZSPR2]WIPTYP(nolign-1)     = 17
      [M:ZSPR2]WIPTYPSTA(nolign-1)  = "KIT"
      [M:ZSPR2]VCRNUM(nolign-1)     = [F:ZSQ0]SOHNUM
      [M:ZSPR2]STOFCY(nolign-1)     = [F:ZSQ0]STOFCY
      [M:ZSPR2]STRDAT(nolign-1)     = [F:ZSQ0]ORDDAT
      [M:ZSPR2]ENDDAT(nolign-1)     = [F:ZSQ0]ORDDAT
      [M:ZSPR2]RMNEXTQTY(nolign-1)  = [F:ZSQ0]QTY * [F:ZBOD]BOMQTY
      [M:ZSPR2]ALLQTY(nolign-1)     = [F:ZSQ0]ALLQTY
      [M:ZSPR2]ZCOSTE(nolign-1)     = [F:ZSP0]CPRPRI * 100
      [M:ZSPR2]ZPRECIO(nolign-1)    = [F:ZSP0]NETPRI * 100
      [M:ZSPR2]SHTQTY(nolign-1)     = [F:ZSQ0]SHTQTY
      Raz [M:ZSPR2]MTOQTY(nolign-1)
      Raz [M:ZSPR2]WIPSTA(nolign-1),[M:ZSPR2]EXTSTO(nolign-1),[M:ZSPR2]PJT(nolign-1)
      Raz [M:ZSPR2]BPRNUM(nolign-1),[M:ZSPR2]VCRLIN(nolign-1),[M:ZSPR2]VCRSEQ(nolign-1),[M:ZSPR2]MRPMES(nolign-1),[M:ZSPR2]MRPQTY(nolign-1)
      Raz [M:ZSPR2]MRPDAT(nolign-1),[M:ZSPR2]ORI(nolign-1),[M:ZSPR2]VCRTYPORI(nolign-1),[M:ZSPR2]VCRNUMORI(nolign-1),[M:ZSPR2]VCRLINORI(nolign-1),[M:ZSPR2]ITMREFORI(nolign-1)
      Raz [M:ZSPR2]WIPNUM(nolign-1),[M:ZSPR2]POHTYP(nolign-1),[M:ZSPR2]SOHCAT(nolign-1)
      NBLU    = 2
      nolign += 1
      NOL    += 1
    Next
    Filter [F:ZSQ0]
  Next
  Filter [F:ZBOD]
  Close Local File [ZBOD],[ZSQ0],[ZSP0]
Return

############################################################
Subprog AS_FCY(VALEUR)
Variable Char    VALEUR()
If GBIDI1 <> 0
  mkstat = 2
Endif
End
############################################################
Subprog C_FCY(VALEUR)
Variable Char    VALEUR()
VALEUR = vireblc(VALEUR,4)
If VALEUR <> ""
  Call VERFCY(VALEUR) From CONTX3
Endif
End
############################################################
Subprog AM_FCY(VALEUR)
Variable Char    VALEUR()
[M:ZSPR1]FLG = 0
End
############################################################
Subprog AP_ITMREF(VALEUR)
Variable Char    VALEUR()
[M:ZSPR1] = [F:ITM]
End
############################################################
Subprog AM_ITMREF(VALEUR)
Variable Char    VALEUR()
#[M:ZSPR1]ITMDES1 = [F:ITM]ITMDES1
Call CHARGE_DEFITMDES("DES1AXX",GLANGUE,[F:ITM]ITMREF,[M:ZSPR1]ITMDES1, "[F:ITM]") From TRTX3 # FGR 30/06/2009 : X3SUIVI56189
[M:ZSPR1]STU     = [F:ITM]STU
#Affzo [M:ZSPR1]STU
[M:ZSPR1]FLG = 0
End
############################################################
Subprog AV_WIPTYP(VALEUR)
Variable Integer VALEUR
If nolign > 0
  If (func CBNLIB.ISDEM(VALEUR))
    pcolor = GCOUL(1)
  Elsif VALEUR = 15
    pcolor = GCOUL(2)
  Elsif VALEUR = 16
    pcolor = GCOUL(3)
  Elsif VALEUR = 17
    pcolor = GCOUL(4)
  Else
    pcolor = GCOUL(0)
  Endif
Endif
End
############################################################
Subprog AV_WIPTYPSTA(VALEUR)
Variable Char VALEUR
If nolign > 0
  If find([M:ZSPR2]WIPTYP(nolign-1),1,3,4,6,8,10,12)
    pcolor = GCOUL(1)
  Elsif [M:ZSPR2]WIPTYP(nolign-1) = 15
    pcolor = GCOUL(2)
  Elsif [M:ZSPR2]WIPTYP(nolign-1) = 16
    pcolor = GCOUL(3)
  Elsif [M:ZSPR2]WIPTYP(nolign-1) = 17
    pcolor = GCOUL(4)
  Else
    pcolor = GCOUL(0)
  Endif
Endif
End
############################################################
Subprog IB_NBLIG

Case [M:ZSPR2]WIPTYP(nolign-1)
  When 1 :
    If [M:ZSPR2]WIPSTA(nolign-1) = 1
      GCONSULT = 2
      Raz GBOUT1
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
      If [M:ZSPR2]SOHCAT(nolign-1)=4
         Raz GBOUT2
      Else
         Raz GBOUT7
      Endif
    # Issue 111834  - 2015-10-22 by MAE : si ordre planifié, ouverture vers les demandes de livraison
    Elsif [M:ZSPR2]WIPSTA(nolign-1) = 2
      GCONSULT = 2
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
    Else
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
      Raz GBOUT7
    Endif
  When 2 :
    If [M:ZSPR2]WIPSTA(nolign-1) = 1
      GCONSULT = 2
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT6
      Raz GBOUT7
      If [M:ZSPR2]POHTYP(nolign-1)=2
         Raz GBOUT1
      Else
         Raz GBOUT5
      Endif
    Else
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
      Raz GBOUT7
    Endif
  When 5 :
    If find([M:ZSPR2]WIPSTA(nolign-1),1,2)    # 03.03 17701
      GCONSULT = 2
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT5
      Raz GBOUT6
      Raz GBOUT7
    Else
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
      Raz GBOUT7
    Endif
  When 13 :
    If find([M:ZSPR2]WIPSTA(nolign-1),1,2)    # 03.03 17701
      GCONSULT = 2
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT7
    Else
      Raz GBOUT1
      Raz GBOUT2
      Raz GBOUT3
      Raz GBOUT5
      Raz GBOUT6
      Raz GBOUT7
    Endif

 When Default :
   Raz GBOUT1
   Raz GBOUT2
   Raz GBOUT3
   Raz GBOUT5
   Raz GBOUT6
   Raz GBOUT7
Endcase
End


############################################################
Subprog AV_INTFLD(VALEUR)
Variable Char    VALEUR()
Call AV_INTFLD(VALEUR) From VISUITF
End

######################################################################################
## Etiquette ajoutée par le superviseur (écran SPRG1) 14/12/2006 09:59:01 (HCB)
######################################################################################
Subprog IB_NBLIGC
End


######################################################################################
######################################################################################
## Etiquette ajoutée par le superviseur (écran WMSPRHCB) 09/07/2008 10:43:21 (HCB)
######################################################################################
Subprog IB_EXTQTY
End


######################################################################################
#MAE, bg 57749
#########################################################################
# Pour éxécution validation écrans de consultation en gestion de patch             #
#########################################################################
Subprog PATCH(APPLI)
Value Char APPLI

If APPLI="X3" End Endif
If !clalev([F:ADS]) Local File ADOSSIER [ADS] Endif
Read [ADS]DOSSIER=APPLI
If !fstat & [F:ADS]MODULE(6)<>2 End Endif

Call VALGTC(APPLI,"ZSPR") From SUBGTC

End
######################################################################################
## Etiquette ajoutée par le superviseur (écran CONSSPR2) 30-05-2013 05:04:29 (EL)
######################################################################################
Subprog IB_VCRTYPORI
End


######################################################################################
