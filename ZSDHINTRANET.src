#<AdxTL>@(#)0.0.0.0 $Revision$
# 06.302.184 - JC.18012022.añadir campo ZUSRSERV fichero albaranes.csv
# 06.420.001 - JC.09122022.Ajuste fichero albaranes.csv
############################################################################

Local Char WSDH
#WSDH="EN2100308"
#Call ALBARAN(WSDH) From ZSDHINTRANET
Call ALBARANES(WSDH) From ZSDHINTRANET
End

##################################################################
Subprog ALBARANES(WSDH)
Variable Char WSDH
  Gosub OPEN_TABLAS
  Gosub CALCULARFECHA
  If WSDH <> "" Then
#    Filter [F:SDH] Where SDHNUM=WSDH
    Filter [F:SDH] Where SDHNUM=WSDH and SDHTYP <> 'ES'                                         # 06.420.001.new
  Else
#    Filter [F:SDH] Where (WSDH="" or SDHNUM=WSDH) and DLVDAT >= DIAUNOMESANT and DLVDAT <= date$
#    Filter [F:SDH] Where DLVDAT >= DIAUNOMESANT and DLVDAT <= ULTDIAMESACT
    Filter [F:SDH] Where DLVDAT >= DIAUNOMESANT and DLVDAT <= ULTDIAMESACT and SDHTYP <> 'ES'   # 06.420.001.new
  Endif

  Read [F:SDH] First
  If !fstat Then
    If rowcount([F:SDH])>0
      Gosub CREAR_FICHERO_LIN
      Gosub CABECERA_ALBARANES
      For [F:SDH]SDH0
        Gosub CLIENTE_TRANSPORTISTA
        Filter [F:SDD] Where SDHNUM=[F:SDH]SDHNUM
        For [F:SDD]
         Gosub DATOS_ARTICULO
         Gosub UNIDAD_PRECIO
         Gosub PRECIO_CLIENTE
         Gosub PESO
         Gosub PESO_LIN                                                   # 06.302.184.new
         Gosub GRANEL
         Gosub ESC_REGISTRO
       Next
      Next
      Openo Using [SDH]
    Endif
  Endif
End

##################################################################
Subprog ALBARAN(WSDH)
Variable Char WSDH
Gosub OPEN_TABLAS
Filter [F:SDH] Where SDHNUM=WSDH
Read [F:SDH] First
If !fstat Then
  If rowcount([F:SDH])>0
    Gosub CREAR_FICHERO
    Gosub CABECERA_ALBARAN
    Gosub CLIENTE_TRANSPORTISTA
    Gosub PROVEEDOR
    Gosub DIRECCION
    Gosub MONEDA
    Gosub IMPORTES
    Gosub PESO
    Gosub ELEMFACT
    Gosub IMPUESTOS
    Gosub OBSERVACIONES
    Gosub ESC_REGISTRO_CAB
    Gosub LINEAS_ALBARAN
    For [F:SDH]SDH0
      Filter [F:SDD] Where SDHNUM=[F:SDH]SDHNUM
      For [F:SDD]
        Gosub DATOS_ARTICULO
        Gosub UNIDAD_PRECIO
        Gosub PRECIO_CLIENTE
        Gosub PESO_LIN
        Gosub GRANEL
        Gosub DATOS_PED_CLI
        Gosub ESC_REGISTRO_LIN
      Next
    Next
    Openo Using [SDH]
  Endif
Endif
End

##################################################################
$OPEN_TABLAS
Local File ITMMASTER
Local File SDELIVERY
Local File SDELIVERYD
Local File ITMBPC
Local File BPADDRESS
Local File BPARTNER
#Local File CONTACT
Local File BPCUSTOMER
Local File TABCUR
Local File TABCHANGE
Local File STOJOU
Local File STOLOT
Local File STOALL
Local File STOCK
Local File ZMASCARA
Local File STOPRED

Return

###################################################################
$CALCULARFECHA
Local Date MESANTERIOR, DIAUNOMESANT

MESANTERIOR   = gdat$(addmonth(date$,-1))
DIAUNOMESANT  = gdat$(1,month(MESANTERIOR),year(MESANTERIOR))
ULTDIAMESANT  = gdat$(0, month(date$), year(date$))
MESACTUAL     = gdat$(addmonth(date$,0))
DIAUNOMESACT  = gdat$(1,month(MESACTUAL),year(MESACTUAL))
ULTDIAMESACT  = eomonth(gdat$(1, month(date$), year(date$)))

Return

###################################################################
$CREAR_FICHERO_LIN
Openo filpath("ZINT\ERP_to_intranet","albaranes","csv"),0 Using [SDH]

Iomode adxifs ";"        Using [SDH]
#Iomode adxirs "\013\010" Using [SDH]
Iomode adxium 50         Using [SDH]

Return

###################################################################
$CREAR_FICHERO
Openo filpath("ZINT\ERP_to_intranet","alb"+"_"+WSDH,"csv"),0 Using [SDH]

Iomode adxifs ";"        Using [SDH]
#Iomode adxirs "\013\010" Using [SDH]
Iomode adxium 50         Using [SDH]

Return

###################################################################
$CABECERA_ALBARANES
Wrseq "Cliente";                                      Using [SDH]
Wrseq "Mote";                                         Using [SDH]
Wrseq "N_Alb";                                        Using [SDH]
Wrseq "N_lin";                                        Using [SDH]
Wrseq "Fecha";                                        Using [SDH]
Wrseq "Inventario";                                   Using [SDH]
Wrseq "Familia";                                      Using [SDH]
Wrseq "Norma";                                        Using [SDH]
Wrseq "Cantidad";                                     Using [SDH]
Wrseq "Unidad_Precio";                                Using [SDH]
Wrseq "Divisa";                                       Using [SDH]
Wrseq "Precio Cliente";                               Using [SDH]
Wrseq "Dto";                                          Using [SDH]
Wrseq "Precio neto";                                  Using [SDH]
Wrseq "Coste";                                        Using [SDH]
Wrseq "Importe";                                      Using [SDH]
Wrseq "Margen";                                       Using [SDH]
Wrseq "Peso";                                         Using [SDH]
Wrseq "Ubic";                                         Using [SDH]
Wrseq "Lote";                                         Using [SDH]
Wrseq "Ag_trans";                                     Using [SDH]
Wrseq "Nombre_ag";                                    Using [SDH]
Wrseq "Sector (Tipo pedido SGA)";                     Using [SDH]
Wrseq "Granel";                                       Using [SDH]
Wrseq "Lote Proveedor";                               Using [SDH]
Wrseq "Proveedor (del lote)";                         Using [SDH]
Wrseq "Referencia artículo cliente";                  Using [SDH]
Wrseq "Descripción artículo cliente";                 Using [SDH]
Wrseq "Descripción ventas de la nueva tabla máscaras";Using [SDH]
Wrseq "Cód.pedido cliente";                           Using [SDH]
Wrseq "Nº línea pedido cli";                          Using [SDH]
Wrseq "Preparador"                                    Using [SDH]         # 06.302.184.new

Return

##########################################################################
$CABECERA_ALBARAN
Wrseq "N_Alb";                                        Using [SDH]
Wrseq "Fecha";                                        Using [SDH]
Wrseq "Cliente";                                      Using [SDH]
Wrseq "Mote";                                         Using [SDH]
Wrseq "Proveedor";                                    Using [SDH]
Wrseq "Rsoc";                                         Using [SDH]
Wrseq "Nom";                                          Using [SDH]
Wrseq "Dir";                                          Using [SDH]
Wrseq "Descripcion dirección";                        Using [SDH]
Wrseq "Descripcion dirección";                        Using [SDH]
Wrseq "Descripcion dirección";                        Using [SDH]
Wrseq "CP";                                           Using [SDH]
Wrseq "Pob";                                          Using [SDH]
Wrseq "Pro";                                          Using [SDH]
Wrseq "NIF";                                          Using [SDH]
Wrseq "País";                                         Using [SDH]
Wrseq "Incoterm";                                     Using [SDH]
Wrseq "Repre";                                        Using [SDH]
Wrseq "Comi";                                         Using [SDH]
Wrseq "Moneda";                                       Using [SDH]
Wrseq "Desc_Moneda";                                  Using [SDH]
Wrseq "Unidad_Cambio";                                Using [SDH]
Wrseq "Cambio";                                       Using [SDH]
Wrseq "Forma de pago";                                Using [SDH]
#Wrseq "1er_Giro";                                     Using [SDH]
#Wrseq "Intervalo";                                    Using [SDH]
#Wrseq "N_giros";                                      Using [SDH]
#Wrseq "DP_1";                                         Using [SDH]
#Wrseq "DP_2";                                         Using [SDH]
#Wrseq "DP_3";                                         Using [SDH]
#Wrseq "Fin_mes";                                      Using [SDH]
Wrseq "Cli_fra";                                      Using [SDH]
Wrseq "Ag_trans";                                     Using [SDH]
Wrseq "Nombre_Ag";                                    Using [SDH]
Wrseq "Usuario";                                      Using [SDH]
#Wrseq "Almacén";                                      Using [SDH]
Wrseq "Zona";                                         Using [SDH]
Wrseq "Peso";                                         Using [SDH]
Wrseq "Peso_Manual";                                  Using [SDH]
Wrseq "Bultos";                                       Using [SDH]
Wrseq "TOTAL_BRUTO";                                  Using [SDH]
#Wrseq "Portes_Pag-Deb";                               Using [SDH]
Wrseq "Imp_Portes";                                   Using [SDH]
#Wrseq "Imp_Embalajes";                                Using [SDH]
Wrseq "DTOPP";                                        Using [SDH]
Wrseq "Importe_dtopp";                                Using [SDH]
#Wrseq "RECFIN";                                       Using [SDH]
#Wrseq "Imp_recfin";                                   Using [SDH]
Wrseq "Base_imp";                                     Using [SDH]
Wrseq "IVA";                                          Using [SDH]
Wrseq "Imp_iva";                                      Using [SDH]
#Wrseq "RECEQUI";                                      Using [SDH]
#Wrseq "Imp_recequi";                                  Using [SDH]
Wrseq "TOTAL_NETO";                                   Using [SDH]
Wrseq "obser_1"                                       Using [SDH]
#Wrseq "obser_2";                                      Using [SDH]
#Wrseq "obser_3"                                       Using [SDH]

Return

##########################################################################
$LINEAS_ALBARAN
Wrseq "N_lin";                                        Using [SDH]
Wrseq "Inventario";                                   Using [SDH]
Wrseq "Pedido";                                       Using [SDH]
Wrseq "Referencia";                                   Using [SDH]
Wrseq "Familia";                                      Using [SDH]
Wrseq "Norma";                                        Using [SDH]
Wrseq "Cantidad";                                     Using [SDH]
Wrseq "Precio Cliente";                               Using [SDH]
Wrseq "Unidad_Precio";                                Using [SDH]
Wrseq "Divisa";                                       Using [SDH]
Wrseq "Dto";                                          Using [SDH]
Wrseq "Precio neto";                                  Using [SDH]
Wrseq "Importe";                                      Using [SDH]
Wrseq "CosteM_EUR";                                   Using [SDH]
Wrseq "Peso";                                         Using [SDH]
Wrseq "Ubic";                                         Using [SDH]
Wrseq "Lote";                                         Using [SDH]
Wrseq "Sector (Tipo pedido SGA)";                     Using [SDH]
Wrseq "Granel";                                       Using [SDH]
Wrseq "Lote Proveedor";                               Using [SDH]
Wrseq "Proveedor (del lote)";                         Using [SDH]
Wrseq "Descripción artículo cliente";                 Using [SDH]
Wrseq "Referencia artículo cliente";                  Using [SDH]
Wrseq "Descripción ventas";                           Using [SDH]
Wrseq "Preparador_1";                                 Using [SDH]
#Wrseq "Preparador_2";                                 Using [SDH]
Wrseq "Cód.pedido cliente";                           Using [SDH]
Wrseq "Nº línea pedido cli"                           Using [SDH]

Return

##########################################################################
$DATOS_ARTICULO
Local Char DESCRIPCION2(250), DESCRIPCION3(250), DESCARTCLI(250), REFERENCIA(250),LBPSLOT(250),BPSNUML(250)
Local Char LOTE(250),UBIC(250),ZMASCARA(250),ALMACEN(250)

LBPSLOT = [F:SDD]ZLOTPROVSGA

Read [F:ITM]ITM0=[F:SDD]ITMREF
Filter [F:ITU] Where ITMREF = [F:SDD]ITMREF and BPCNUM = [F:SDD]BPCORD
Read [F:ITU] First
If !fstat Then
  DESCARTCLI = [F:ITU]ITMDESBPC
  REFERENCIA = [F:ITU]ITMREFBPC
Endif

Filter [F:ITM] Where ITMREF = [F:SDD]ITMREF
Read [F:ITM] First
If !fstat Then
  DESCRIPCION2 = [F:ITM]ITMDES2
  DESCRIPCION3 = [F:ITM]ITMDES3
Endif

If [F:SDH]CFMFLG = 2
  Filter [F:STJ] Where VCRNUM = [F:SDD]SDHNUM and VCRLIN = [F:SDD]SDDLIN
  Read [F:STJ] First
  If !fstat
#    LBPSLOT  = [F:STJ]BPSLOT
    If rowcount([F:STJ]) = 1 Then
      LOTE    = [F:STJ]LOT
    Endif
    UBIC    = [F:STJ]LOC
#    Filter [F:STL] Where ITMREF = [F:SDD]ITMREF and LOT = [F:STJ]LOT
    If LBPSLOT <> "" Then
      Filter [F:STL] Where ITMREF = [F:SDD]ITMREF and BPSLOT = LBPSLOT
      Read [F:STL] First
      If !fstat
        BPSNUML = [F:STL]BPSNUM
      Else
        BPSNUML = ""
      Endif
    Endif
  Endif
Else
  Filter [F:STA] Where VCRNUM = [F:SDD]SDHNUM and VCRLIN = [F:SDD]SDDLIN
  Read [F:STA] First
  If !fstat
    Filter [F:STO] Where ITMREF = [F:STA]ITMREF and STOCOU = [F:STA]STOCOU and STOFCY = [F:STA]STOFCY
    Read [F:STO]First
    If !fstat
#      LBPSLOT   =  [F:STO]BPSLOT
      If rowcount([F:STA]) = 1 Then
        LOTE     =  [F:STO]LOT
      Endif
      UBIC     =  [F:STO]LOC
      ALMACEN  =  [F:STO]LOCTYP
#      Filter [F:STL] Where ITMREF = [F:SDD]ITMREF and LOT = [L]LOTE
      If LBPSLOT <> "" Then
        Filter [F:STL] Where ITMREF = [F:SDD]ITMREF and BPSLOT = LBPSLOT
        Read [F:STL] First
        If !fstat
           BPSNUML = [F:STL]BPSNUM
         Else
           BPSNUML = ""
        Endif
      Endif
    Endif
  Endif

Endif


Read [F:ZMAS]ZMA0 = [F:ITM]ZMASK
If !fstat
  [L]ZMASCARA = [F:ZMAS]ZDESMAS1
Endif

Return

##################################################################
$UNIDAD_PRECIO
Local Char    LUNIDADPRECIO(250)

  If !clalev([F:ZSOP]) Then : Local File SORDERP [F:ZSOP] : Endif

  If [F:SDD]ZUNPRE <> "" Then
    Case [F:SDD]ZUNPRE
      When "UN"     : LUNIDADPRECIO = "u"
      When "CEN"    : LUNIDADPRECIO = "%"
      When "MIL"    : LUNIDADPRECIO = "m"
    Endcase
  # si el campo no está en la línea de la entrega, debe coger el valor de este campo en el pedido
  Else
    Read [F:ZSOP]SOP3 = [F:SDD]SOHNUM;[F:SDD]SOPLIN
    If !fstat Then
      Case [F:ZSOP]ZUNPRE
        When "UN"     : LUNIDADPRECIO = "u"
        When "CEN"    : LUNIDADPRECIO = "%"
        When "MIL"    : LUNIDADPRECIO = "m"
        When Default  : LUNIDADPRECIO = ""
    Endcase
    Endif
  Endif

  Close Local File [ZSOP]
Return

##################################################################
$PRECIO_CLIENTE
Local Decimal LPRECIOCLIENTE

  LPRECIOCLIENTE = [F:SDD]ZPRECLI
  If LPRECIOCLIENTE = 0 Then
    If !clalev([F:ZSOP]) Then : Local File SORDERP [F:ZSOP] : Endif
    Read [F:ZSOP]SOP3 = [F:SDD]SOHNUM;[F:SDD]SOPLIN
    If !fstat Then
      LPRECIOCLIENTE = [F:ZSOP]ZPRECLI
    Endif
    Close Local File [ZSOP]
  Endif

Return

##################################################################
$PESO
Local Decimal LPESO,LPESOMANUAL
  LPESO       = func ZAULIB01.CONVERTIR_CANTIDAD([F:SDH]WEU,"KG",[F:SDH]NETWEI)
  LPESOMANUAL = func ZAULIB01.CONVERTIR_CANTIDAD([F:SDH]WEU,"KG",[F:SDH]GROWEI)
Return

##################################################################
$PESO_LIN
Local Decimal LPESOLIN
  LPESOLIN    = func ZAULIB01.CONVERTIR_CANTIDAD([F:SDD]WEU,"KG",[F:SDD]UNTWEI*[F:SDD]QTY)
Return

##################################################################
$GRANEL
Local Decimal LCANTCAJA
Local Char    LGRANEL(250) : LGRANEL = ""
  If [F:SDD]SOHNUM <> "" Then
    Read [F:ITM]ITM0 = [F:SDD]ITMREF
    If !fstat Then
      If [F:ITM]TCLCOD <> "CERT" Then
        LCANTCAJA = func ZAULIB01.CANTIDAD_CAJA([F:SDD]ITMREF)
        If mod([F:SDD]QTY,LCANTCAJA) <> 0 Then
          LGRANEL = "X"
        Endif
      Endif
    Endif
  Endif
Return

##################################################################
$DATOS_PED_CLI
Local Char LCODPEDCLI(250),LNUMLINCLI(250)
  If !clalev([F:ZSOP]) Then : Local File SORDERP [F:ZSOP] : Endif
  Read [F:ZSOP]SOP3 = [F:SDD]SOHNUM;[F:SDD]SOPLIN
  If !fstat Then
    LCODPEDCLI  = [F:ZSOP]ZCUSORDREF
    LNUMLINCLI  = [F:ZSOP]ZNUMLINCLI
  Endif
  Close Local File [ZSOP]
Return

##################################################################
$IMPORTES
Local Decimal LTOTALBRUTO,LTOTALNETO
  If !clalev([F:ZSDD]) Then : Local File SDELIVERYD [F:ZSDD] : Endif
  Filter [F:ZSDD] Where SDHNUM = [F:SDH]SDHNUM
  For [F:ZSDD]
    LTOTALBRUTO += [F:ZSDD]GROPRI * [F:ZSDD]QTY
    LTOTALNETO  += [F:ZSDD]NETPRI * [F:ZSDD]QTY
  Next
  Filter [F:ZSDD]
  Close Local File [ZSDD]
Return

##################################################################
$ELEMFACT
Local Decimal DTOPOR,DTOIMP,TRAPOR,TRAIMP,DPPPOR,DPPIMP,DFAPOR,DFAIMP

  If !clalev([F:ZSVF]) Then : Local File SVCRFOOT [F:ZSVF] : Endif
  # dto
  Read [F:ZSVF]SVF0 = [F:SDH]SDHNUM;2;1
  If !fstat Then
    DTOPOR = [F:ZSVF]DTAAMT
    DTOIMP = [F:ZSVF]DTANOT
  Endif
  # transporte
  Read [F:ZSVF]SVF0 = [F:SDH]SDHNUM;2;2
  If !fstat Then
    TRAPOR = [F:ZSVF]DTAAMT
    TRAIMP = [F:ZSVF]DTANOT
  Endif
  # dto pp
  Read [F:ZSVF]SVF0 = [F:SDH]SDHNUM;2;3
  If !fstat Then
    DPPPOR = [F:ZSVF]DTAAMT
    DPPIMP = [F:ZSVF]DTANOT
  Endif
  # fac.anticipo
  Read [F:ZSVF]SVF0 = [F:SDH]SDHNUM;2;4
  If !fstat Then
    DFAPOR = [F:ZSVF]DTAAMT
    DFAIMP = [F:ZSVF]DTANOT
  Endif
  Close Local File [ZSVF]
Return

##################################################################
$IMPUESTOS
Local Decimal BIMP,IVAPOR,IVAIMP
Local Decimal RECPOR,RECIMP

  If !clalev([F:ZSVV]) Then : Local File SVCRVAT [F:ZSVV] : Endif

  # iva
  Filter [F:ZSVV] Where VCRTYP = 2 and VCRNUM = [F:SDH]SDHNUM and VATTYP = 1
  Read [F:ZSVV] First
  If !fstat Then
    BIMP    = [F:ZSVV]BASTAX
    IVAPOR  = [F:ZSVV]VATRAT
    IVAIMP  = [F:ZSVV]AMTTAX
  Endif
  Filter [F:ZSVV]

  # recargo equivalencia
  Filter [F:ZSVV] Where VCRTYP = 2 and VCRNUM = [F:SDH]SDHNUM and VATTYP = 2
  Read [F:ZSVV] First
  If !fstat Then
    RECPOR  = [F:ZSVV]VATRAT
    RECIMP  = [F:ZSVV]AMTTAX
  Endif
  Filter [F:ZSVV]

  Close Local File [ZSVV]

Return

##################################################################
$OBSERVACIONES
Local Clbfile LOBSER1

  If !clalev([F:ZTCB]) Then : Local File TEXCLOB [F:ZTCB] : Endif
  Read [F:ZTCB]TXC0 = [F:SDH]SDHTEX1
  If !fstat Then
    LOBSER1 = [F:ZTCB]TEXTE
    If instr(1,[F:ZTCB]TEXTE,chr$(10)) <> 0 and instr(1,[F:ZTCB]TEXTE,chr$(13)) <> 0 Then
      LOBSER1 = func ZAULIB01.REPLACE(LOBSER1,chr$(13)+chr$(10),"\n")
    Elsif instr(1,[F:ZTCB]TEXTE,chr$(10)) <> 0 and instr(1,[F:ZTCB]TEXTE,chr$(13)) = 0 Then
      LOBSER1 = func ZAULIB01.REPLACE(LOBSER1,chr$(10),"\n")
    Elsif instr(1,[F:ZTCB]TEXTE,chr$(10)) = 0 and instr(1,[F:ZTCB]TEXTE,chr$(13)) <> 0 Then
      LOBSER1 = func ZAULIB01.REPLACE(LOBSER1,chr$(13),"\n")
    Endif
  Endif
  Close Local File [ZTCB]
Return

##################################################################
$ESC_REGISTRO
Wrseq [F:SDH]BPCORD;                                  Using [SDH] # cliente
Wrseq MOTE;                                           Using [SDH] # mote
Wrseq [F:SDH]SDHNUM;                                  Using [SDH] # n_alb
Wrseq [F:SDD]SDDLIN;                                  Using [SDH] # n_lin
Wrseq format$("DZ:DD[/]MM[/]YYYY",[F:SDH]SHIDAT);     Using [SDH] # fecha
Wrseq [F:SDD]ITMREF;                                  Using [SDH] # inventario
Wrseq [F:SDD]ZITMDES2;                                Using [SDH] # familia
Wrseq DESCRIPCION3;                                   Using [SDH] # norma
Wrseq [F:SDD]QTY;                                     Using [SDH] # cantidad
Wrseq LUNIDADPRECIO;                                  Using [SDH] # unidad precio
Wrseq [F:SDH]CUR;                                     Using [SDH] # divisa
Wrseq ctrans(num$(LPRECIOCLIENTE),".",",");           Using [SDH] # precio cliente
Wrseq ctrans(num$([F:SDD]DISCRGVAL1),".",",");        Using [SDH] # dto
Wrseq ctrans(num$(([F:SDD]NETPRI*100)),".",",");      Using [SDH] # precio_neto
Wrseq ctrans(num$(([F:SDD]CPRPRI*100)),".",",");      Using [SDH] # coste
Wrseq ctrans(num$([F:SDD]NETPRINOT*[F:SDD]QTY),".",",");    Using [SDH] # importe
Wrseq ctrans(num$([F:SDD]PFM*[F:SDD]QTY),".",",");    Using [SDH] # margen
# 06.302.184.ini
#Wrseq ctrans(num$(LPESO),".",",");                    Using [SDH] # peso
Wrseq ctrans(num$(LPESOLIN),".",",");                 Using [SDH] # peso
# 06.302.184.fin
Wrseq UBIC;                                           Using [SDH] # ubic
Wrseq LOTE;                                           Using [SDH] # lote
Wrseq [F:SDH]BPTNUM;                                  Using [SDH] # ag_trans
Wrseq NOMBRE_AG;                                      Using [SDH] # nombre_ag
Wrseq [F:SDH]ZTIPOPEDSGA;                             Using [SDH] # sector
Wrseq LGRANEL;                                        Using [SDH] # granel
Wrseq LBPSLOT;                                        Using [SDH] # lote proveedor
Wrseq BPSNUML;                                        Using [SDH] # proveedor (del lote)
Wrseq REFERENCIA;                                     Using [SDH] # referencia artículo cliente
Wrseq DESCARTCLI;                                     Using [SDH] # descripción artículo cliente
Wrseq ZMASCARA;                                       Using [SDH] # descripción ventas de la nueva tabla máscaras
Wrseq [F:SDD]ZCUSORDREF;                              Using [SDH] # cód.pedido cliente
Wrseq [F:SDD]ZNUMLINCLI;                              Using [SDH] # nº línea pedido cli
Wrseq [F:SDD]ZUSRSERV                                 Using [SDH] # preparador                            # 06.302.184.new

Return

##################################################################
$ESC_REGISTRO_CAB
Wrseq [F:SDH]SDHNUM;                                  Using [SDH] # n_alb
Wrseq format$("DZ:DD[/]MM[/]YYYY",[F:SDH]SHIDAT);     Using [SDH] # fecha
Wrseq [F:SDH]BPCORD;                                  Using [SDH] # cliente
Wrseq MOTE;                                           Using [SDH] # mote
Wrseq PROVEEDOR;                                      Using [SDH] # proveedor
Wrseq [F:SDH]BPDNAM(0);                               Using [SDH] # rsoc
Wrseq [F:SDH]BPDNAM(1);                               Using [SDH] # nom
Wrseq [F:SDH]BPAADD;                                  Using [SDH] # dir
Wrseq DESC_DIREC;                                     Using [SDH] # descripción dirección
Wrseq DIREC1;                                         Using [SDH] # descripción dirección
Wrseq DIREC2;                                         Using [SDH] # descripción dirección
Wrseq CP;                                             Using [SDH] # cp
Wrseq POB;                                            Using [SDH] # pob
Wrseq PRO;                                            Using [SDH] # pro
Wrseq NIF;                                            Using [SDH] # nif
Wrseq PAIS;                                           Using [SDH] # país
Wrseq [F:SDH]EECICT;                                  Using [SDH] # incoterm
Wrseq REPRE;                                          Using [SDH] # repre
Wrseq ctrans(num$([F:SDD]REPRAT1),".",",");           Using [SDH] # comi
Wrseq [F:SDH]CUR;                                     Using [SDH] # moneda
Wrseq DESC_MONEDA;                                    Using [SDH] # desc_moneda
Wrseq num$([F:SDH]CHGTYP);                            Using [SDH] # unidad_cambio
Wrseq ctrans(num$(CAMBIO),".",",");                   Using [SDH] # cambio
Wrseq [F:SDH]PTE;                                     Using [SDH] # forma_de_pago
#Wrseq "1er Giro";                                     Using [SDH] # 1er_giro
#Wrseq "Intervalo";                                    Using [SDH] # intervalo
#Wrseq "N_giros";                                      Using [SDH] # n_giros
#Wrseq "DP_1";                                         Using [SDH] # dp_1
#Wrseq "DP_2";                                         Using [SDH] # dp_2
#Wrseq "DP_3";                                         Using [SDH] # dp_3
#Wrseq "Fin_mes";                                      Using [SDH] # fin_mes
Wrseq [F:SDH]BPCINV;                                  Using [SDH] # cli_fra
Wrseq [F:SDH]BPTNUM;                                  Using [SDH] # ag_trans
Wrseq NOMBRE_AG;                                      Using [SDH] # nombre_ag
Wrseq [F:SDH]CREUSR;                                  Using [SDH] # usuario
#Wrseq "Almacén";                                      Using [SDH] # almacen
Wrseq [F:SDH]ZTIPOPEDSGA;                             Using [SDH] # zona (tip.ped.SGA)
Wrseq ctrans(num$(LPESO),".",",");                    Using [SDH] # peso
Wrseq ctrans(num$(LPESOMANUAL),".",",");              Using [SDH] # peso_manual
Wrseq ctrans(num$([F:SDH]PACNBR),".",",");            Using [SDH] # bultos
Wrseq ctrans(num$(LTOTALNETO),".",",");               Using [SDH] # total_bruto (me dice Sergi que hay que pasar el total neto)
#Wrseq "Portes_Pag-Deb";                               Using [SDH] # portes_pag-deb
Wrseq ctrans(num$(TRAIMP),".",",");                   Using [SDH] # imp_portes
#Wrseq "Imp_Embalajes";                                Using [SDH] # imp_embalajes
Wrseq ctrans(num$(DPPPOR),".",",");                   Using [SDH] # dtopp
Wrseq ctrans(num$(DPPIMP),".",",");                   Using [SDH] # imp_dtopp
#Wrseq "RECFIN";                                       Using [SDH] # recfin
#Wrseq "Imp_recfin";                                   Using [SDH] # imp_recfin
Wrseq ctrans(num$(BIMP),".",",");                     Using [SDH] # base_imp
Wrseq ctrans(num$(IVAPOR),".",",");                   Using [SDH] # iva
Wrseq ctrans(num$(IVAIMP),".",",");                   Using [SDH] # imp_iva
#Wrseq ctrans(num$(RECPOR),".",",");                   Using [SDH] # recequi
#Wrseq ctrans(num$(RECIMP),".",",");                   Using [SDH] # imp_recequi
Wrseq ctrans(num$(BIMP+IVAIMP),".",",");              Using [SDH] # total_neto
Wrseq LOBSER1                                         Using [SDH] # obser_1
#Wrseq [F:SDH]SDHTEX2;                                 Using [SDH] # obser_2
#Wrseq ""                                              Using [SDH] # obser_3

Return

##################################################################
$ESC_REGISTRO_LIN
#lineas
Wrseq [F:SDD]SDDLIN;                                  Using [SDH] # n_lin
Wrseq [F:SDD]ITMREF;                                  Using [SDH] # inventario
Wrseq LCODPEDCLI;                                     Using [SDH] # pedido
Wrseq REFERENCIA;                                     Using [SDH] # referencia
Wrseq [F:SDD]ZITMDES2;                                Using [SDH] # familia
Wrseq DESCRIPCION3;                                   Using [SDH] # norma
Wrseq [F:SDD]QTY;                                     Using [SDH] # cantidad
Wrseq ctrans(num$(LPRECIOCLIENTE),".",",");           Using [SDH] # precio cliente
Wrseq LUNIDADPRECIO;                                  Using [SDH] # unidad precio
Wrseq [F:SDH]CUR;                                     Using [SDH] # divisa
Wrseq ctrans(num$([F:SDD]DISCRGVAL1),".",",");        Using [SDH] # dto
Wrseq ctrans(num$(([F:SDD]NETPRI*100)),".",",");      Using [SDH] # precio_neto
Wrseq ctrans(num$([F:SDD]NETPRINOT*[F:SDD]QTY),".",",");    Using [SDH] # importe
Wrseq ctrans(num$(([F:SDD]CPRPRI*100)),".",",");      Using [SDH] # costem_eur
Wrseq ctrans(num$(LPESOLIN),".",",");                 Using [SDH] # peso
#Wrseq [F:SDD]LOC;                                     Using [SDH] # ubic
#Wrseq [F:SDD]LOT;                                     Using [SDH] # lot
Wrseq UBIC;                                           Using [SDH] # ubic
Wrseq LOTE;                                           Using [SDH] # lote
Wrseq [F:SDH]ZTIPOPEDSGA;                             Using [SDH] # sector
Wrseq LGRANEL;                                        Using [SDH] # granel
Wrseq LBPSLOT;                                        Using [SDH] # lote proveedor
Wrseq BPSNUML;                                        Using [SDH] #
Wrseq DESCARTCLI;                                     Using [SDH] # descripción artículo cliente
Wrseq REFERENCIA;                                     Using [SDH] # referencia artículo cliente
Wrseq ZMASCARA;                                       Using [SDH] # descripción ventas de la nueva tabla máscaras
Wrseq [F:SDD]ZUSRSERV;                                Using [SDH] # preparador_1
#Wrseq "";                                             Using [SDH] # preparador_2
Wrseq [F:SDD]ZCUSORDREF;                              Using [SDH] # cód.pedido cliente
Wrseq [F:SDD]ZNUMLINCLI                               Using [SDH] # nº línea pedido cli

Return

###################################################################
$CLIENTE_TRANSPORTISTA
Local Char MOTE(250), NOMBRE_AG(250), NIF(250), NOMBRE_AG(250)

#CLIENTE
Filter [F:BPR] Where BPRNUM = [F:SDH]BPCORD
Read  [F:BPR] First
If !fstat Then
  MOTE       = [F:BPR]BPRSHO
  NOMBRE_AG  = [F:BPR]BPRNAM(0)
  NIF        = [F:BPR]CRN
Endif

#TRANSPORTISTA
If !clalev([F:BPR1]): Local File BPARTNER[BPR1]: Endif
Filter [F:BPR1] Where BPRNUM = [F:SDH]BPTNUM
Read  [F:BPR1] First
If !fstat Then
  NOMBRE_AG = [F:BPR1]BPRNAM
Endif

Return

###################################################################
$PROVEEDOR
Local Char PROVEEDOR(250), REPRE(250)

Filter [F:BPC] Where BPCNUM = [F:SDH]BPCINV
Read  [F:BPC] First
If !fstat Then
  PROVEEDOR = [F:BPC]BPCBPSNUM
  REPRE     = [F:BPC]REP
Endif

Return

###################################################################
$DIRECCION
Local Char DESC_DIREC(250), CP(250), POB(250), PRO(250), PAIS(250),DIREC1(250),DIREC2(250),DIREC3(250)

#Filter [F:BPA] Where BPANUM = [F:SDH]BPCORD
#Read  [F:BPA] First
#If !fstat Then
#  DESC_DIREC = [F:BPA]BPADES
#  DIREC1     = [F:BPA]BPAADDLIG(0)
#  DIREC2     = [F:BPA]BPAADDLIG(1)
#  DIREC3     = [F:BPA]BPAADDLIG(2)
#  CP         = [F:BPA]POSCOD
#  POB        = [F:BPA]CTY
#  PRO        = [F:BPA]SAT
#  PAIS       = [F:BPA]CRY
#Endif
  DESC_DIREC = [F:SDH]BPDADDLIG(0)
  DIREC1     = [F:SDH]BPDADDLIG(1)
  DIREC2     = [F:SDH]BPDADDLIG(2)
  CP         = [F:SDH]BPDPOSCOD
  POB        = [F:SDH]BPDCTY
  PRO        = [F:SDH]BPDSAT
  PAIS       = [F:SDH]BPDCRY

Return

###################################################################
$MONEDA
Local Char DESC_MONEDA(250)
Local Decimal CAMBIO

Filter [F:TCU] Where CUR = [F:SDH]CUR
Read  [F:TCU] First
If !fstat Then
  DESC_MONEDA = [F:TCU]CURDES
Endif

If [F:SDH]CUR <> 'EUR'
  Filter [F:TCH] Where CUR = [F:SDH]CUR and CURDEN = 'EUR'
  Read [F:TCH] First
  If !fstat
    CAMBIO = [F:TCH]REVCOURS
  Else
    CAMBIO = 1
  Endif
Else
    CAMBIO = 1
Endif

Return

###################################################################
